{
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar app = require('./app');\n\nvar port = process.env.PORT || 3001;\nvar server = app.listen(port, function () {\n  console.log('Express server listening on port ' + port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiYXBwIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBRUEsSUFBTUMsR0FBRyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFuQjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUEsSUFBTUMsTUFBTSxHQUFHTCxHQUFHLENBQUNNLE1BQUosQ0FBV0wsSUFBWCxFQUFpQixZQUFNO0FBQ3BDTSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBc0NQLElBQWxEO0FBQ0QsQ0FGYyxDQUFmIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwLyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG5jb25zdCBhcHAgPSByZXF1aXJlKCcuL2FwcCcpO1xuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMTtcblxuY29uc3Qgc2VydmVyID0gYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdFeHByZXNzIHNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAnICsgcG9ydCk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "server",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA,IAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,CAAWL,IAAX,EAAiB,YAAM;AACpCM,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAsCP,IAAlD;AACD,CAFc,CAAf",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "sourcesContent": [
        "require('dotenv').config();\n\nconst app = require('./app');\nconst port = process.env.PORT || 3001;\n\nconst server = app.listen(port, () => {\n  console.log('Express server listening on port ' + port);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581238322737
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\n\nvar cors = require('cors');\n\nvar bodyParser = require('body-parser');\n\nvar fileUpload = require('express-fileupload');\n\nvar db = require('./db');\n\nvar maps = require('./maps');\n\nvar logs = require('./logs'); // Setting Endpoint (Middleware)\n\n\napp.use(cors());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json());\napp.use(fileUpload()); // Endpoints\n\napp.get('/', function (req, res) {\n  return res.send('LOLLL');\n});\napp.use('/maps', maps);\napp.use('/logs', logs);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsImNvcnMiLCJib2R5UGFyc2VyIiwiZmlsZVVwbG9hZCIsImRiIiwibWFwcyIsImxvZ3MiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxHQUFHLEdBQUdGLE9BQU8sRUFBbkI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxVQUFVLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLG9CQUFELENBQTFCOztBQUNBLElBQU1LLEVBQUUsR0FBR0wsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBRUEsSUFBTU0sSUFBSSxHQUFHTixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxRQUFELENBQXBCLEMsQ0FDQTs7O0FBQ0FDLEdBQUcsQ0FBQ08sR0FBSixDQUFRTixJQUFJLEVBQVo7QUFDQUQsR0FBRyxDQUFDTyxHQUFKLENBQVFMLFVBQVUsQ0FBQ00sVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FULEdBQUcsQ0FBQ08sR0FBSixDQUFRTCxVQUFVLENBQUNRLElBQVgsRUFBUjtBQUNBVixHQUFHLENBQUNPLEdBQUosQ0FBUUosVUFBVSxFQUFsQixFLENBRUE7O0FBQ0FILEdBQUcsQ0FBQ1csR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUN6QixTQUFPQSxHQUFHLENBQUNDLElBQUosQ0FBUyxPQUFULENBQVA7QUFDRCxDQUZEO0FBSUFkLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUJGLElBQWpCO0FBQ0FMLEdBQUcsQ0FBQ08sR0FBSixDQUFRLE9BQVIsRUFBaUJELElBQWpCO0FBRUFTLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmhCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5jb25zdCBmaWxlVXBsb2FkID0gcmVxdWlyZSgnZXhwcmVzcy1maWxldXBsb2FkJyk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4vZGInKTtcblxuY29uc3QgbWFwcyA9IHJlcXVpcmUoJy4vbWFwcycpO1xuY29uc3QgbG9ncyA9IHJlcXVpcmUoJy4vbG9ncycpO1xuLy8gU2V0dGluZyBFbmRwb2ludCAoTWlkZGxld2FyZSlcbmFwcC51c2UoY29ycygpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShmaWxlVXBsb2FkKCkpO1xuXG4vLyBFbmRwb2ludHNcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zZW5kKCdMT0xMTCcpO1xufSk7XG5cbmFwcC51c2UoJy9tYXBzJywgbWFwcyk7XG5hcHAudXNlKCcvbG9ncycsIGxvZ3MpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "cors",
        "bodyParser",
        "fileUpload",
        "db",
        "maps",
        "logs",
        "use",
        "urlencoded",
        "extended",
        "json",
        "get",
        "req",
        "res",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAMK,EAAE,GAAGL,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAMM,IAAI,GAAGN,OAAO,CAAC,QAAD,CAApB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,QAAD,CAApB,C,CACA;;;AACAC,GAAG,CAACO,GAAJ,CAAQN,IAAI,EAAZ;AACAD,GAAG,CAACO,GAAJ,CAAQL,UAAU,CAACM,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAT,GAAG,CAACO,GAAJ,CAAQL,UAAU,CAACQ,IAAX,EAAR;AACAV,GAAG,CAACO,GAAJ,CAAQJ,UAAU,EAAlB,E,CAEA;;AACAH,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,SAAOA,GAAG,CAACC,IAAJ,CAAS,OAAT,CAAP;AACD,CAFD;AAIAd,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBF,IAAjB;AACAL,GAAG,CAACO,GAAJ,CAAQ,OAAR,EAAiBD,IAAjB;AAEAS,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\nconst cors = require('cors');\nconst bodyParser = require('body-parser');\nconst fileUpload = require('express-fileupload');\nconst db = require('./db');\n\nconst maps = require('./maps');\nconst logs = require('./logs');\n// Setting Endpoint (Middleware)\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.use(fileUpload());\n\n// Endpoints\napp.get('/', (req, res) => {\n  return res.send('LOLLL');\n});\n\napp.use('/maps', maps);\napp.use('/logs', logs);\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586679069064
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar admin = require('firebase-admin');\n\nvar serviceAccount = require('../logicgame-9f4ca-firebase-adminsdk-80vw9-945285eefb.json');\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  databaseURL: 'https://logicgame-9f4ca.firebaseio.com'\n});\nvar db = admin.firestore();\nvar settings = {\n  timestampsInSnapshots: true\n};\ndb.settings(settings);\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImFkbWluIiwicmVxdWlyZSIsInNlcnZpY2VBY2NvdW50IiwiaW5pdGlhbGl6ZUFwcCIsImNyZWRlbnRpYWwiLCJjZXJ0IiwiZGF0YWJhc2VVUkwiLCJkYiIsImZpcmVzdG9yZSIsInNldHRpbmdzIiwidGltZXN0YW1wc0luU25hcHNob3RzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFuQjs7QUFFQSxJQUFJQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyw0REFBRCxDQUE1Qjs7QUFFQUQsS0FBSyxDQUFDRyxhQUFOLENBQW9CO0FBQ2xCQyxFQUFBQSxVQUFVLEVBQUVKLEtBQUssQ0FBQ0ksVUFBTixDQUFpQkMsSUFBakIsQ0FBc0JILGNBQXRCLENBRE07QUFFbEJJLEVBQUFBLFdBQVcsRUFBRTtBQUZLLENBQXBCO0FBS0EsSUFBSUMsRUFBRSxHQUFHUCxLQUFLLENBQUNRLFNBQU4sRUFBVDtBQUNBLElBQU1DLFFBQVEsR0FBRztBQUFFQyxFQUFBQSxxQkFBcUIsRUFBRTtBQUF6QixDQUFqQjtBQUNBSCxFQUFFLENBQUNFLFFBQUgsQ0FBWUEsUUFBWjtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJMLEVBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhZG1pbiA9IHJlcXVpcmUoJ2ZpcmViYXNlLWFkbWluJyk7XG5cbnZhciBzZXJ2aWNlQWNjb3VudCA9IHJlcXVpcmUoJy4uL2xvZ2ljZ2FtZS05ZjRjYS1maXJlYmFzZS1hZG1pbnNkay04MHZ3OS05NDUyODVlZWZiLmpzb24nKTtcblxuYWRtaW4uaW5pdGlhbGl6ZUFwcCh7XG4gIGNyZWRlbnRpYWw6IGFkbWluLmNyZWRlbnRpYWwuY2VydChzZXJ2aWNlQWNjb3VudCksXG4gIGRhdGFiYXNlVVJMOiAnaHR0cHM6Ly9sb2dpY2dhbWUtOWY0Y2EuZmlyZWJhc2Vpby5jb20nXG59KTtcblxudmFyIGRiID0gYWRtaW4uZmlyZXN0b3JlKCk7XG5jb25zdCBzZXR0aW5ncyA9IHsgdGltZXN0YW1wc0luU25hcHNob3RzOiB0cnVlIH07XG5kYi5zZXR0aW5ncyhzZXR0aW5ncyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "admin",
        "require",
        "serviceAccount",
        "initializeApp",
        "credential",
        "cert",
        "databaseURL",
        "db",
        "firestore",
        "settings",
        "timestampsInSnapshots",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,4DAAD,CAA5B;;AAEAD,KAAK,CAACG,aAAN,CAAoB;AAClBC,EAAAA,UAAU,EAAEJ,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsBH,cAAtB,CADM;AAElBI,EAAAA,WAAW,EAAE;AAFK,CAApB;AAKA,IAAIC,EAAE,GAAGP,KAAK,CAACQ,SAAN,EAAT;AACA,IAAMC,QAAQ,GAAG;AAAEC,EAAAA,qBAAqB,EAAE;AAAzB,CAAjB;AACAH,EAAE,CAACE,QAAH,CAAYA,QAAZ;AAEAE,MAAM,CAACC,OAAP,GAAiBL,EAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/",
      "sourcesContent": [
        "var admin = require('firebase-admin');\n\nvar serviceAccount = require('../logicgame-9f4ca-firebase-adminsdk-80vw9-945285eefb.json');\n\nadmin.initializeApp({\n  credential: admin.credential.cert(serviceAccount),\n  databaseURL: 'https://logicgame-9f4ca.firebaseio.com'\n});\n\nvar db = admin.firestore();\nconst settings = { timestampsInSnapshots: true };\ndb.settings(settings);\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581095092136
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar mapCRUD = require('./mapCRUD.js');\n\nvar ganerateMap = require('./maps.js');\n\nrouter.use(mapCRUD);\nrouter.use(ganerateMap);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwibWFwQ1JVRCIsImdhbmVyYXRlTWFwIiwidXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsSUFBTUMsT0FBTyxHQUFHSCxPQUFPLENBQUMsY0FBRCxDQUF2Qjs7QUFDQSxJQUFNSSxXQUFXLEdBQUdKLE9BQU8sQ0FBQyxXQUFELENBQTNCOztBQUVBQyxNQUFNLENBQUNJLEdBQVAsQ0FBV0YsT0FBWDtBQUNBRixNQUFNLENBQUNJLEdBQVAsQ0FBV0QsV0FBWDtBQUVBRSxNQUFNLENBQUNDLE9BQVAsR0FBaUJOLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwL21hcHMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmNvbnN0IG1hcENSVUQgPSByZXF1aXJlKCcuL21hcENSVUQuanMnKTtcbmNvbnN0IGdhbmVyYXRlTWFwID0gcmVxdWlyZSgnLi9tYXBzLmpzJyk7XG5cbnJvdXRlci51c2UobWFwQ1JVRCk7XG5yb3V0ZXIudXNlKGdhbmVyYXRlTWFwKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "mapCRUD",
        "ganerateMap",
        "use",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,OAAO,GAAGH,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,WAAD,CAA3B;;AAEAC,MAAM,CAACI,GAAP,CAAWF,OAAX;AACAF,MAAM,CAACI,GAAP,CAAWD,WAAX;AAEAE,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\n\nconst mapCRUD = require('./mapCRUD.js');\nconst ganerateMap = require('./maps.js');\n\nrouter.use(mapCRUD);\nrouter.use(ganerateMap);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585806839225
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/mapCRUD.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/mapCRUD.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/mapCRUD.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/mapCRUD.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "mapCRUD.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar db = require('../db');\n\nrouter.post('/create', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var addDoc;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            addDoc = db.collection('wholesalers').add({\n              name: 'Tokyo',\n              country: 'Japan'\n            }).then(function (ref) {\n              console.log('Added document with ID: ', ref.id);\n            });\n            return _context.abrupt(\"return\", res.send());\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.post('/create-shop', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var addDoc;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            addDoc = db.collection('wholesalers').add({\n              name: 'Tokyo',\n              country: 'Japan'\n            }).then(function (ref) {\n              console.log('Added document with ID: ', ref.id);\n            });\n            return _context2.abrupt(\"return\", res.send());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.get('/get', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", res.send('LOLLL'));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.post('/update', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", res.send());\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nrouter.post('/delete', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", res.send());\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcENSVUQuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJkYiIsInBvc3QiLCJyZXEiLCJyZXMiLCJhZGREb2MiLCJjb2xsZWN0aW9uIiwiYWRkIiwibmFtZSIsImNvdW50cnkiLCJ0aGVuIiwicmVmIiwiY29uc29sZSIsImxvZyIsImlkIiwic2VuZCIsImdldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQWxCOztBQUVBQyxNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaO0FBQUEscUVBQXVCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2pCQyxZQUFBQSxNQURpQixHQUNSSixFQUFFLENBQ1pLLFVBRFUsQ0FDQyxhQURELEVBRVZDLEdBRlUsQ0FFTjtBQUNIQyxjQUFBQSxJQUFJLEVBQUUsT0FESDtBQUVIQyxjQUFBQSxPQUFPLEVBQUU7QUFGTixhQUZNLEVBTVZDLElBTlUsQ0FNTCxVQUFBQyxHQUFHLEVBQUk7QUFDWEMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVosRUFBd0NGLEdBQUcsQ0FBQ0csRUFBNUM7QUFDRCxhQVJVLENBRFE7QUFBQSw2Q0FVZFYsR0FBRyxDQUFDVyxJQUFKLEVBVmM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBdkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFhQWhCLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGNBQVo7QUFBQSxzRUFBNEIsa0JBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDdEJDLFlBQUFBLE1BRHNCLEdBQ2JKLEVBQUUsQ0FDWkssVUFEVSxDQUNDLGFBREQsRUFFVkMsR0FGVSxDQUVOO0FBQ0hDLGNBQUFBLElBQUksRUFBRSxPQURIO0FBRUhDLGNBQUFBLE9BQU8sRUFBRTtBQUZOLGFBRk0sRUFNVkMsSUFOVSxDQU1MLFVBQUFDLEdBQUcsRUFBSTtBQUNYQyxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixFQUF3Q0YsR0FBRyxDQUFDRyxFQUE1QztBQUNELGFBUlUsQ0FEYTtBQUFBLDhDQVVuQlYsR0FBRyxDQUFDVyxJQUFKLEVBVm1COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTVCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBWUFoQixNQUFNLENBQUNpQixHQUFQLENBQVcsTUFBWDtBQUFBLHNFQUFtQixrQkFBT2IsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw4Q0FDVkEsR0FBRyxDQUFDVyxJQUFKLENBQVMsT0FBVCxDQURVOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQW5COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0FoQixNQUFNLENBQUNHLElBQVAsQ0FBWSxTQUFaO0FBQUEsc0VBQXVCLGtCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDhDQUNkQSxHQUFHLENBQUNXLElBQUosRUFEYzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF2Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBaEIsTUFBTSxDQUFDRyxJQUFQLENBQVksU0FBWjtBQUFBLHNFQUF1QixrQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSw4Q0FDZEEsR0FBRyxDQUFDVyxJQUFKLEVBRGM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBdkI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2p1bXB3bWsvRG9jdW1lbnRzL1llYXI0XzIvc2VuaW9yX3Byb2plY3QvbG9naWNHYW1lV2l0aEJsb2NrbHktYmFja2VuZC9hcHAvbWFwcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGInKTtcblxucm91dGVyLnBvc3QoJy9jcmVhdGUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdmFyIGFkZERvYyA9IGRiXG4gICAgLmNvbGxlY3Rpb24oJ3dob2xlc2FsZXJzJylcbiAgICAuYWRkKHtcbiAgICAgIG5hbWU6ICdUb2t5bycsXG4gICAgICBjb3VudHJ5OiAnSmFwYW4nXG4gICAgfSlcbiAgICAudGhlbihyZWYgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0FkZGVkIGRvY3VtZW50IHdpdGggSUQ6ICcsIHJlZi5pZCk7XG4gICAgfSk7XG4gIHJldHVybiByZXMuc2VuZCgpO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvY3JlYXRlLXNob3AnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdmFyIGFkZERvYyA9IGRiXG4gICAgLmNvbGxlY3Rpb24oJ3dob2xlc2FsZXJzJylcbiAgICAuYWRkKHtcbiAgICAgIG5hbWU6ICdUb2t5bycsXG4gICAgICBjb3VudHJ5OiAnSmFwYW4nXG4gICAgfSlcbiAgICAudGhlbihyZWYgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0FkZGVkIGRvY3VtZW50IHdpdGggSUQ6ICcsIHJlZi5pZCk7XG4gICAgfSk7XG4gIHJldHVybiByZXMuc2VuZCgpO1xufSk7XG5yb3V0ZXIuZ2V0KCcvZ2V0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHJldHVybiByZXMuc2VuZCgnTE9MTEwnKTtcbn0pO1xucm91dGVyLnBvc3QoJy91cGRhdGUnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgcmV0dXJuIHJlcy5zZW5kKCk7XG59KTtcbnJvdXRlci5wb3N0KCcvZGVsZXRlJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHJldHVybiByZXMuc2VuZCgpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "mapCRUD.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "post",
        "req",
        "res",
        "addDoc",
        "collection",
        "add",
        "name",
        "country",
        "then",
        "ref",
        "console",
        "log",
        "id",
        "send",
        "get",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGH,OAAO,CAAC,OAAD,CAAlB;;AAEAC,MAAM,CAACG,IAAP,CAAY,SAAZ;AAAA,qEAAuB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,MADiB,GACRJ,EAAE,CACZK,UADU,CACC,aADD,EAEVC,GAFU,CAEN;AACHC,cAAAA,IAAI,EAAE,OADH;AAEHC,cAAAA,OAAO,EAAE;AAFN,aAFM,EAMVC,IANU,CAML,UAAAC,GAAG,EAAI;AACXC,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAG,CAACG,EAA5C;AACD,aARU,CADQ;AAAA,6CAUdV,GAAG,CAACW,IAAJ,EAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAaAhB,MAAM,CAACG,IAAP,CAAY,cAAZ;AAAA,sEAA4B,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,MADsB,GACbJ,EAAE,CACZK,UADU,CACC,aADD,EAEVC,GAFU,CAEN;AACHC,cAAAA,IAAI,EAAE,OADH;AAEHC,cAAAA,OAAO,EAAE;AAFN,aAFM,EAMVC,IANU,CAML,UAAAC,GAAG,EAAI;AACXC,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAG,CAACG,EAA5C;AACD,aARU,CADa;AAAA,8CAUnBV,GAAG,CAACW,IAAJ,EAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAYAhB,MAAM,CAACiB,GAAP,CAAW,MAAX;AAAA,sEAAmB,kBAAOb,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACVA,GAAG,CAACW,IAAJ,CAAS,OAAT,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAGAhB,MAAM,CAACG,IAAP,CAAY,SAAZ;AAAA,sEAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACdA,GAAG,CAACW,IAAJ,EADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAGAhB,MAAM,CAACG,IAAP,CAAY,SAAZ;AAAA,sEAAuB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACdA,GAAG,CAACW,IAAJ,EADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;AAIAE,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst db = require('../db');\n\nrouter.post('/create', async (req, res) => {\n  var addDoc = db\n    .collection('wholesalers')\n    .add({\n      name: 'Tokyo',\n      country: 'Japan'\n    })\n    .then(ref => {\n      console.log('Added document with ID: ', ref.id);\n    });\n  return res.send();\n});\n\nrouter.post('/create-shop', async (req, res) => {\n  var addDoc = db\n    .collection('wholesalers')\n    .add({\n      name: 'Tokyo',\n      country: 'Japan'\n    })\n    .then(ref => {\n      console.log('Added document with ID: ', ref.id);\n    });\n  return res.send();\n});\nrouter.get('/get', async (req, res) => {\n  return res.send('LOLLL');\n});\nrouter.post('/update', async (req, res) => {\n  return res.send();\n});\nrouter.post('/delete', async (req, res) => {\n  return res.send();\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581098872223
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/maps.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/maps.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/maps.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/maps.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "maps.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _generate_map = require(\"./generate_map\");\n\nvar _decisionMakingCommands = require(\"./decisionMakingCommands\");\n\nvar _utils = require(\"../utils/utils\");\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar db = require('../db'); // const ref = await db.collection('retailer').add(retailer)\n//   console.log(ref.id)\n//   const documentRef = db.collection('retailer').doc(ref.id)\n//   const userRef = await db.collection('users').doc(uid).set({\n//     username: retailer['username'],\n//     ref: documentRef\n//   })\n// var addDoc = db\n//     .collection('users')\n//     .add({\n//       name: 'Tokyo',\n//       country: 'Japan'\n//     })\n//     .then(ref => {\n//       console.log('Added document with ID: ', ref.id);\n//     });\n\n\nrouter.post('/get-map', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var documentRef, data, maps, player, blocks, tiles;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(req.body.level);\n            _context.next = 3;\n            return db.collection('maps').doc(req.body.level.toString()).get();\n\n          case 3:\n            documentRef = _context.sent;\n            data = documentRef.data();\n            console.log(data);\n\n            if (!data.is_done) {\n              _context.next = 15;\n              break;\n            }\n\n            data.tiles.platform = (0, _utils.objectToArr)(data.tiles.platform);\n            data.tiles.wall = (0, _utils.objectToArr)(data.tiles.wall);\n            data.tiles.enemies = (0, _utils.objectToArr)(data.tiles.enemies);\n            data.tiles.tileoverlay = (0, _utils.objectToArr)(data.tiles.tileoverlay);\n            data.tiles.floatingobj = (0, _utils.objectToArr)(data.tiles.floatingobj);\n            data.tiles.walloverlay = (0, _utils.objectToArr)(data.tiles.walloverlay);\n            data.tiles.tiles = (0, _utils.objectToArr)(data.tiles.tiles);\n            return _context.abrupt(\"return\", res.status(200).json(_objectSpread({}, data)));\n\n          case 15:\n            maps = (0, _generate_map.get_map)(data);\n            player = maps.player, blocks = maps.blocks, tiles = _objectWithoutProperties(maps, [\"player\", \"blocks\"]);\n            return _context.abrupt(\"return\", res.status(200).json({\n              tiles: tiles,\n              player: player,\n              blocks: blocks\n            }));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.post('/testtest', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var data, maps, player, blocks, tiles;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = {\n              commandLength: 0,\n              commandLengthInCondition: 5,\n              numIteration: 8,\n              numTurnInLoop: 0,\n              numberOfDistractions: 0,\n              condition_type: 'if',\n              condition_cate: 'tile',\n              is_reversed: false,\n              probs_of_actions: [0.4, 0.2, 0.2, 0, 0.2],\n              type_of_actions: 5,\n              is_done: false\n            };\n            maps = (0, _generate_map.get_map)(data);\n            player = maps.player, blocks = maps.blocks, tiles = _objectWithoutProperties(maps, [\"player\", \"blocks\"]);\n            tiles.platform = (0, _utils.arrToObject)(tiles.platform);\n            tiles.wall = (0, _utils.arrToObject)(tiles.wall);\n            tiles.enemies = (0, _utils.arrToObject)(tiles.enemies);\n            tiles.tileoverlay = (0, _utils.arrToObject)(tiles.tileoverlay);\n            tiles.floatingobj = (0, _utils.arrToObject)(tiles.floatingobj);\n            tiles.walloverlay = (0, _utils.arrToObject)(tiles.walloverlay);\n            tiles.tiles = (0, _utils.arrToObject)(tiles.tiles); // return res.status(200).json(commands);\n\n            return _context2.abrupt(\"return\", res.status(200).json({\n              tiles: tiles,\n              player: player,\n              blocks: blocks\n            }));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.get('/catagory', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('123');\n            return _context3.abrupt(\"return\", res.send('LOLLL'));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcHMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJkYiIsInBvc3QiLCJyZXEiLCJyZXMiLCJjb25zb2xlIiwibG9nIiwiYm9keSIsImxldmVsIiwiY29sbGVjdGlvbiIsImRvYyIsInRvU3RyaW5nIiwiZ2V0IiwiZG9jdW1lbnRSZWYiLCJkYXRhIiwiaXNfZG9uZSIsInRpbGVzIiwicGxhdGZvcm0iLCJ3YWxsIiwiZW5lbWllcyIsInRpbGVvdmVybGF5IiwiZmxvYXRpbmdvYmoiLCJ3YWxsb3ZlcmxheSIsInN0YXR1cyIsImpzb24iLCJtYXBzIiwicGxheWVyIiwiYmxvY2tzIiwiY29tbWFuZExlbmd0aCIsImNvbW1hbmRMZW5ndGhJbkNvbmRpdGlvbiIsIm51bUl0ZXJhdGlvbiIsIm51bVR1cm5Jbkxvb3AiLCJudW1iZXJPZkRpc3RyYWN0aW9ucyIsImNvbmRpdGlvbl90eXBlIiwiY29uZGl0aW9uX2NhdGUiLCJpc19yZXZlcnNlZCIsInByb2JzX29mX2FjdGlvbnMiLCJ0eXBlX29mX2FjdGlvbnMiLCJzZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQWxCLEMsQ0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUFDLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFVBQVo7QUFBQSxxRUFBd0IsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDdEJDLFlBQUFBLE9B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QUE7QUFBQTtBQThCQTVCLE1BQU0sQ0FBQ2EsR0FBUCxDQUFXLFdBQVg7QUFBQSxzRUFBd0Isa0JBQU9ULEdBQVAsRUFBWUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3RCQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxLQUFaO0FBRHNCLDhDQUVmRixHQUFHLENBQUNrQyxJQUFKLENBQVMsT0FBVCxDQUZlOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXhCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBS0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnpDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwL21hcHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0X21hcCB9IGZyb20gJy4vZ2VuZXJhdGVfbWFwJztcbmltcG9ydCB7IGlmX2Vsc2VfcGF0aF9jb25kaXRpb25fY29tbWFuZHNfd2l0aF9sb29wIH0gZnJvbSAnLi9kZWNpc2lvbk1ha2luZ0NvbW1hbmRzJztcbmltcG9ydCB7IGFyclRvT2JqZWN0LCBvYmplY3RUb0FyciB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcblxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2RiJyk7XG5cbi8vIGNvbnN0IHJlZiA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3JldGFpbGVyJykuYWRkKHJldGFpbGVyKVxuLy8gICBjb25zb2xlLmxvZyhyZWYuaWQpXG4vLyAgIGNvbnN0IGRvY3VtZW50UmVmID0gZGIuY29sbGVjdGlvbigncmV0YWlsZXInKS5kb2MocmVmLmlkKVxuLy8gICBjb25zdCB1c2VyUmVmID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModWlkKS5zZXQoe1xuLy8gICAgIHVzZXJuYW1lOiByZXRhaWxlclsndXNlcm5hbWUnXSxcbi8vICAgICByZWY6IGRvY3VtZW50UmVmXG4vLyAgIH0pXG4vLyB2YXIgYWRkRG9jID0gZGJcbi8vICAgICAuY29sbGVjdGlvbigndXNlcnMnKVxuLy8gICAgIC5hZGQoe1xuLy8gICAgICAgbmFtZTogJ1Rva3lvJyxcbi8vICAgICAgIGNvdW50cnk6ICdKYXBhbidcbi8vICAgICB9KVxuLy8gICAgIC50aGVuKHJlZiA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZygnQWRkZWQgZG9jdW1lbnQgd2l0aCBJRDogJywgcmVmLmlkKTtcbi8vICAgICB9KTtcblxucm91dGVyLnBvc3QoJy9nZXQtbWFwJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnNvbGUubG9nKHJlcS5ib2R5LmxldmVsKTtcbiAgY29uc3QgZG9jdW1lbnRSZWYgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdtYXBzJykuZG9jKHJlcS5ib2R5LmxldmVsLnRvU3RyaW5nKCkpLmdldCgpO1xuICBjb25zdCBkYXRhID0gZG9jdW1lbnRSZWYuZGF0YSgpO1xuXG4gIGNvbnNvbGUubG9nKGRhdGEpO1xuXG4gIGlmIChkYXRhLmlzX2RvbmUpIHtcbiAgICBkYXRhLnRpbGVzLnBsYXRmb3JtID0gb2JqZWN0VG9BcnIoZGF0YS50aWxlcy5wbGF0Zm9ybSk7XG4gICAgZGF0YS50aWxlcy53YWxsID0gb2JqZWN0VG9BcnIoZGF0YS50aWxlcy53YWxsKTtcbiAgICBkYXRhLnRpbGVzLmVuZW1pZXMgPSBvYmplY3RUb0FycihkYXRhLnRpbGVzLmVuZW1pZXMpO1xuICAgIGRhdGEudGlsZXMudGlsZW92ZXJsYXkgPSBvYmplY3RUb0FycihkYXRhLnRpbGVzLnRpbGVvdmVybGF5KTtcbiAgICBkYXRhLnRpbGVzLmZsb2F0aW5nb2JqID0gb2JqZWN0VG9BcnIoZGF0YS50aWxlcy5mbG9hdGluZ29iaik7XG4gICAgZGF0YS50aWxlcy53YWxsb3ZlcmxheSA9IG9iamVjdFRvQXJyKGRhdGEudGlsZXMud2FsbG92ZXJsYXkpO1xuICAgIGRhdGEudGlsZXMudGlsZXMgPSBvYmplY3RUb0FycihkYXRhLnRpbGVzLnRpbGVzKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyAuLi5kYXRhIH0pO1xuICB9XG5cbiAgY29uc3QgbWFwcyA9IGdldF9tYXAoZGF0YSk7XG5cbiAgY29uc3QgeyBwbGF5ZXIsIGJsb2NrcywgLi4udGlsZXMgfSA9IG1hcHM7XG5cbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdGlsZXMsIHBsYXllciwgYmxvY2tzIH0pO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvdGVzdHRlc3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgY29uc3QgZGF0YSA9IHtcbiAgICBjb21tYW5kTGVuZ3RoOiAwLFxuICAgIGNvbW1hbmRMZW5ndGhJbkNvbmRpdGlvbjogNSxcbiAgICBudW1JdGVyYXRpb246IDgsXG4gICAgbnVtVHVybkluTG9vcDogMCxcbiAgICBudW1iZXJPZkRpc3RyYWN0aW9uczogMCxcbiAgICBjb25kaXRpb25fdHlwZTogJ2lmJyxcbiAgICBjb25kaXRpb25fY2F0ZTogJ3RpbGUnLFxuICAgIGlzX3JldmVyc2VkOiBmYWxzZSxcbiAgICBwcm9ic19vZl9hY3Rpb25zOiBbMC40LCAwLjIsIDAuMiwgMCwgMC4yXSxcbiAgICB0eXBlX29mX2FjdGlvbnM6IDUsXG4gICAgaXNfZG9uZTogZmFsc2UsXG4gIH07XG5cbiAgY29uc3QgbWFwcyA9IGdldF9tYXAoZGF0YSk7XG5cbiAgY29uc3QgeyBwbGF5ZXIsIGJsb2NrcywgLi4udGlsZXMgfSA9IG1hcHM7XG5cbiAgdGlsZXMucGxhdGZvcm0gPSBhcnJUb09iamVjdCh0aWxlcy5wbGF0Zm9ybSk7XG4gIHRpbGVzLndhbGwgPSBhcnJUb09iamVjdCh0aWxlcy53YWxsKTtcbiAgdGlsZXMuZW5lbWllcyA9IGFyclRvT2JqZWN0KHRpbGVzLmVuZW1pZXMpO1xuICB0aWxlcy50aWxlb3ZlcmxheSA9IGFyclRvT2JqZWN0KHRpbGVzLnRpbGVvdmVybGF5KTtcbiAgdGlsZXMuZmxvYXRpbmdvYmogPSBhcnJUb09iamVjdCh0aWxlcy5mbG9hdGluZ29iaik7XG4gIHRpbGVzLndhbGxvdmVybGF5ID0gYXJyVG9PYmplY3QodGlsZXMud2FsbG92ZXJsYXkpO1xuICB0aWxlcy50aWxlcyA9IGFyclRvT2JqZWN0KHRpbGVzLnRpbGVzKTtcbiAgLy8gcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKGNvbW1hbmRzKTtcbiAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHsgdGlsZXMsIHBsYXllciwgYmxvY2tzIH0pO1xufSk7XG5cbnJvdXRlci5nZXQoJy9jYXRhZ29yeScsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICBjb25zb2xlLmxvZygnMTIzJyk7XG4gIHJldHVybiByZXMuc2VuZCgnTE9MTEwnKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "maps.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "post",
        "req",
        "res",
        "console",
        "log",
        "body",
        "level",
        "collection",
        "doc",
        "toString",
        "get",
        "documentRef",
        "data",
        "is_done",
        "tiles",
        "platform",
        "wall",
        "enemies",
        "tileoverlay",
        "floatingobj",
        "walloverlay",
        "status",
        "json",
        "maps",
        "player",
        "blocks",
        "commandLength",
        "commandLengthInCondition",
        "numIteration",
        "numTurnInLoop",
        "numberOfDistractions",
        "condition_type",
        "condition_cate",
        "is_reversed",
        "probs_of_actions",
        "type_of_actions",
        "send",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "import { get_map } from './generate_map';\nimport { if_else_path_condition_commands_with_loop } from './decisionMakingCommands';\nimport { arrToObject, objectToArr } from '../utils/utils';\n\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../db');\n\n// const ref = await db.collection('retailer').add(retailer)\n//   console.log(ref.id)\n//   const documentRef = db.collection('retailer').doc(ref.id)\n//   const userRef = await db.collection('users').doc(uid).set({\n//     username: retailer['username'],\n//     ref: documentRef\n//   })\n// var addDoc = db\n//     .collection('users')\n//     .add({\n//       name: 'Tokyo',\n//       country: 'Japan'\n//     })\n//     .then(ref => {\n//       console.log('Added document with ID: ', ref.id);\n//     });\n\nrouter.post('/get-map', async (req, res) => {\n  console.log(req.body.level);\n  const documentRef = await db.collection('maps').doc(req.body.level.toString()).get();\n  const data = documentRef.data();\n\n  console.log(data);\n\n  if (data.is_done) {\n    data.tiles.platform = objectToArr(data.tiles.platform);\n    data.tiles.wall = objectToArr(data.tiles.wall);\n    data.tiles.enemies = objectToArr(data.tiles.enemies);\n    data.tiles.tileoverlay = objectToArr(data.tiles.tileoverlay);\n    data.tiles.floatingobj = objectToArr(data.tiles.floatingobj);\n    data.tiles.walloverlay = objectToArr(data.tiles.walloverlay);\n    data.tiles.tiles = objectToArr(data.tiles.tiles);\n    return res.status(200).json({ ...data });\n  }\n\n  const maps = get_map(data);\n\n  const { player, blocks, ...tiles } = maps;\n\n  return res.status(200).json({ tiles, player, blocks });\n});\n\nrouter.post('/testtest', async (req, res) => {\n  const data = {\n    commandLength: 0,\n    commandLengthInCondition: 5,\n    numIteration: 8,\n    numTurnInLoop: 0,\n    numberOfDistractions: 0,\n    condition_type: 'if',\n    condition_cate: 'tile',\n    is_reversed: false,\n    probs_of_actions: [0.4, 0.2, 0.2, 0, 0.2],\n    type_of_actions: 5,\n    is_done: false,\n  };\n\n  const maps = get_map(data);\n\n  const { player, blocks, ...tiles } = maps;\n\n  tiles.platform = arrToObject(tiles.platform);\n  tiles.wall = arrToObject(tiles.wall);\n  tiles.enemies = arrToObject(tiles.enemies);\n  tiles.tileoverlay = arrToObject(tiles.tileoverlay);\n  tiles.floatingobj = arrToObject(tiles.floatingobj);\n  tiles.walloverlay = arrToObject(tiles.walloverlay);\n  tiles.tiles = arrToObject(tiles.tiles);\n  // return res.status(200).json(commands);\n  return res.status(200).json({ tiles, player, blocks });\n});\n\nrouter.get('/catagory', async (req, res) => {\n  console.log('123');\n  return res.send('LOLLL');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586205163209
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/generate_map.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/generate_map.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/generate_map.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/generate_map.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "generate_map.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get_map = get_map;\n\nvar _utils = require(\"../utils/utils\");\n\nvar _basicCommands = require(\"./basicCommands\");\n\nvar _loopCommands = require(\"./loopCommands\");\n\nvar _decisionMakingCommands = require(\"./decisionMakingCommands\");\n\nvar _constant = require(\"../config/constant\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _require = require('../utils/priority_queue'),\n    PriorityQueue = _require.PriorityQueue;\n\nvar _require2 = require('../utils/union_find'),\n    UnionFind = _require2.UnionFind;\n\nvar probs_of_actions = [0.4, 0.2, 0.2, 0, 0.2]; // 0: go ahead, 1: turn right, 2: turn left, 3: do action I, 4: do action II\n\nvar type_of_actions = 5;\n\nfunction add_enemies(obj) {\n  var mapData = obj.mapData,\n      x = obj.x,\n      y = obj.y;\n  var direction = Math.floor(Math.random() * 4);\n  var direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n  var enemies_type = 'bot'; // var enemies_facing = direction_to_word[direction];\n\n  var enemies_facing = 'xf';\n  mapData.enemies[x][y] = {\n    enemytype: enemies_type,\n    facing: enemies_facing\n  };\n}\n\nfunction add_floatingobj(obj) {\n  var mapData = obj.mapData;\n  var x = obj.x;\n  var y = obj.y;\n  var objtype = 'gem';\n  var objvari = 1;\n  mapData.floatingobj[x][y] = {\n    objtype: objtype,\n    objvari: objvari,\n    visible: true\n  };\n}\n\nfunction add_tileoverlay(obj) {\n  var mapData = obj.mapData,\n      x = obj.x,\n      y = obj.y,\n      overlaytype = obj.overlaytype;\n  mapData.tileoverlay[x][y] = {\n    overlaytype: overlaytype\n  };\n}\n\nfunction add_wall(obj) {\n  var mapData = obj.mapData;\n  var x = obj.x;\n  var y = obj.y;\n  var facing = obj.facing;\n  var overlaytype = 1;\n  mapData.wall[x][y][facing] = {\n    walltype: overlaytype\n  };\n}\n\nfunction remove_wall(obj) {\n  var mapData = obj.mapData;\n  var _final = obj[\"final\"];\n  if (_final === undefined) _final = true;\n  var x = obj.x;\n  var y = obj.y;\n  var facing = obj.facing; // console.log('in remove wall function', x, y, facing, mapData.wall[x][y][facing]);\n\n  if (mapData.wall[x][y][facing] === undefined) return true; // console.log(mapData.wall[x][y][facing][\"permanent\"]);\n\n  if ('permanent' in mapData.wall[x][y][facing]) return false;\n  delete mapData.wall[x][y][facing];\n}\n\nfunction build_permanent_wall(obj) {\n  var mapData = obj.mapData,\n      condition = obj.condition;\n  var bot = mapData.bot;\n  var word_to_direction = {\n    ahead: 0,\n    left: 3,\n    right: 1\n  };\n  var directions = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n  var x = bot.x;\n  var y = bot.y;\n  var direction = (bot.facing + word_to_direction[condition]) % 4;\n  var overlaytype = 1;\n  mapData.wall[x][y][direction] = {\n    walltype: overlaytype,\n    permanent: true\n  };\n  x = x + directions[direction];\n  y = y + directions[direction];\n  direction = (direction + 2) % 4;\n  if (x >= 0 && y >= 0 && x < _constant.mapW && y < _constant.mapH) mapData.wall[x][y][direction] = {\n    walltype: overlaytype,\n    permanent: true\n  };\n}\n\nfunction init_mapData() {\n  var direction = Math.floor(Math.random() * 4);\n  var mapData = {\n    start: {\n      x: 25,\n      y: 25,\n      facing: direction\n    },\n    bot: {\n      x: 25,\n      y: 25,\n      facing: direction,\n      state: 1\n    },\n    check: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(0);\n    }),\n    count: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(0);\n    }),\n    check_object: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(false);\n    }),\n    platform: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(0);\n    }),\n    wall: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(undefined);\n    }),\n    enemies: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(undefined);\n    }),\n    tileoverlay: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(undefined);\n    }),\n    floatingobj: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(undefined);\n    }),\n    walloverlay: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(undefined);\n    }),\n    tiles: new Array(_constant.mapW_real).fill().map(function () {\n      return new Array(_constant.mapH_real).fill(0);\n    })\n  };\n\n  for (var i = 0; i < _constant.mapW_real; i++) {\n    for (var j = 0; j < _constant.mapH_real; j++) {\n      mapData.wall[i][j] = {\n        0: {\n          walltype: 1\n        },\n        1: {\n          walltype: 1\n        },\n        2: {\n          walltype: 1\n        },\n        3: {\n          walltype: 1\n        }\n      };\n    }\n  }\n\n  mapData.platform[mapData.bot.x][mapData.bot.y] = 1;\n  mapData.check_object[mapData.bot.x][mapData.bot.y] = true;\n  mapData.count[mapData.bot.x][mapData.bot.y] = 1;\n  return mapData;\n}\n\nfunction cal_position(x, y) {\n  return x * _constant.mapH + y;\n}\n\nfunction generate_distraction(obj) {\n  var directions = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n  var mapData = obj.mapData;\n  var number_of_distractions = obj.number_of_distractions;\n  var pq = new PriorityQueue();\n  var uf = new UnionFind(_constant.mapW * _constant.mapH); // console.log(mapData[0]);\n\n  for (var i = 0; i < _constant.mapW; i++) {\n    for (var j = 0; j < _constant.mapH; j++) {\n      for (var k = 0; k < 4; k++) {\n        if (mapData.platform[i][j] === 1) {\n          if (i + directions[k][0] < 0 || i + directions[k][0] >= _constant.mapW || j + directions[k][1] < 0 || j + directions[k][1] >= _constant.mapH) continue;\n          if (k in mapData.wall[i][j] && 'permanent' in mapData.wall[i][j][k]) continue;\n\n          if (mapData.platform[i + directions[k][0]][j + directions[k][1]]) {\n            uf.union(cal_position(i, j), cal_position(i + directions[k][0], j + directions[k][1]));\n\n            if (k in mapData.wall[i][j]) {\n              mapData.wall[i][j][k].permanent = true;\n              mapData.wall[i + directions[k][0]][j + directions[k][1]][(k + 2) % 4].permanent = true;\n            }\n\n            continue;\n          }\n\n          if (k in mapData.wall[i][j]) pq.push({\n            x: i,\n            y: j,\n            dir: k\n          }, Math.random());\n        }\n      }\n    }\n  }\n\n  while (number_of_distractions-- && !pq.isEmpty()) {\n    var obj = pq.pop().element;\n    var x = obj.x,\n        y = obj.y,\n        dir = obj.dir;\n    var pos1 = cal_position(x, y);\n    var pos2 = cal_position(x + directions[dir][0], y + directions[dir][1]);\n    var h1 = uf.find(pos1);\n    var h2 = uf.find(pos2);\n\n    if (h1 !== h2) {\n      remove_wall({\n        x: x,\n        y: y,\n        mapData: mapData,\n        facing: dir\n      });\n      uf.union(pos1, pos2);\n      x = obj.x + directions[dir][0];\n      y = obj.y + directions[dir][1];\n      remove_wall({\n        x: x,\n        y: y,\n        mapData: mapData,\n        facing: (dir + 2) % 4\n      });\n      mapData.platform[x][y] = 1;\n\n      for (var k = 0; k < 4; k++) {\n        if (x + directions[k][0] < 0 || x + directions[k][0] >= _constant.mapW || y + directions[k][1] < 0 || y + directions[k][1] >= _constant.mapH) continue;\n        if (mapData.wall[x][y][k] === undefined || 'permanent' in mapData.wall[x][y][k]) continue;\n\n        if (mapData.count[x + directions[k][0]][y + directions[k][1]]) {\n          // console.log('create permanent wall', x + directions[k][0], y + directions[k][1]);\n          mapData.wall[x][y][k].permanent = true;\n          mapData.wall[x + directions[k][0]][y + directions[k][1]][(k + 2) % 4].permanent = true;\n          continue;\n        }\n\n        if (mapData.platform[x][y]) continue;\n        var x2 = x + directions[k][0];\n        var y2 = y + directions[k][1];\n\n        if (uf.find(cal_position(x2, y2)) !== uf.find(cal_position(x, y))) {\n          pq.push({\n            x: x,\n            y: y,\n            dir: k\n          }, Math.random());\n        }\n      }\n    } else {\n      console.log('cannot remove walls');\n      mapData.wall[x][y][dir].permanent = true;\n      mapData.wall[x + directions[dir][0]][y + directions[dir][1]][(dir + 2) % 4].permanent = true;\n      number_of_distractions++;\n    }\n  }\n\n  for (var i = 0; i < _constant.mapW; i++) {\n    for (var j = 0; j < _constant.mapH; j++) {\n      for (var k = 0; k < 4; k++) {\n        if (mapData.platform[i][j] === 1) {\n          if (i + directions[k][0] < 0 || i + directions[k][0] >= _constant.mapW || j + directions[k][1] < 0 || j + directions[k][1] >= _constant.mapH) continue;\n\n          if (k in mapData.wall[i][j] && mapData.count[i][j]) {\n            console.log('create permanent at', i, j);\n            console.log(mapData.wall[i][j]);\n            console.log(i + directions[k][0], j + directions[k][1], (k + 2) % 4);\n            console.log(mapData.wall[i + directions[k][0]][j + directions[k][1]]);\n            mapData.wall[i][j][k].permanent = true;\n            mapData.wall[i + directions[k][0]][j + directions[k][1]][(k + 2) % 4].permanent = true;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction generate_map(obj) {\n  var directions = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n  var commands = obj.commands;\n  var mapData = obj.mapData;\n  var bot = obj.mapData.bot;\n  var check = obj.mapData.check;\n  var count = obj.mapData.count;\n  var prop_walk = 0.65;\n  var type = commands.type;\n  console.log(commands);\n\n  if (type === 'basic') {\n    commands = commands.commands;\n\n    for (var i = 0; i < commands.length; i++) {\n      check[bot.x][bot.y] = bot.state;\n      mapData.platform[bot.x][bot.y] = 1;\n\n      if (commands[i] instanceof Object) {\n        if (generate_map({\n          commands: commands[i],\n          mapData: mapData\n        }) === false) return false;\n      } else if (commands[i] === 0) {\n        if (remove_wall({\n          x: bot.x,\n          y: bot.y,\n          mapData: mapData,\n          facing: bot.facing\n        }) === false) return false;\n        bot.x = bot.x + directions[bot.facing][0];\n        bot.y = bot.y + directions[bot.facing][1];\n        if (bot.x < 0 || bot.x >= _constant.mapW_real || bot.y < 0 || bot.y >= _constant.mapH_real || check[bot.x][bot.y] === bot.state) return false;\n        if (mapData.floatingobj[bot.x][bot.y] !== undefined) return false;\n        if (mapData.tileoverlay[bot.x][bot.y] !== undefined) return false;\n        check[bot.x][bot.y] = bot.state;\n        count[bot.x][bot.y]++;\n        if (remove_wall({\n          x: bot.x,\n          y: bot.y,\n          mapData: mapData,\n          facing: (bot.facing + 2) % 4\n        }) === false) return false;\n      } else if (commands[i] === 1) {\n        bot.facing = (bot.facing + 1) % 4;\n      } else if (commands[i] === 2) {\n        bot.facing = (bot.facing + 3) % 4;\n      } else if (commands[i] === 3) {\n        if (mapData.check_object[bot.x][bot.y] === true || count[bot.x][bot.y] > 1) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n        add_enemies({\n          x: bot.x,\n          y: bot.y,\n          mapData: mapData\n        });\n        bot.state += 1;\n        check[bot.x][bot.y] = bot.state;\n      } else if (commands[i] === 4) {\n        if (mapData.check_object[bot.x][bot.y] === true || count[bot.x][bot.y] > 1) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n        add_floatingobj({\n          x: bot.x,\n          y: bot.y,\n          mapData: mapData\n        });\n        bot.state += 1;\n        check[bot.x][bot.y] = bot.state;\n      }\n    }\n  } else if (type === 'for') {\n    var iteration = commands.iteration;\n\n    var tmp_commands = _objectSpread({}, commands);\n\n    tmp_commands.type = 'basic';\n\n    for (var loop = 0; loop < iteration; loop++) {\n      if (generate_map({\n        commands: tmp_commands,\n        mapData: mapData\n      }) === false) return false;\n    }\n  } else if (type === 'if') {\n    if (commands.condition.includes('on')) {\n      // not done yet\n      var overlaytype = 1;\n\n      if (commands.condition === 'on red tile') {\n        overlaytype = 1;\n      } else if (commands.condition === 'on grey tile') {\n        overlaytype = 2;\n      }\n\n      if (Math.random() < prop_walk) {\n        console.log('=..=');\n        return true;\n      }\n\n      if (overlaytype === 1) {\n        console.log('test pass');\n      }\n\n      if (mapData.check_object[bot.x][bot.y] === true) return false;\n      mapData.check_object[bot.x][bot.y] = true;\n\n      var tmp_commands = _objectSpread({}, commands);\n\n      tmp_commands.type = 'basic';\n      add_tileoverlay({\n        mapData: mapData,\n        x: bot.x,\n        y: bot.y,\n        overlaytype: overlaytype\n      });\n      if (generate_map({\n        mapData: mapData,\n        commands: tmp_commands\n      }) === false) return false;\n    } else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({\n          mapData: mapData,\n          condition: commands.condition\n        });\n        return true;\n      }\n\n      var tmp_commands = _objectSpread({}, commands);\n\n      tmp_commands.type = 'basic';\n      if (generate_map({\n        mapData: mapData,\n        commands: tmp_commands\n      }) === false) return false;\n    }\n  } else if (type === 'if_else') {\n    /// not done yet\n    if (commands.condition.includes('on')) {\n      // not done yet\n      var _overlaytype = 1;\n\n      if (commands.condition === 'on red tile') {\n        _overlaytype = 1;\n      } else if (commands.condition === 'on grey tile') {\n        _overlaytype = 2;\n      }\n\n      if (Math.random() < prop_walk) {\n        console.log('Math.random() < prop_walk');\n\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      } else {\n        if (mapData.check_object[bot.x][bot.y] === true) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.type = 'basic';\n        add_tileoverlay({\n          mapData: mapData,\n          x: bot.x,\n          y: bot.y,\n          overlaytype: _overlaytype\n        });\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      }\n    } else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({\n          mapData: mapData,\n          condition: commands.condition\n        }); // do commands else\n\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      } else {\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.type = 'basic';\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      }\n    }\n  } else if (type === 'nested_if') {\n    /// not done yet\n    if (commands.condition.includes('on')) {} else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({\n          mapData: mapData,\n          condition: commands.condition\n        }); // do commands else\n\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      } else {\n        var tmp_commands = _objectSpread({}, commands);\n\n        tmp_commands.type = 'basic';\n        if (generate_map({\n          mapData: mapData,\n          commands: tmp_commands\n        }) === false) return false;\n      }\n    }\n  }\n\n  mapData.platform[bot.x][bot.y] = 1;\n  return true;\n}\n\nfunction count_blocks(commands) {\n  var res = 0;\n  console.log('---');\n  console.log(commands);\n  if (commands.type !== 'basic') res = 1;\n  var _commands = commands,\n      commands_else = _commands.commands_else;\n  commands = commands.commands;\n\n  for (var i = 0; i < commands.length; i++) {\n    if (commands[i] instanceof Object) {\n      res += count_blocks(commands[i]);\n    } else {\n      res += 1;\n    }\n  }\n\n  if (commands_else) {\n    for (var _i = 0; _i < commands_else.length; _i++) {\n      if (commands_else[_i] instanceof Object) {\n        res += count_blocks(commands_else[_i]);\n      } else {\n        res += 1;\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction get_commands(commands) {\n  var res = [];\n  var _commands2 = commands,\n      commands_else = _commands2.commands_else;\n\n  if (commands.type === 'for') {\n    res.push('for');\n    res.push('while_inf');\n  }\n\n  commands = commands.commands;\n\n  for (var i = 0; i < commands.length; i++) {\n    if (commands[i] instanceof Object) {\n      if (commands[i].type === 'if') {\n        if (commands[i].condition === 'ahead' || commands[i].condition === 'left' || commands[i].condition === 'right') {\n          res.push('if_path');\n        } else {\n          res.push('if_tile');\n        }\n      } else if (commands[i].type === 'if_else') {\n        if (commands[i].condition === 'ahead' || commands[i].condition === 'left' || commands[i].condition === 'right') {\n          res.push('if_path');\n          res.push('if_else_path');\n        } else {\n          res.push('if_tile');\n          res.push('if_else_tile');\n        }\n      } else {\n        res.push('for');\n        res.push('while_inf');\n      }\n\n      res.push.apply(res, _toConsumableArray(get_commands(commands[i])));\n    } else if (commands[i] === 0) {\n      res.push('go_ahead');\n    } else if (commands[i] === 1) {\n      res.push('turn_left');\n      res.push('turn_right');\n    } else if (commands[i] === 2) {\n      res.push('turn_left');\n      res.push('turn_right');\n    } else if (commands[i] === 3) {\n      res.push('IDK');\n    } else if (commands[i] === 4) {\n      res.push('collect');\n    }\n  }\n\n  if (commands_else) {\n    for (var _i2 = 0; _i2 < commands_else.length; _i2++) {\n      if (commands_else[_i2] instanceof Object) {\n        if (commands_else[_i2].type === 'if') {\n          if (commands_else[_i2].condition === 'ahead' || commands_else[_i2].condition === 'left' || commands_else[_i2].condition === 'right') {\n            res.push('if_path');\n          } else {\n            res.push('if_tile');\n          }\n        } else if (commands_else[_i2].type === 'if_else') {\n          if (commands_else[_i2].condition === 'ahead' || commands_else[_i2].condition === 'left' || commands_else[_i2].condition === 'right') {\n            res.push('if_path');\n            res.push('if_else_path');\n          } else {\n            res.push('if_tile');\n            res.push('if_else_tile');\n          }\n        } else {\n          res.push('for');\n          res.push('while_inf');\n        }\n\n        res.push.apply(res, _toConsumableArray(get_commands(commands_else[_i2])));\n      } else if (commands_else[_i2] === 0) {\n        res.push('go_ahead');\n      } else if (commands_else[_i2] === 1) {\n        res.push('turn_left');\n        res.push('turn_right');\n      } else if (commands_else[_i2] === 2) {\n        res.push('turn_left');\n        res.push('turn_right');\n      } else if (commands_else[_i2] === 3) {\n        res.push('IDK');\n      } else if (commands_else[_i2] === 4) {\n        res.push('collect');\n      }\n    }\n  }\n\n  var unique = _toConsumableArray(new Set(res));\n\n  return unique;\n}\n\nfunction generate_tiles(mapData) {\n  // const direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n  var DIRECTION_TO_NUM = [1, 2, 4, 8];\n  var NXT = {\n    0: [-1, 0],\n    1: [0, 1],\n    2: [1, 0],\n    3: [0, -1]\n  };\n  var TILEOVERLAY = {\n    1: 128,\n    2: 256,\n    3: 512\n  };\n  var FINAL = 1024;\n  var FLOATING_OBJ = 16;\n\n  for (var i = 0; i < _constant.mapW; i++) {\n    for (var j = 0; j < _constant.mapH; j++) {\n      if (!mapData.platform[i][j]) {\n        continue;\n      }\n\n      if (mapData.floatingobj[i][j] !== undefined) {\n        mapData.tiles[i][j] += FLOATING_OBJ;\n      }\n\n      if (mapData.tileoverlay[i][j] !== undefined) {\n        mapData.tiles[i][j] += TILEOVERLAY[mapData.tileoverlay[i][j].overlaytype];\n      }\n\n      for (var k = 0; k < 4; k++) {\n        if (mapData.wall[i][j] !== undefined && k in mapData.wall[i][j] && 'permanent' in mapData.wall[i][j][k]) {\n          mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n        } else {\n          var nx_ii = i + NXT[k][0];\n          var nx_jj = j + NXT[k][1];\n\n          if (nx_ii < 0 || nx_ii >= _constant.mapW || nx_jj < 0 || nx_jj >= _constant.mapH) {\n            mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n          } else if (mapData.platform[i][j] === 1 && mapData.platform[nx_ii][nx_jj] === 0) {\n            mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n          }\n        }\n      }\n    }\n  }\n\n  mapData.tiles[mapData.end.x][mapData.end.y] += FINAL;\n  return;\n}\n\nfunction transform_map(obj) {\n  var mapData = obj.mapData,\n      number_of_distractions = obj.number_of_distractions;\n  var bot = mapData.bot;\n  if (number_of_distractions === undefined) number_of_distractions = 10;\n  var directions = [[-1, 0], [0, 1], [1, 0], [0, -1]];\n  if (mapData.check_object[bot.x][bot.y] === true || mapData.count[bot.x][bot.y] > 1) return false;\n  var direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n  mapData.end = {\n    x: bot.x,\n    y: bot.y\n  };\n  var mnX = 500,\n      mnY = 500,\n      mxX = -1,\n      mxY = -1;\n\n  for (var i = 0; i < _constant.mapW_real; i++) {\n    for (var j = 0; j < _constant.mapH_real; j++) {\n      if (mapData.platform[i][j] == 1) {\n        mnX = Math.min(mnX, i);\n        mxX = Math.max(mxX, i);\n        mnY = Math.min(mnY, j);\n        mxY = Math.max(mxY, j);\n      }\n    }\n  }\n\n  if (mxX - mnX + 1 > _constant.mapW || mxY - mnY + 1 > _constant.mapH) return false;\n  var stX = mnX - Math.floor((_constant.mapW - (mxX - mnX + 1)) / 2);\n  var stY = mnY - Math.floor((_constant.mapH - (mxY - mnY + 1)) / 2); // console.log(mapData.start.facing);\n\n  mapData.player = {\n    position: [mapData.start.x - stX, mapData.start.y - stY],\n    beginPosition: [mapData.start.x - stX, mapData.start.y - stY],\n    facing: direction_to_word[mapData.start.facing],\n    beginFacing: direction_to_word[mapData.start.facing]\n  };\n  mapData.end = {\n    x: mapData.end.x - stX,\n    y: mapData.end.y - stY\n  };\n  mapData.platform = (0, _utils.slice_2d_array)(mapData.platform, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.wall = (0, _utils.slice_2d_array)(mapData.wall, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.enemies = (0, _utils.slice_2d_array)(mapData.enemies, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.tileoverlay = (0, _utils.slice_2d_array)(mapData.tileoverlay, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.floatingobj = (0, _utils.slice_2d_array)(mapData.floatingobj, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.count = (0, _utils.slice_2d_array)(mapData.count, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.check = (0, _utils.slice_2d_array)(mapData.check, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.check_object = (0, _utils.slice_2d_array)(mapData.check_object, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.walloverlay = (0, _utils.slice_2d_array)(mapData.walloverlay, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  mapData.tiles = (0, _utils.slice_2d_array)(mapData.tiles, stX, stX + _constant.mapW, stY, stY + _constant.mapH);\n  generate_distraction({\n    mapData: mapData,\n    number_of_distractions: number_of_distractions\n  }); // console.log('change walls');\n\n  for (var i = -1; i <= _constant.mapW; i++) {\n    for (var j = -1; j <= _constant.mapH; j++) {\n      if (i < 0 || j < 0 || i >= _constant.mapW || j >= _constant.mapH) {\n        for (var k = 0; k < 4; k++) {\n          var new_i = i + directions[k][0];\n          var new_j = j + directions[k][1];\n          if (new_i < 0 || new_j < 0 || new_i >= _constant.mapW || new_j >= _constant.mapH) continue;\n\n          if (mapData.wall[new_i][new_j] !== undefined && (k + 2) % 4 in mapData.wall[new_i][new_j]) {\n            delete mapData.wall[new_i][new_j][(k + 2) % 4];\n          }\n        }\n      } else if (mapData.platform[i][j] === 0) {\n        mapData.wall[i][j] = undefined;\n\n        for (var _k = 0; _k < 4; _k++) {\n          var _new_i = i + directions[_k][0];\n\n          var _new_j = j + directions[_k][1];\n\n          if (_new_i < 0 || _new_j < 0 || _new_i >= _constant.mapW || _new_j >= _constant.mapH) continue;\n\n          if (mapData.wall[_new_i][_new_j] !== undefined && (_k + 2) % 4 in mapData.wall[_new_i][_new_j]) {\n            delete mapData.wall[_new_i][_new_j][(_k + 2) % 4];\n          }\n        }\n      }\n    }\n  }\n\n  generate_tiles(mapData);\n\n  for (var _i3 = 0; _i3 < _constant.mapW; _i3++) {\n    for (var _j = 0; _j < _constant.mapH; _j++) {\n      for (var _k2 = 0; _k2 < 4; _k2++) {\n        if (mapData.wall[_i3][_j] !== undefined && _k2 in mapData.wall[_i3][_j]) {\n          if ((_k2 === 0 || _k2 === 1) && 'permanent' in mapData.wall[_i3][_j][_k2]) mapData.wall[_i3][_j][direction_to_word[_k2]] = mapData.wall[_i3][_j][_k2];\n          delete mapData.wall[_i3][_j][_k2];\n        }\n      }\n    }\n  }\n\n  delete mapData.check;\n  delete mapData.check_object;\n  delete mapData.bot;\n  delete mapData.count;\n  delete mapData.start;\n}\n\nfunction get_gems(mapData) {\n  var res = 0;\n\n  for (var i = 0; i < _constant.mapW; i++) {\n    for (var j = 0; j < _constant.mapH; j++) {\n      if (mapData.floatingobj[i][j] && mapData.floatingobj[i][j].objtype === 'gem') {\n        res++;\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction get_map(obj) {\n  // console.log(obj);\n  var commandLength = obj.commandLength,\n      commandLengthInCondition = obj.commandLengthInCondition,\n      numIteration = obj.numIteration,\n      numTurnInLoop = obj.numTurnInLoop,\n      numberOfDistractions = obj.numberOfDistractions,\n      is_reversed = obj.is_reversed,\n      condition_type = obj.condition_type,\n      condition_cate = obj.condition_cate,\n      probs_of_actions = obj.probs_of_actions,\n      type_of_actions = obj.type_of_actions;\n  if (commandLength === undefined) commandLength = 5;\n  if (commandLengthInCondition === undefined) commandLengthInCondition = 0;\n  if (numIteration === undefined) numIteration = 0;\n  if (numTurnInLoop === undefined) numTurnInLoop = 0;\n  if (numberOfDistractions === undefined) numberOfDistractions = 0;\n  if (is_reversed === undefined) is_reversed = false;\n  if (probs_of_actions === undefined) probs_of_actions = [0.5, 0.25, 0.25, 0, 0];\n  if (type_of_actions === undefined) type_of_actions = 3;\n  if (condition_type === undefined) condition_type = 'if';\n  console.log(obj);\n  var numberOfTries = 2000;\n  var commands;\n\n  while (numberOfTries--) {\n    var chk = false;\n\n    if (condition_cate) {\n      if (numIteration === 0) {\n        numIteration = 8;\n      }\n\n      if (condition_cate === 'tile') {\n        commands = (0, _decisionMakingCommands.if_else_tile_condition_commands_with_loop)({\n          condition_type: condition_type,\n          number_of_commands: commandLengthInCondition,\n          number_of_iterations: numIteration,\n          is_reversed: is_reversed,\n          probs_of_actions: probs_of_actions,\n          type_of_actions: type_of_actions\n        });\n      } else if (condition_cate === 'path') {\n        commands = (0, _decisionMakingCommands.if_else_path_condition_commands_with_loop)({\n          condition_type: condition_type,\n          number_of_iterations: numIteration\n        });\n      } else {\n        console.log('condition_cate is not defined');\n        return;\n      }\n    } else if (numIteration > 0) {\n      if (numTurnInLoop === '0') {\n        commands = (0, _loopCommands.for_loop_commands)({\n          number_of_turns: 2,\n          number_of_commands: commandLength,\n          number_of_iterations: numIteration,\n          probs_of_actions: probs_of_actions,\n          type_of_actions: type_of_actions\n        });\n      } else {\n        commands = (0, _loopCommands.for_loop_commands)({\n          number_of_turns: numTurnInLoop,\n          number_of_commands: commandLength,\n          number_of_iterations: numIteration,\n          probs_of_actions: probs_of_actions,\n          type_of_actions: type_of_actions\n        });\n      }\n    } else {\n      commands = (0, _basicCommands.basic_commands)({\n        number_of_commands: commandLength,\n        probs_of_actions: probs_of_actions,\n        type_of_actions: type_of_actions\n      });\n    }\n\n    console.log(commands);\n    console.log('generate map'); // commands = for_loop_commands({number_of_turns: 3, number_of_commands: 6, number_of_iterations: 3});\n    // commands = basic_commands({number_of_commands: 6});\n    // commands = if_else_tile_condition_commands_with_loop({condition_type: \"if\", number_of_commands: 1, number_of_iterations: 20, is_reversed: false});\n\n    var numberOfTriesGenerateMap = 10;\n\n    while (numberOfTriesGenerateMap--) {\n      var mapData = init_mapData();\n      if (generate_map({\n        commands: commands,\n        mapData: mapData\n      }) === false) continue;\n      if (transform_map({\n        mapData: mapData,\n        number_of_distractions: numberOfDistractions\n      }) === false) continue;\n      chk = true;\n      break;\n    }\n\n    if (chk) {\n      var gems = get_gems(mapData);\n      mapData.blocks = {\n        maxBlocks: count_blocks(commands),\n        maxGems: gems,\n        cntGems: 0,\n        cntBlocks: 0,\n        command_blocks: get_commands(commands)\n      };\n      console.log(mapData.blocks);\n      break;\n    }\n  } // console.log(commands);\n\n\n  if (chk) return mapData;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "generate_map.js"
      ],
      "names": [
        "require",
        "PriorityQueue",
        "UnionFind",
        "probs_of_actions",
        "type_of_actions",
        "add_enemies",
        "obj",
        "mapData",
        "x",
        "y",
        "direction",
        "Math",
        "floor",
        "random",
        "direction_to_word",
        "enemies_type",
        "enemies_facing",
        "enemies",
        "enemytype",
        "facing",
        "add_floatingobj",
        "objtype",
        "objvari",
        "floatingobj",
        "visible",
        "add_tileoverlay",
        "overlaytype",
        "tileoverlay",
        "add_wall",
        "wall",
        "walltype",
        "remove_wall",
        "final",
        "undefined",
        "build_permanent_wall",
        "condition",
        "bot",
        "word_to_direction",
        "ahead",
        "left",
        "right",
        "directions",
        "permanent",
        "mapW",
        "mapH",
        "init_mapData",
        "start",
        "state",
        "check",
        "Array",
        "mapW_real",
        "fill",
        "map",
        "mapH_real",
        "count",
        "check_object",
        "platform",
        "walloverlay",
        "tiles",
        "i",
        "j",
        "cal_position",
        "generate_distraction",
        "number_of_distractions",
        "pq",
        "uf",
        "k",
        "union",
        "push",
        "dir",
        "isEmpty",
        "pop",
        "element",
        "pos1",
        "pos2",
        "h1",
        "find",
        "h2",
        "x2",
        "y2",
        "console",
        "log",
        "generate_map",
        "commands",
        "prop_walk",
        "type",
        "length",
        "Object",
        "iteration",
        "tmp_commands",
        "loop",
        "includes",
        "commands_else",
        "count_blocks",
        "res",
        "get_commands",
        "unique",
        "Set",
        "generate_tiles",
        "DIRECTION_TO_NUM",
        "NXT",
        "TILEOVERLAY",
        "FINAL",
        "FLOATING_OBJ",
        "nx_ii",
        "nx_jj",
        "end",
        "transform_map",
        "mnX",
        "mnY",
        "mxX",
        "mxY",
        "min",
        "max",
        "stX",
        "stY",
        "player",
        "position",
        "beginPosition",
        "beginFacing",
        "new_i",
        "new_j",
        "get_gems",
        "get_map",
        "commandLength",
        "commandLengthInCondition",
        "numIteration",
        "numTurnInLoop",
        "numberOfDistractions",
        "is_reversed",
        "condition_type",
        "condition_cate",
        "numberOfTries",
        "chk",
        "number_of_commands",
        "number_of_iterations",
        "number_of_turns",
        "numberOfTriesGenerateMap",
        "gems",
        "blocks",
        "maxBlocks",
        "maxGems",
        "cntGems",
        "cntBlocks",
        "command_blocks"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "import { slice_2d_array } from '../utils/utils';\nimport { basic_commands, reverse_basic_commands } from './basicCommands';\nimport { for_loop_commands } from './loopCommands';\nimport { if_else_tile_condition_commands_with_loop } from './decisionMakingCommands';\nimport { if_else_path_condition_commands_with_loop } from './decisionMakingCommands';\n\nimport { mapW_real, mapH_real, mapW, mapH } from '../config/constant';\n\nconst { PriorityQueue } = require('../utils/priority_queue');\nconst { UnionFind } = require('../utils/union_find');\n\nlet probs_of_actions = [0.4, 0.2, 0.2, 0, 0.2]; // 0: go ahead, 1: turn right, 2: turn left, 3: do action I, 4: do action II\nlet type_of_actions = 5;\n\nfunction add_enemies(obj) {\n  let { mapData, x, y } = obj;\n\n  var direction = Math.floor(Math.random() * 4);\n  var direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n\n  var enemies_type = 'bot';\n  // var enemies_facing = direction_to_word[direction];\n  var enemies_facing = 'xf';\n  mapData.enemies[x][y] = { enemytype: enemies_type, facing: enemies_facing };\n}\n\nfunction add_floatingobj(obj) {\n  var mapData = obj.mapData;\n  var x = obj.x;\n  var y = obj.y;\n  var objtype = 'gem';\n  var objvari = 1;\n  mapData.floatingobj[x][y] = { objtype: objtype, objvari: objvari, visible: true };\n}\n\nfunction add_tileoverlay(obj) {\n  const { mapData, x, y, overlaytype } = obj;\n  mapData.tileoverlay[x][y] = { overlaytype: overlaytype };\n}\n\nfunction add_wall(obj) {\n  var mapData = obj.mapData;\n  var x = obj.x;\n  var y = obj.y;\n  var facing = obj.facing;\n  var overlaytype = 1;\n\n  mapData.wall[x][y][facing] = { walltype: overlaytype };\n}\n\nfunction remove_wall(obj) {\n  var mapData = obj.mapData;\n  var final = obj.final;\n  if (final === undefined) final = true;\n\n  var x = obj.x;\n  var y = obj.y;\n  var facing = obj.facing;\n  // console.log('in remove wall function', x, y, facing, mapData.wall[x][y][facing]);\n  if (mapData.wall[x][y][facing] === undefined) return true;\n  // console.log(mapData.wall[x][y][facing][\"permanent\"]);\n  if ('permanent' in mapData.wall[x][y][facing]) return false;\n  delete mapData.wall[x][y][facing];\n}\n\nfunction build_permanent_wall(obj) {\n  let { mapData, condition } = obj;\n\n  let bot = mapData.bot;\n  let word_to_direction = { ahead: 0, left: 3, right: 1 };\n  let directions = [\n    [-1, 0],\n    [0, 1],\n    [1, 0],\n    [0, -1],\n  ];\n  let x = bot.x;\n  let y = bot.y;\n  let direction = (bot.facing + word_to_direction[condition]) % 4;\n  let overlaytype = 1;\n\n  mapData.wall[x][y][direction] = { walltype: overlaytype, permanent: true };\n  x = x + directions[direction];\n  y = y + directions[direction];\n  direction = (direction + 2) % 4;\n  if (x >= 0 && y >= 0 && x < mapW && y < mapH)\n    mapData.wall[x][y][direction] = { walltype: overlaytype, permanent: true };\n}\n\nfunction init_mapData() {\n  var direction = Math.floor(Math.random() * 4);\n  var mapData = {\n    start: { x: 25, y: 25, facing: direction },\n    bot: { x: 25, y: 25, facing: direction, state: 1 },\n    check: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(0)),\n    count: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(0)),\n    check_object: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(false)),\n    platform: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(0)),\n    wall: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(undefined)),\n    enemies: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(undefined)),\n    tileoverlay: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(undefined)),\n    floatingobj: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(undefined)),\n    walloverlay: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(undefined)),\n    tiles: new Array(mapW_real).fill().map(() => new Array(mapH_real).fill(0)),\n  };\n  for (var i = 0; i < mapW_real; i++) {\n    for (var j = 0; j < mapH_real; j++) {\n      mapData.wall[i][j] = { 0: { walltype: 1 }, 1: { walltype: 1 }, 2: { walltype: 1 }, 3: { walltype: 1 } };\n    }\n  }\n  mapData.platform[mapData.bot.x][mapData.bot.y] = 1;\n  mapData.check_object[mapData.bot.x][mapData.bot.y] = true;\n  mapData.count[mapData.bot.x][mapData.bot.y] = 1;\n  return mapData;\n}\n\nfunction cal_position(x, y) {\n  return x * mapH + y;\n}\n\nfunction generate_distraction(obj) {\n  var directions = [\n    [-1, 0],\n    [0, 1],\n    [1, 0],\n    [0, -1],\n  ];\n  var mapData = obj.mapData;\n  var number_of_distractions = obj.number_of_distractions;\n  var pq = new PriorityQueue();\n  var uf = new UnionFind(mapW * mapH);\n\n  // console.log(mapData[0]);\n\n  for (var i = 0; i < mapW; i++) {\n    for (var j = 0; j < mapH; j++) {\n      for (var k = 0; k < 4; k++) {\n        if (mapData.platform[i][j] === 1) {\n          if (\n            i + directions[k][0] < 0 ||\n            i + directions[k][0] >= mapW ||\n            j + directions[k][1] < 0 ||\n            j + directions[k][1] >= mapH\n          )\n            continue;\n          if (k in mapData.wall[i][j] && 'permanent' in mapData.wall[i][j][k]) continue;\n          if (mapData.platform[i + directions[k][0]][j + directions[k][1]]) {\n            uf.union(cal_position(i, j), cal_position(i + directions[k][0], j + directions[k][1]));\n            if (k in mapData.wall[i][j]) {\n              mapData.wall[i][j][k].permanent = true;\n              mapData.wall[i + directions[k][0]][j + directions[k][1]][(k + 2) % 4].permanent = true;\n            }\n            continue;\n          }\n          if (k in mapData.wall[i][j]) pq.push({ x: i, y: j, dir: k }, Math.random());\n        }\n      }\n    }\n  }\n\n  while (number_of_distractions-- && !pq.isEmpty()) {\n    var obj = pq.pop().element;\n    var x = obj.x,\n      y = obj.y,\n      dir = obj.dir;\n    var pos1 = cal_position(x, y);\n    var pos2 = cal_position(x + directions[dir][0], y + directions[dir][1]);\n\n    var h1 = uf.find(pos1);\n    var h2 = uf.find(pos2);\n\n    if (h1 !== h2) {\n      remove_wall({ x: x, y: y, mapData: mapData, facing: dir });\n\n      uf.union(pos1, pos2);\n      x = obj.x + directions[dir][0];\n      y = obj.y + directions[dir][1];\n\n      remove_wall({ x: x, y: y, mapData: mapData, facing: (dir + 2) % 4 });\n      mapData.platform[x][y] = 1;\n\n      for (var k = 0; k < 4; k++) {\n        if (\n          x + directions[k][0] < 0 ||\n          x + directions[k][0] >= mapW ||\n          y + directions[k][1] < 0 ||\n          y + directions[k][1] >= mapH\n        )\n          continue;\n        if (mapData.wall[x][y][k] === undefined || 'permanent' in mapData.wall[x][y][k]) continue;\n        if (mapData.count[x + directions[k][0]][y + directions[k][1]]) {\n          // console.log('create permanent wall', x + directions[k][0], y + directions[k][1]);\n          mapData.wall[x][y][k].permanent = true;\n          mapData.wall[x + directions[k][0]][y + directions[k][1]][(k + 2) % 4].permanent = true;\n          continue;\n        }\n        if (mapData.platform[x][y]) continue;\n        var x2 = x + directions[k][0];\n        var y2 = y + directions[k][1];\n        if (uf.find(cal_position(x2, y2)) !== uf.find(cal_position(x, y))) {\n          pq.push({ x: x, y: y, dir: k }, Math.random());\n        }\n      }\n    } else {\n      console.log('cannot remove walls');\n      mapData.wall[x][y][dir].permanent = true;\n      mapData.wall[x + directions[dir][0]][y + directions[dir][1]][(dir + 2) % 4].permanent = true;\n      number_of_distractions++;\n    }\n  }\n\n  for (var i = 0; i < mapW; i++) {\n    for (var j = 0; j < mapH; j++) {\n      for (var k = 0; k < 4; k++) {\n        if (mapData.platform[i][j] === 1) {\n          if (\n            i + directions[k][0] < 0 ||\n            i + directions[k][0] >= mapW ||\n            j + directions[k][1] < 0 ||\n            j + directions[k][1] >= mapH\n          )\n            continue;\n          if (k in mapData.wall[i][j] && mapData.count[i][j]) {\n            console.log('create permanent at', i, j);\n            console.log(mapData.wall[i][j]);\n            console.log(i + directions[k][0], j + directions[k][1], (k + 2) % 4);\n            console.log(mapData.wall[i + directions[k][0]][j + directions[k][1]]);\n            mapData.wall[i][j][k].permanent = true;\n            mapData.wall[i + directions[k][0]][j + directions[k][1]][(k + 2) % 4].permanent = true;\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction generate_map(obj) {\n  var directions = [\n    [-1, 0],\n    [0, 1],\n    [1, 0],\n    [0, -1],\n  ];\n\n  var commands = obj.commands;\n  var mapData = obj.mapData;\n  var bot = obj.mapData.bot;\n  var check = obj.mapData.check;\n  var count = obj.mapData.count;\n  const prop_walk = 0.65;\n\n  var type = commands.type;\n\n  console.log(commands);\n\n  if (type === 'basic') {\n    commands = commands.commands;\n    for (var i = 0; i < commands.length; i++) {\n      check[bot.x][bot.y] = bot.state;\n      mapData.platform[bot.x][bot.y] = 1;\n      if (commands[i] instanceof Object) {\n        if (generate_map({ commands: commands[i], mapData: mapData }) === false) return false;\n      } else if (commands[i] === 0) {\n        if (remove_wall({ x: bot.x, y: bot.y, mapData: mapData, facing: bot.facing }) === false) return false;\n        bot.x = bot.x + directions[bot.facing][0];\n        bot.y = bot.y + directions[bot.facing][1];\n        if (bot.x < 0 || bot.x >= mapW_real || bot.y < 0 || bot.y >= mapH_real || check[bot.x][bot.y] === bot.state)\n          return false;\n        if (mapData.floatingobj[bot.x][bot.y] !== undefined) return false;\n        if (mapData.tileoverlay[bot.x][bot.y] !== undefined) return false;\n        check[bot.x][bot.y] = bot.state;\n        count[bot.x][bot.y]++;\n        if (remove_wall({ x: bot.x, y: bot.y, mapData: mapData, facing: (bot.facing + 2) % 4 }) === false) return false;\n      } else if (commands[i] === 1) {\n        bot.facing = (bot.facing + 1) % 4;\n      } else if (commands[i] === 2) {\n        bot.facing = (bot.facing + 3) % 4;\n      } else if (commands[i] === 3) {\n        if (mapData.check_object[bot.x][bot.y] === true || count[bot.x][bot.y] > 1) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n        add_enemies({ x: bot.x, y: bot.y, mapData: mapData });\n        bot.state += 1;\n        check[bot.x][bot.y] = bot.state;\n      } else if (commands[i] === 4) {\n        if (mapData.check_object[bot.x][bot.y] === true || count[bot.x][bot.y] > 1) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n        add_floatingobj({ x: bot.x, y: bot.y, mapData: mapData });\n        bot.state += 1;\n        check[bot.x][bot.y] = bot.state;\n      }\n    }\n  } else if (type === 'for') {\n    var iteration = commands.iteration;\n    var tmp_commands = { ...commands };\n    tmp_commands.type = 'basic';\n    for (var loop = 0; loop < iteration; loop++) {\n      if (generate_map({ commands: tmp_commands, mapData: mapData }) === false) return false;\n    }\n  } else if (type === 'if') {\n    if (commands.condition.includes('on')) {\n      // not done yet\n      let overlaytype = 1;\n      if (commands.condition === 'on red tile') {\n        overlaytype = 1;\n      } else if (commands.condition === 'on grey tile') {\n        overlaytype = 2;\n      }\n      if (Math.random() < prop_walk) {\n        console.log('=..=');\n        return true;\n      }\n      if (overlaytype === 1) {\n        console.log('test pass');\n      }\n      if (mapData.check_object[bot.x][bot.y] === true) return false;\n      mapData.check_object[bot.x][bot.y] = true;\n      var tmp_commands = { ...commands };\n      tmp_commands.type = 'basic';\n      add_tileoverlay({ mapData: mapData, x: bot.x, y: bot.y, overlaytype });\n      if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n    } else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({ mapData: mapData, condition: commands.condition });\n        return true;\n      }\n      var tmp_commands = { ...commands };\n      tmp_commands.type = 'basic';\n      if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n    }\n  } else if (type === 'if_else') {\n    /// not done yet\n    if (commands.condition.includes('on')) {\n      // not done yet\n      let overlaytype = 1;\n      if (commands.condition === 'on red tile') {\n        overlaytype = 1;\n      } else if (commands.condition === 'on grey tile') {\n        overlaytype = 2;\n      }\n\n      if (Math.random() < prop_walk) {\n        console.log('Math.random() < prop_walk');\n        var tmp_commands = { ...commands };\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      } else {\n        if (mapData.check_object[bot.x][bot.y] === true) return false;\n        mapData.check_object[bot.x][bot.y] = true;\n        var tmp_commands = { ...commands };\n        tmp_commands.type = 'basic';\n        add_tileoverlay({ mapData: mapData, x: bot.x, y: bot.y, overlaytype });\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      }\n    } else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({ mapData: mapData, condition: commands.condition });\n        // do commands else\n        var tmp_commands = { ...commands };\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      } else {\n        var tmp_commands = { ...commands };\n        tmp_commands.type = 'basic';\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      }\n    }\n  } else if (type === 'nested_if') {\n    /// not done yet\n    if (commands.condition.includes('on')) {\n    } else {\n      if (Math.random() < prop_walk) {\n        build_permanent_wall({ mapData: mapData, condition: commands.condition });\n        // do commands else\n        var tmp_commands = { ...commands };\n        tmp_commands.commands = tmp_commands.commands_else;\n        tmp_commands.type = 'basic';\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      } else {\n        var tmp_commands = { ...commands };\n        tmp_commands.type = 'basic';\n        if (generate_map({ mapData: mapData, commands: tmp_commands }) === false) return false;\n      }\n    }\n  }\n  mapData.platform[bot.x][bot.y] = 1;\n  return true;\n}\n\nfunction count_blocks(commands) {\n  let res = 0;\n  console.log('---');\n  console.log(commands);\n  if (commands.type !== 'basic') res = 1;\n  const { commands_else } = commands;\n  commands = commands.commands;\n  for (let i = 0; i < commands.length; i++) {\n    if (commands[i] instanceof Object) {\n      res += count_blocks(commands[i]);\n    } else {\n      res += 1;\n    }\n  }\n  if (commands_else) {\n    for (let i = 0; i < commands_else.length; i++) {\n      if (commands_else[i] instanceof Object) {\n        res += count_blocks(commands_else[i]);\n      } else {\n        res += 1;\n      }\n    }\n  }\n  return res;\n}\n\nfunction get_commands(commands) {\n  let res = [];\n  const { commands_else } = commands;\n  if (commands.type === 'for') {\n    res.push('for');\n    res.push('while_inf');\n  }\n  commands = commands.commands;\n  for (let i = 0; i < commands.length; i++) {\n    if (commands[i] instanceof Object) {\n      if (commands[i].type === 'if') {\n        if (\n          commands[i].condition === 'ahead' ||\n          commands[i].condition === 'left' ||\n          commands[i].condition === 'right'\n        ) {\n          res.push('if_path');\n        } else {\n          res.push('if_tile');\n        }\n      } else if (commands[i].type === 'if_else') {\n        if (\n          commands[i].condition === 'ahead' ||\n          commands[i].condition === 'left' ||\n          commands[i].condition === 'right'\n        ) {\n          res.push('if_path');\n          res.push('if_else_path');\n        } else {\n          res.push('if_tile');\n          res.push('if_else_tile');\n        }\n      } else {\n        res.push('for');\n        res.push('while_inf');\n      }\n      res.push(...get_commands(commands[i]));\n    } else if (commands[i] === 0) {\n      res.push('go_ahead');\n    } else if (commands[i] === 1) {\n      res.push('turn_left');\n      res.push('turn_right');\n    } else if (commands[i] === 2) {\n      res.push('turn_left');\n      res.push('turn_right');\n    } else if (commands[i] === 3) {\n      res.push('IDK');\n    } else if (commands[i] === 4) {\n      res.push('collect');\n    }\n  }\n  if (commands_else) {\n    for (let i = 0; i < commands_else.length; i++) {\n      if (commands_else[i] instanceof Object) {\n        if (commands_else[i].type === 'if') {\n          if (\n            commands_else[i].condition === 'ahead' ||\n            commands_else[i].condition === 'left' ||\n            commands_else[i].condition === 'right'\n          ) {\n            res.push('if_path');\n          } else {\n            res.push('if_tile');\n          }\n        } else if (commands_else[i].type === 'if_else') {\n          if (\n            commands_else[i].condition === 'ahead' ||\n            commands_else[i].condition === 'left' ||\n            commands_else[i].condition === 'right'\n          ) {\n            res.push('if_path');\n            res.push('if_else_path');\n          } else {\n            res.push('if_tile');\n            res.push('if_else_tile');\n          }\n        } else {\n          res.push('for');\n          res.push('while_inf');\n        }\n        res.push(...get_commands(commands_else[i]));\n      } else if (commands_else[i] === 0) {\n        res.push('go_ahead');\n      } else if (commands_else[i] === 1) {\n        res.push('turn_left');\n        res.push('turn_right');\n      } else if (commands_else[i] === 2) {\n        res.push('turn_left');\n        res.push('turn_right');\n      } else if (commands_else[i] === 3) {\n        res.push('IDK');\n      } else if (commands_else[i] === 4) {\n        res.push('collect');\n      }\n    }\n  }\n  let unique = [...new Set(res)];\n  return unique;\n}\n\nfunction generate_tiles(mapData) {\n  // const direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n  const DIRECTION_TO_NUM = [1, 2, 4, 8];\n\n  const NXT = { 0: [-1, 0], 1: [0, 1], 2: [1, 0], 3: [0, -1] };\n\n  const TILEOVERLAY = { 1: 128, 2: 256, 3: 512 };\n\n  const FINAL = 1024;\n  const FLOATING_OBJ = 16;\n\n  for (var i = 0; i < mapW; i++) {\n    for (var j = 0; j < mapH; j++) {\n      if (!mapData.platform[i][j]) {\n        continue;\n      }\n      if (mapData.floatingobj[i][j] !== undefined) {\n        mapData.tiles[i][j] += FLOATING_OBJ;\n      }\n      if (mapData.tileoverlay[i][j] !== undefined) {\n        mapData.tiles[i][j] += TILEOVERLAY[mapData.tileoverlay[i][j].overlaytype];\n      }\n      for (var k = 0; k < 4; k++) {\n        if (mapData.wall[i][j] !== undefined && k in mapData.wall[i][j] && 'permanent' in mapData.wall[i][j][k]) {\n          mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n        } else {\n          let nx_ii = i + NXT[k][0];\n          let nx_jj = j + NXT[k][1];\n          if (nx_ii < 0 || nx_ii >= mapW || nx_jj < 0 || nx_jj >= mapH) {\n            mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n          } else if (mapData.platform[i][j] === 1 && mapData.platform[nx_ii][nx_jj] === 0) {\n            mapData.tiles[i][j] += DIRECTION_TO_NUM[k];\n          }\n        }\n      }\n    }\n  }\n\n  mapData.tiles[mapData.end.x][mapData.end.y] += FINAL;\n\n  return;\n}\n\nfunction transform_map(obj) {\n  let { mapData, number_of_distractions } = obj;\n\n  var bot = mapData.bot;\n\n  if (number_of_distractions === undefined) number_of_distractions = 10;\n\n  var directions = [\n    [-1, 0],\n    [0, 1],\n    [1, 0],\n    [0, -1],\n  ];\n\n  if (mapData.check_object[bot.x][bot.y] === true || mapData.count[bot.x][bot.y] > 1) return false;\n\n  var direction_to_word = ['xb', 'yf', 'xf', 'yb'];\n  mapData.end = { x: bot.x, y: bot.y };\n\n  var mnX = 500,\n    mnY = 500,\n    mxX = -1,\n    mxY = -1;\n  for (var i = 0; i < mapW_real; i++) {\n    for (var j = 0; j < mapH_real; j++) {\n      if (mapData.platform[i][j] == 1) {\n        mnX = Math.min(mnX, i);\n        mxX = Math.max(mxX, i);\n        mnY = Math.min(mnY, j);\n        mxY = Math.max(mxY, j);\n      }\n    }\n  }\n\n  if (mxX - mnX + 1 > mapW || mxY - mnY + 1 > mapH) return false;\n\n  let stX = mnX - Math.floor((mapW - (mxX - mnX + 1)) / 2);\n  let stY = mnY - Math.floor((mapH - (mxY - mnY + 1)) / 2);\n\n  // console.log(mapData.start.facing);\n  mapData.player = {\n    position: [mapData.start.x - stX, mapData.start.y - stY],\n    beginPosition: [mapData.start.x - stX, mapData.start.y - stY],\n    facing: direction_to_word[mapData.start.facing],\n    beginFacing: direction_to_word[mapData.start.facing],\n  };\n  mapData.end = { x: mapData.end.x - stX, y: mapData.end.y - stY };\n  mapData.platform = slice_2d_array(mapData.platform, stX, stX + mapW, stY, stY + mapH);\n  mapData.wall = slice_2d_array(mapData.wall, stX, stX + mapW, stY, stY + mapH);\n  mapData.enemies = slice_2d_array(mapData.enemies, stX, stX + mapW, stY, stY + mapH);\n  mapData.tileoverlay = slice_2d_array(mapData.tileoverlay, stX, stX + mapW, stY, stY + mapH);\n  mapData.floatingobj = slice_2d_array(mapData.floatingobj, stX, stX + mapW, stY, stY + mapH);\n  mapData.count = slice_2d_array(mapData.count, stX, stX + mapW, stY, stY + mapH);\n  mapData.check = slice_2d_array(mapData.check, stX, stX + mapW, stY, stY + mapH);\n  mapData.check_object = slice_2d_array(mapData.check_object, stX, stX + mapW, stY, stY + mapH);\n  mapData.walloverlay = slice_2d_array(mapData.walloverlay, stX, stX + mapW, stY, stY + mapH);\n  mapData.tiles = slice_2d_array(mapData.tiles, stX, stX + mapW, stY, stY + mapH);\n\n  generate_distraction({ mapData: mapData, number_of_distractions: number_of_distractions });\n\n  // console.log('change walls');\n\n  for (var i = -1; i <= mapW; i++) {\n    for (var j = -1; j <= mapH; j++) {\n      if (i < 0 || j < 0 || i >= mapW || j >= mapH) {\n        for (var k = 0; k < 4; k++) {\n          var new_i = i + directions[k][0];\n          var new_j = j + directions[k][1];\n          if (new_i < 0 || new_j < 0 || new_i >= mapW || new_j >= mapH) continue;\n          if (mapData.wall[new_i][new_j] !== undefined && (k + 2) % 4 in mapData.wall[new_i][new_j]) {\n            delete mapData.wall[new_i][new_j][(k + 2) % 4];\n          }\n        }\n      } else if (mapData.platform[i][j] === 0) {\n        mapData.wall[i][j] = undefined;\n        for (let k = 0; k < 4; k++) {\n          let new_i = i + directions[k][0];\n          let new_j = j + directions[k][1];\n          if (new_i < 0 || new_j < 0 || new_i >= mapW || new_j >= mapH) continue;\n          if (mapData.wall[new_i][new_j] !== undefined && (k + 2) % 4 in mapData.wall[new_i][new_j]) {\n            delete mapData.wall[new_i][new_j][(k + 2) % 4];\n          }\n        }\n      }\n    }\n  }\n\n  generate_tiles(mapData);\n\n  for (let i = 0; i < mapW; i++) {\n    for (let j = 0; j < mapH; j++) {\n      for (let k = 0; k < 4; k++) {\n        if (mapData.wall[i][j] !== undefined && k in mapData.wall[i][j]) {\n          if ((k === 0 || k === 1) && 'permanent' in mapData.wall[i][j][k])\n            mapData.wall[i][j][direction_to_word[k]] = mapData.wall[i][j][k];\n          delete mapData.wall[i][j][k];\n        }\n      }\n    }\n  }\n\n  delete mapData.check;\n  delete mapData.check_object;\n  delete mapData.bot;\n  delete mapData.count;\n  delete mapData.start;\n}\n\nfunction get_gems(mapData) {\n  let res = 0;\n  for (let i = 0; i < mapW; i++) {\n    for (let j = 0; j < mapH; j++) {\n      if (mapData.floatingobj[i][j] && mapData.floatingobj[i][j].objtype === 'gem') {\n        res++;\n      }\n    }\n  }\n  return res;\n}\n\nexport function get_map(obj) {\n  // console.log(obj);\n  let {\n    commandLength,\n    commandLengthInCondition,\n    numIteration,\n    numTurnInLoop,\n    numberOfDistractions,\n    is_reversed,\n    condition_type,\n    condition_cate,\n    probs_of_actions,\n    type_of_actions,\n  } = obj;\n\n  if (commandLength === undefined) commandLength = 5;\n  if (commandLengthInCondition === undefined) commandLengthInCondition = 0;\n  if (numIteration === undefined) numIteration = 0;\n  if (numTurnInLoop === undefined) numTurnInLoop = 0;\n  if (numberOfDistractions === undefined) numberOfDistractions = 0;\n  if (is_reversed === undefined) is_reversed = false;\n  if (probs_of_actions === undefined) probs_of_actions = [0.5, 0.25, 0.25, 0, 0];\n  if (type_of_actions === undefined) type_of_actions = 3;\n  if (condition_type === undefined) condition_type = 'if';\n\n  console.log(obj);\n\n  var numberOfTries = 2000;\n  var commands;\n  while (numberOfTries--) {\n    var chk = false;\n    if (condition_cate) {\n      if (numIteration === 0) {\n        numIteration = 8;\n      }\n      if (condition_cate === 'tile') {\n        commands = if_else_tile_condition_commands_with_loop({\n          condition_type,\n          number_of_commands: commandLengthInCondition,\n          number_of_iterations: numIteration,\n          is_reversed: is_reversed,\n          probs_of_actions,\n          type_of_actions,\n        });\n      } else if (condition_cate === 'path') {\n        commands = if_else_path_condition_commands_with_loop({\n          condition_type,\n          number_of_iterations: numIteration,\n        });\n      } else {\n        console.log('condition_cate is not defined');\n        return;\n      }\n    } else if (numIteration > 0) {\n      if (numTurnInLoop === '0') {\n        commands = for_loop_commands({\n          number_of_turns: 2,\n          number_of_commands: commandLength,\n          number_of_iterations: numIteration,\n          probs_of_actions,\n          type_of_actions,\n        });\n      } else {\n        commands = for_loop_commands({\n          number_of_turns: numTurnInLoop,\n          number_of_commands: commandLength,\n          number_of_iterations: numIteration,\n          probs_of_actions,\n          type_of_actions,\n        });\n      }\n    } else {\n      commands = basic_commands({ number_of_commands: commandLength, probs_of_actions, type_of_actions });\n    }\n\n    console.log(commands);\n\n    console.log('generate map');\n\n    // commands = for_loop_commands({number_of_turns: 3, number_of_commands: 6, number_of_iterations: 3});\n    // commands = basic_commands({number_of_commands: 6});\n    // commands = if_else_tile_condition_commands_with_loop({condition_type: \"if\", number_of_commands: 1, number_of_iterations: 20, is_reversed: false});\n    let numberOfTriesGenerateMap = 10;\n    while (numberOfTriesGenerateMap--) {\n      var mapData = init_mapData();\n      if (generate_map({ commands, mapData }) === false) continue;\n      if (transform_map({ mapData, number_of_distractions: numberOfDistractions }) === false) continue;\n      chk = true;\n      break;\n    }\n    if (chk) {\n      const gems = get_gems(mapData);\n      mapData.blocks = {\n        maxBlocks: count_blocks(commands),\n        maxGems: gems,\n        cntGems: 0,\n        cntBlocks: 0,\n        command_blocks: get_commands(commands),\n      };\n      console.log(mapData.blocks);\n      break;\n    }\n  }\n  // console.log(commands);\n  if (chk) return mapData;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586205093482
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/utils.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/utils.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/utils.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.random_by_choice = random_by_choice;\nexports.slice_2d_array = slice_2d_array;\nexports.shuffle = shuffle;\nexports.arrToObject = arrToObject;\nexports.objectToArr = objectToArr;\n\n/// utility\n// random by choices and probability\nfunction random_by_choice(n, props) {\n  var rnd = Math.random();\n  var sum = 0.0;\n\n  for (var i = 0; i < n; i++) {\n    sum += props[i];\n\n    if (rnd <= sum) {\n      return i;\n    }\n  }\n\n  return n - 1;\n}\n\nfunction slice_2d_array(arr, stX, enX, stY, enY) {\n  var res = [];\n\n  for (var i = stX; i < enX; i++) {\n    res.push(arr[i].slice(stY, enY));\n  }\n\n  return res;\n} // shuffle array\n\n\nfunction shuffle(arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [arr[j], arr[i]];\n    arr[i] = _ref[0];\n    arr[j] = _ref[1];\n  }\n} // convert arrat to an object\n\n\nfunction arrToObject(arr) {\n  var obj = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    var tmp = arr[i];\n    obj[i] = tmp;\n  }\n\n  return obj;\n}\n\nfunction objectToArr(obj) {\n  var arr = [];\n\n  for (var i = 0; i < 11; i++) {\n    if (i in obj) {\n      arr.push(obj[i]);\n    }\n  }\n\n  return arr;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbInJhbmRvbV9ieV9jaG9pY2UiLCJuIiwicHJvcHMiLCJybmQiLCJNYXRoIiwicmFuZG9tIiwic3VtIiwiaSIsInNsaWNlXzJkX2FycmF5IiwiYXJyIiwic3RYIiwiZW5YIiwic3RZIiwiZW5ZIiwicmVzIiwicHVzaCIsInNsaWNlIiwic2h1ZmZsZSIsImxlbmd0aCIsImoiLCJmbG9vciIsImFyclRvT2JqZWN0Iiwib2JqIiwidG1wIiwib2JqZWN0VG9BcnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVPLFNBQVNBLGdCQUFULENBQTBCQyxDQUExQixFQUE2QkMsS0FBN0IsRUFBb0M7QUFDekMsTUFBSUMsR0FBRyxHQUFHQyxJQUFJLENBQUNDLE1BQUwsRUFBVjtBQUNBLE1BQUlDLEdBQUcsR0FBRyxHQUFWOztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR04sQ0FBcEIsRUFBdUJNLENBQUMsRUFBeEIsRUFBNEI7QUFDMUJELElBQUFBLEdBQUcsSUFBSUosS0FBSyxDQUFDSyxDQUFELENBQVo7O0FBQ0EsUUFBSUosR0FBRyxJQUFJRyxHQUFYLEVBQWdCO0FBQ2QsYUFBT0MsQ0FBUDtBQUNEO0FBQ0Y7O0FBQ0QsU0FBT04sQ0FBQyxHQUFHLENBQVg7QUFDRDs7QUFFTSxTQUFTTyxjQUFULENBQXdCQyxHQUF4QixFQUE2QkMsR0FBN0IsRUFBa0NDLEdBQWxDLEVBQXVDQyxHQUF2QyxFQUE0Q0MsR0FBNUMsRUFBaUQ7QUFDdEQsTUFBSUMsR0FBRyxHQUFHLEVBQVY7O0FBQ0EsT0FBSyxJQUFJUCxDQUFDLEdBQUdHLEdBQWIsRUFBa0JILENBQUMsR0FBR0ksR0FBdEIsRUFBMkJKLENBQUMsRUFBNUIsRUFBZ0M7QUFDOUJPLElBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTTixHQUFHLENBQUNGLENBQUQsQ0FBSCxDQUFPUyxLQUFQLENBQWFKLEdBQWIsRUFBa0JDLEdBQWxCLENBQVQ7QUFDRDs7QUFDRCxTQUFPQyxHQUFQO0FBQ0QsQyxDQUVEOzs7QUFFTyxTQUFTRyxPQUFULENBQWlCUixHQUFqQixFQUFzQjtBQUMzQixPQUFLLElBQUlGLENBQUMsR0FBR0UsR0FBRyxDQUFDUyxNQUFKLEdBQWEsQ0FBMUIsRUFBNkJYLENBQUMsR0FBRyxDQUFqQyxFQUFvQ0EsQ0FBQyxFQUFyQyxFQUF5QztBQUN2QyxRQUFJWSxDQUFDLEdBQUdmLElBQUksQ0FBQ2dCLEtBQUwsQ0FBV2hCLElBQUksQ0FBQ0MsTUFBTCxNQUFpQkUsQ0FBQyxHQUFHLENBQXJCLENBQVgsQ0FBUjtBQUR1QyxlQUVwQixDQUFDRSxHQUFHLENBQUNVLENBQUQsQ0FBSixFQUFTVixHQUFHLENBQUNGLENBQUQsQ0FBWixDQUZvQjtBQUV0Q0UsSUFBQUEsR0FBRyxDQUFDRixDQUFELENBRm1DO0FBRTlCRSxJQUFBQSxHQUFHLENBQUNVLENBQUQsQ0FGMkI7QUFHeEM7QUFDRixDLENBRUQ7OztBQUVPLFNBQVNFLFdBQVQsQ0FBcUJaLEdBQXJCLEVBQTBCO0FBQy9CLE1BQUlhLEdBQUcsR0FBRyxFQUFWOztBQUVBLE9BQUssSUFBSWYsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0UsR0FBRyxDQUFDUyxNQUF4QixFQUFnQ1gsQ0FBQyxFQUFqQyxFQUFxQztBQUNuQyxRQUFJZ0IsR0FBRyxHQUFHZCxHQUFHLENBQUNGLENBQUQsQ0FBYjtBQUNBZSxJQUFBQSxHQUFHLENBQUNmLENBQUQsQ0FBSCxHQUFTZ0IsR0FBVDtBQUNEOztBQUVELFNBQU9ELEdBQVA7QUFDRDs7QUFFTSxTQUFTRSxXQUFULENBQXFCRixHQUFyQixFQUEwQjtBQUMvQixNQUFJYixHQUFHLEdBQUcsRUFBVjs7QUFFQSxPQUFLLElBQUlGLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0IsUUFBSUEsQ0FBQyxJQUFJZSxHQUFULEVBQWM7QUFDWmIsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVNPLEdBQUcsQ0FBQ2YsQ0FBRCxDQUFaO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPRSxHQUFQO0FBQ0QiLCJzb3VyY2VSb290IjoiL1VzZXJzL2p1bXB3bWsvRG9jdW1lbnRzL1llYXI0XzIvc2VuaW9yX3Byb2plY3QvbG9naWNHYW1lV2l0aEJsb2NrbHktYmFja2VuZC9hcHAvdXRpbHMvIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIHV0aWxpdHlcblxuLy8gcmFuZG9tIGJ5IGNob2ljZXMgYW5kIHByb2JhYmlsaXR5XG5cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21fYnlfY2hvaWNlKG4sIHByb3BzKSB7XG4gIHZhciBybmQgPSBNYXRoLnJhbmRvbSgpO1xuICB2YXIgc3VtID0gMC4wO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47IGkrKykge1xuICAgIHN1bSArPSBwcm9wc1tpXTtcbiAgICBpZiAocm5kIDw9IHN1bSkge1xuICAgICAgcmV0dXJuIGk7XG4gICAgfVxuICB9XG4gIHJldHVybiBuIC0gMTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNsaWNlXzJkX2FycmF5KGFyciwgc3RYLCBlblgsIHN0WSwgZW5ZKSB7XG4gIHZhciByZXMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IHN0WDsgaSA8IGVuWDsgaSsrKSB7XG4gICAgcmVzLnB1c2goYXJyW2ldLnNsaWNlKHN0WSwgZW5ZKSk7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuLy8gc2h1ZmZsZSBhcnJheVxuXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnIpIHtcbiAgZm9yICh2YXIgaSA9IGFyci5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7XG4gICAgdmFyIGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKTtcbiAgICBbYXJyW2ldLCBhcnJbal1dID0gW2FycltqXSwgYXJyW2ldXTtcbiAgfVxufVxuXG4vLyBjb252ZXJ0IGFycmF0IHRvIGFuIG9iamVjdFxuXG5leHBvcnQgZnVuY3Rpb24gYXJyVG9PYmplY3QoYXJyKSB7XG4gIGxldCBvYmogPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGxldCB0bXAgPSBhcnJbaV07XG4gICAgb2JqW2ldID0gdG1wO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdFRvQXJyKG9iaikge1xuICBsZXQgYXJyID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMTsgaSsrKSB7XG4gICAgaWYgKGkgaW4gb2JqKSB7XG4gICAgICBhcnIucHVzaChvYmpbaV0pO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhcnI7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "random_by_choice",
        "n",
        "props",
        "rnd",
        "Math",
        "random",
        "sum",
        "i",
        "slice_2d_array",
        "arr",
        "stX",
        "enX",
        "stY",
        "enY",
        "res",
        "push",
        "slice",
        "shuffle",
        "length",
        "j",
        "floor",
        "arrToObject",
        "obj",
        "tmp",
        "objectToArr"
      ],
      "mappings": ";;;;;;;;;;;AAAA;AAEA;AAEO,SAASA,gBAAT,CAA0BC,CAA1B,EAA6BC,KAA7B,EAAoC;AACzC,MAAIC,GAAG,GAAGC,IAAI,CAACC,MAAL,EAAV;AACA,MAAIC,GAAG,GAAG,GAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAApB,EAAuBM,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,GAAG,IAAIJ,KAAK,CAACK,CAAD,CAAZ;;AACA,QAAIJ,GAAG,IAAIG,GAAX,EAAgB;AACd,aAAOC,CAAP;AACD;AACF;;AACD,SAAON,CAAC,GAAG,CAAX;AACD;;AAEM,SAASO,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,GAA5C,EAAiD;AACtD,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIP,CAAC,GAAGG,GAAb,EAAkBH,CAAC,GAAGI,GAAtB,EAA2BJ,CAAC,EAA5B,EAAgC;AAC9BO,IAAAA,GAAG,CAACC,IAAJ,CAASN,GAAG,CAACF,CAAD,CAAH,CAAOS,KAAP,CAAaJ,GAAb,EAAkBC,GAAlB,CAAT;AACD;;AACD,SAAOC,GAAP;AACD,C,CAED;;;AAEO,SAASG,OAAT,CAAiBR,GAAjB,EAAsB;AAC3B,OAAK,IAAIF,CAAC,GAAGE,GAAG,CAACS,MAAJ,GAAa,CAA1B,EAA6BX,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvC,QAAIY,CAAC,GAAGf,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACC,MAAL,MAAiBE,CAAC,GAAG,CAArB,CAAX,CAAR;AADuC,eAEpB,CAACE,GAAG,CAACU,CAAD,CAAJ,EAASV,GAAG,CAACF,CAAD,CAAZ,CAFoB;AAEtCE,IAAAA,GAAG,CAACF,CAAD,CAFmC;AAE9BE,IAAAA,GAAG,CAACU,CAAD,CAF2B;AAGxC;AACF,C,CAED;;;AAEO,SAASE,WAAT,CAAqBZ,GAArB,EAA0B;AAC/B,MAAIa,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACS,MAAxB,EAAgCX,CAAC,EAAjC,EAAqC;AACnC,QAAIgB,GAAG,GAAGd,GAAG,CAACF,CAAD,CAAb;AACAe,IAAAA,GAAG,CAACf,CAAD,CAAH,GAASgB,GAAT;AACD;;AAED,SAAOD,GAAP;AACD;;AAEM,SAASE,WAAT,CAAqBF,GAArB,EAA0B;AAC/B,MAAIb,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIA,CAAC,IAAIe,GAAT,EAAc;AACZb,MAAAA,GAAG,CAACM,IAAJ,CAASO,GAAG,CAACf,CAAD,CAAZ;AACD;AACF;;AAED,SAAOE,GAAP;AACD",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "sourcesContent": [
        "/// utility\n\n// random by choices and probability\n\nexport function random_by_choice(n, props) {\n  var rnd = Math.random();\n  var sum = 0.0;\n  for (var i = 0; i < n; i++) {\n    sum += props[i];\n    if (rnd <= sum) {\n      return i;\n    }\n  }\n  return n - 1;\n}\n\nexport function slice_2d_array(arr, stX, enX, stY, enY) {\n  var res = [];\n  for (var i = stX; i < enX; i++) {\n    res.push(arr[i].slice(stY, enY));\n  }\n  return res;\n}\n\n// shuffle array\n\nexport function shuffle(arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n}\n\n// convert arrat to an object\n\nexport function arrToObject(arr) {\n  let obj = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    let tmp = arr[i];\n    obj[i] = tmp;\n  }\n\n  return obj;\n}\n\nexport function objectToArr(obj) {\n  let arr = [];\n\n  for (var i = 0; i < 11; i++) {\n    if (i in obj) {\n      arr.push(obj[i]);\n    }\n  }\n\n  return arr;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586200217969
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/basicCommands.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/basicCommands.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/basicCommands.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/basicCommands.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "basicCommands.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.basic_commands = basic_commands;\nexports.reverse_basic_commands = reverse_basic_commands;\nexports.basic_for_loop_commands = basic_for_loop_commands;\nexports.basic_commands_for_tile_condition = basic_commands_for_tile_condition;\n\nvar _utils = require(\"../utils/utils\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction basic_commands(obj) {\n  var number_of_commands = obj.number_of_commands,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  if (number_of_commands === undefined) number_of_commands = 5;\n  var excepted_commands = [[1, 2], [1, 3], [1, 4], [2, 1], [2, 3], [2, 4], [3, 3], [3, 4], [4, 3], [4, 4]];\n  var command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n  while (command > 2) {\n    command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n  }\n\n  var commands = [command];\n\n  for (var i = 0; i < number_of_commands - 2; i++) {\n    var chk = true;\n\n    while (chk) {\n      chk = false;\n      command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n      for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (commands[commands.length - 1] === excepted_commands[excepted_command][0] && command === excepted_commands[excepted_command][1]) {\n          chk = true;\n        }\n      }\n\n      if (commands.length >= 2 && commands[commands.length - 1] > 0 && commands[commands.length - 1] == commands[commands.length - 2] && commands[commands.length - 1] === command) chk = true;\n    }\n\n    commands.push(command);\n  }\n\n  commands.push(0);\n  commands = {\n    commands: commands,\n    type: 'basic'\n  };\n  return commands;\n}\n\nfunction reverse_basic_commands(obj) {\n  var commands = obj.commands;\n  if (commands === undefined) commands = [0, 1, 0, 2, 0];\n  var new_commands = [].concat(_toConsumableArray(commands), [2, 2]);\n\n  for (var i = commands.length - 1; i > 0; i--) {\n    if (commands[i] == 0) {\n      new_commands.push(0);\n    } else if (commands[i] == 1) {\n      new_commands.push(2);\n    } else if (commands[i] == 2) {\n      new_commands.push(1);\n    }\n  }\n\n  new_commands.push(commands[0]);\n  return new_commands;\n} // generate commands for loop commands\n\n\nfunction basic_for_loop_commands(obj) {\n  var number_of_turns = obj.number_of_turns,\n      number_of_commands = obj.number_of_commands,\n      number_of_iterations = obj.number_of_iterations,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  if (number_of_turns === undefined) number_of_turns = 2;\n  if (number_of_commands === undefined) number_of_commands = 5;\n  if (number_of_iterations === undefined) number_of_iterations = 4;\n  var excepted_commands = [[1, 1], [1, 2], [2, 1], [2, 2], [3, 3], [3, 4], [4, 3], [4, 4]];\n  var commands = [];\n\n  if (number_of_commands - 2 * number_of_turns + 1 < 0) {\n    console.log('cannot generate basic commands');\n    return commands;\n  }\n\n  number_of_commands = number_of_commands - (2 * number_of_turns - 1);\n\n  if (number_of_commands > 0 && Math.random() < 1 / number_of_turns) {\n    commands.push(0);\n    number_of_commands--;\n  }\n\n  for (var i = 0; i < number_of_turns; i++) {\n    while (commands.length > 0 && number_of_commands > 0 && Math.random() < 1 / (number_of_turns - i + 0.5)) {\n      var chk = true;\n      var command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n      while (chk) {\n        chk = false;\n        command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n        if (command === 1 || command === 2) chk = true;\n\n        for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n          if (commands[commands.length - 1] === excepted_commands[excepted_command][0] && command === excepted_commands[excepted_command][1]) {\n            chk = true;\n          }\n        }\n      }\n\n      number_of_commands--;\n      commands.push(command);\n    }\n\n    if (Math.random() < 0.5) commands.push(1);else commands.push(2);\n    if (i !== number_of_turns - 1) commands.push(0);\n  }\n\n  if (commands.length === 0) {\n    commands.push(0);\n    number_of_commands--;\n  }\n\n  while (number_of_commands) {\n    var chk = true;\n    var command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n    while (chk) {\n      chk = false;\n      command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n      if (command === 1 || command === 2) chk = true;\n\n      for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (commands[commands.length - 1] === excepted_commands[excepted_command][0] && command === excepted_commands[excepted_command][1]) {\n          chk = true;\n        }\n      }\n    }\n\n    number_of_commands--;\n    commands.push(command);\n  }\n\n  return commands;\n}\n\nfunction basic_commands_for_tile_condition(obj) {\n  var number_of_commands = obj.number_of_commands,\n      commands = obj.commands,\n      is_reversed = obj.is_reversed,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  var command;\n  if (number_of_commands === undefined) number_of_commands = 1;\n  number_of_commands = parseInt(number_of_commands);\n\n  if (commands === undefined) {\n    commands = [];\n    if (number_of_commands < 1) number_of_commands = 1;else if (number_of_commands === 1) {\n      command = Math.floor(Math.random() * 2) + 1;\n    } else if (number_of_commands === 2) {\n      commands = [0, Math.floor(Math.random() * 2) + 1];\n    } else {\n      command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n      while (command > 2) {\n        command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n      }\n\n      commands.push(command);\n    }\n  }\n\n  if (is_reversed === undefined) is_reversed = false;\n  var excepted_commands = [[1, 1], [1, 2], [1, 3], [1, 4], [2, 1], [2, 2], [2, 3], [2, 4], [3, 3], [3, 4], [4, 3], [4, 4]];\n\n  for (var i = 0; i < number_of_commands - 3; i++) {\n    var chk = true;\n\n    while (chk) {\n      chk = false;\n      command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n      for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (commands[commands.length - 1] === excepted_commands[excepted_command][0] && command === excepted_commands[excepted_command][1]) {\n          chk = true;\n        }\n      }\n    }\n\n    commands.push(command);\n  }\n\n  commands.push(0);\n  command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n\n  while (command === 0) {\n    command = (0, _utils.random_by_choice)(type_of_actions, probs_of_actions);\n  }\n\n  commands.push(command);\n\n  if (is_reversed) {\n    if (Math.random() < 0.5) commands = [].concat(_toConsumableArray(commands), [0, 4]);else commands = [].concat(_toConsumableArray(commands), [0, 4]);\n    commands = reverse_basic_commands({\n      commands: commands\n    });\n  }\n\n  return commands;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "basicCommands.js"
      ],
      "names": [
        "basic_commands",
        "obj",
        "number_of_commands",
        "type_of_actions",
        "probs_of_actions",
        "undefined",
        "excepted_commands",
        "command",
        "commands",
        "i",
        "chk",
        "excepted_command",
        "length",
        "push",
        "type",
        "reverse_basic_commands",
        "new_commands",
        "basic_for_loop_commands",
        "number_of_turns",
        "number_of_iterations",
        "console",
        "log",
        "Math",
        "random",
        "basic_commands_for_tile_condition",
        "is_reversed",
        "parseInt",
        "floor"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "import { random_by_choice, slice_2d_array, shuffle } from '../utils/utils';\n\nexport function basic_commands(obj) {\n  let { number_of_commands, type_of_actions, probs_of_actions } = obj;\n\n  if (number_of_commands === undefined) number_of_commands = 5;\n\n  const excepted_commands = [\n    [1, 2],\n    [1, 3],\n    [1, 4],\n    [2, 1],\n    [2, 3],\n    [2, 4],\n    [3, 3],\n    [3, 4],\n    [4, 3],\n    [4, 4],\n  ];\n\n  let command = random_by_choice(type_of_actions, probs_of_actions);\n  while (command > 2) command = random_by_choice(type_of_actions, probs_of_actions);\n  let commands = [command];\n\n  for (let i = 0; i < number_of_commands - 2; i++) {\n    let chk = true;\n    while (chk) {\n      chk = false;\n      command = random_by_choice(type_of_actions, probs_of_actions);\n      for (let excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (\n          commands[commands.length - 1] === excepted_commands[excepted_command][0] &&\n          command === excepted_commands[excepted_command][1]\n        ) {\n          chk = true;\n        }\n      }\n      if (\n        commands.length >= 2 &&\n        commands[commands.length - 1] > 0 &&\n        commands[commands.length - 1] == commands[commands.length - 2] &&\n        commands[commands.length - 1] === command\n      )\n        chk = true;\n    }\n    commands.push(command);\n  }\n  commands.push(0);\n  commands = { commands: commands, type: 'basic' };\n  return commands;\n}\n\nexport function reverse_basic_commands(obj) {\n  var { commands } = obj;\n  if (commands === undefined) commands = [0, 1, 0, 2, 0];\n\n  var new_commands = [...commands, ...[2, 2]];\n  for (var i = commands.length - 1; i > 0; i--) {\n    if (commands[i] == 0) {\n      new_commands.push(0);\n    } else if (commands[i] == 1) {\n      new_commands.push(2);\n    } else if (commands[i] == 2) {\n      new_commands.push(1);\n    }\n  }\n  new_commands.push(commands[0]);\n  return new_commands;\n}\n\n// generate commands for loop commands\n\nexport function basic_for_loop_commands(obj) {\n  let { number_of_turns, number_of_commands, number_of_iterations, type_of_actions, probs_of_actions } = obj;\n\n  if (number_of_turns === undefined) number_of_turns = 2;\n  if (number_of_commands === undefined) number_of_commands = 5;\n  if (number_of_iterations === undefined) number_of_iterations = 4;\n\n  const excepted_commands = [\n    [1, 1],\n    [1, 2],\n    [2, 1],\n    [2, 2],\n    [3, 3],\n    [3, 4],\n    [4, 3],\n    [4, 4],\n  ];\n\n  let commands = [];\n  if (number_of_commands - 2 * number_of_turns + 1 < 0) {\n    console.log('cannot generate basic commands');\n    return commands;\n  }\n\n  number_of_commands = number_of_commands - (2 * number_of_turns - 1);\n  if (number_of_commands > 0 && Math.random() < 1 / number_of_turns) {\n    commands.push(0);\n    number_of_commands--;\n  }\n  for (var i = 0; i < number_of_turns; i++) {\n    while (commands.length > 0 && number_of_commands > 0 && Math.random() < 1 / (number_of_turns - i + 0.5)) {\n      var chk = true;\n      var command = random_by_choice(type_of_actions, probs_of_actions);\n      while (chk) {\n        chk = false;\n        command = random_by_choice(type_of_actions, probs_of_actions);\n        if (command === 1 || command === 2) chk = true;\n        for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n          if (\n            commands[commands.length - 1] === excepted_commands[excepted_command][0] &&\n            command === excepted_commands[excepted_command][1]\n          ) {\n            chk = true;\n          }\n        }\n      }\n      number_of_commands--;\n      commands.push(command);\n    }\n    if (Math.random() < 0.5) commands.push(1);\n    else commands.push(2);\n\n    if (i !== number_of_turns - 1) commands.push(0);\n  }\n  if (commands.length === 0) {\n    commands.push(0);\n    number_of_commands--;\n  }\n  while (number_of_commands) {\n    var chk = true;\n    var command = random_by_choice(type_of_actions, probs_of_actions);\n    while (chk) {\n      chk = false;\n      command = random_by_choice(type_of_actions, probs_of_actions);\n      if (command === 1 || command === 2) chk = true;\n      for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (\n          commands[commands.length - 1] === excepted_commands[excepted_command][0] &&\n          command === excepted_commands[excepted_command][1]\n        ) {\n          chk = true;\n        }\n      }\n    }\n    number_of_commands--;\n    commands.push(command);\n  }\n  return commands;\n}\n\nexport function basic_commands_for_tile_condition(obj) {\n  let { number_of_commands, commands, is_reversed, type_of_actions, probs_of_actions } = obj;\n\n  let command;\n\n  if (number_of_commands === undefined) number_of_commands = 1;\n  number_of_commands = parseInt(number_of_commands);\n  if (commands === undefined) {\n    commands = [];\n    if (number_of_commands < 1) number_of_commands = 1;\n    else if (number_of_commands === 1) {\n      command = Math.floor(Math.random() * 2) + 1;\n    } else if (number_of_commands === 2) {\n      commands = [0, Math.floor(Math.random() * 2) + 1];\n    } else {\n      command = random_by_choice(type_of_actions, probs_of_actions);\n      while (command > 2) command = random_by_choice(type_of_actions, probs_of_actions);\n      commands.push(command);\n    }\n  }\n  if (is_reversed === undefined) is_reversed = false;\n\n  const excepted_commands = [\n    [1, 1],\n    [1, 2],\n    [1, 3],\n    [1, 4],\n    [2, 1],\n    [2, 2],\n    [2, 3],\n    [2, 4],\n    [3, 3],\n    [3, 4],\n    [4, 3],\n    [4, 4],\n  ];\n  for (var i = 0; i < number_of_commands - 3; i++) {\n    var chk = true;\n    while (chk) {\n      chk = false;\n      command = random_by_choice(type_of_actions, probs_of_actions);\n      for (var excepted_command = 0; excepted_command < excepted_commands.length; excepted_command++) {\n        if (\n          commands[commands.length - 1] === excepted_commands[excepted_command][0] &&\n          command === excepted_commands[excepted_command][1]\n        ) {\n          chk = true;\n        }\n      }\n    }\n    commands.push(command);\n  }\n  commands.push(0);\n  command = random_by_choice(type_of_actions, probs_of_actions);\n  while (command === 0) command = random_by_choice(type_of_actions, probs_of_actions);\n  commands.push(command);\n\n  if (is_reversed) {\n    if (Math.random() < 0.5) commands = [...commands, ...[0, 4]];\n    else commands = [...commands, ...[0, 4]];\n    commands = reverse_basic_commands({ commands: commands });\n  }\n  return commands;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586186890743
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/loopCommands.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/loopCommands.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/loopCommands.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/loopCommands.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "loopCommands.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.for_loop_commands = for_loop_commands;\nexports.nested_for_loop_commands = nested_for_loop_commands;\n\nvar _utils = require(\"../utils/utils\");\n\nvar _basicCommands = require(\"./basicCommands\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction for_loop_commands(obj) {\n  var number_of_turns = obj.number_of_turns,\n      number_of_commands = obj.number_of_commands,\n      number_of_iterations = obj.number_of_iterations,\n      probs_of_actions = obj.probs_of_actions,\n      type_of_actions = obj.type_of_actions;\n  if (number_of_turns === undefined) number_of_turns = 2;\n  if (number_of_commands === undefined) number_of_commands = 4;\n  if (number_of_iterations === undefined) number_of_iterations = 4;\n  var commands = (0, _basicCommands.basic_for_loop_commands)({\n    number_of_turns: number_of_turns,\n    number_of_commands: number_of_commands,\n    number_of_iterations: number_of_iterations,\n    probs_of_actions: probs_of_actions,\n    type_of_actions: type_of_actions\n  });\n  commands = {\n    commands: commands,\n    iteration: number_of_iterations,\n    type: 'for'\n  };\n  return commands;\n} // generate commands for nested loop commands\n\n\nfunction nested_for_loop_commands(obj) {\n  var number_of_outer_loop_turns = obj.number_of_outer_loop_turns,\n      number_of_outer_loop_commands = obj.number_of_outer_loop_commands,\n      number_of_outer_loop_iterations = obj.number_of_outer_loop_iterations,\n      number_of_inner_loop_turns = obj.number_of_inner_loop_turns,\n      number_of_inner_loop_commands = obj.number_of_inner_loop_commands,\n      number_of_inner_loop_iterations = obj.number_of_inner_loop_iterations,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  if (number_of_outer_loop_turns === undefined) number_of_outer_loop_turns = 1;\n  if (number_of_outer_loop_commands === undefined) number_of_outer_loop_commands = 2;\n  if (number_of_outer_loop_iterations === undefined) number_of_outer_loop_iterations = 3;\n  if (number_of_inner_loop_turns === undefined) number_of_inner_loop_turns = 1;\n  if (number_of_inner_loop_commands === undefined) number_of_inner_loop_commands = 2;\n  if (number_of_inner_loop_iterations === undefined) number_of_inner_loop_iterations = 2;\n  var inner_commands = for_loop_commands({\n    number_of_turns: number_of_inner_loop_turns,\n    number_of_commands: number_of_inner_loop_commands,\n    number_of_iterations: number_of_inner_loop_iterations,\n    type_of_actions: type_of_actions,\n    probs_of_actions: probs_of_actions\n  });\n  var outter_commands = (0, _basicCommands.basic_for_loop_commands)({\n    number_of_turns: number_of_outer_loop_turns,\n    number_of_commands: number_of_outer_loop_commands,\n    number_of_iterations: number_of_outer_loop_iterations,\n    probs_of_actions: probs_of_actions,\n    type_of_actions: type_of_actions\n  });\n  var commands = [inner_commands].concat(_toConsumableArray(outter_commands));\n  commands = {\n    commands: commands,\n    iteration: number_of_outer_loop_iterations,\n    type: 'for'\n  };\n  return commands;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvb3BDb21tYW5kcy5qcyJdLCJuYW1lcyI6WyJmb3JfbG9vcF9jb21tYW5kcyIsIm9iaiIsIm51bWJlcl9vZl90dXJucyIsIm51bWJlcl9vZl9jb21tYW5kcyIsIm51bWJlcl9vZl9pdGVyYXRpb25zIiwicHJvYnNfb2ZfYWN0aW9ucyIsInR5cGVfb2ZfYWN0aW9ucyIsInVuZGVmaW5lZCIsImNvbW1hbmRzIiwiaXRlcmF0aW9uIiwidHlwZSIsIm5lc3RlZF9mb3JfbG9vcF9jb21tYW5kcyIsIm51bWJlcl9vZl9vdXRlcl9sb29wX3R1cm5zIiwibnVtYmVyX29mX291dGVyX2xvb3BfY29tbWFuZHMiLCJudW1iZXJfb2Zfb3V0ZXJfbG9vcF9pdGVyYXRpb25zIiwibnVtYmVyX29mX2lubmVyX2xvb3BfdHVybnMiLCJudW1iZXJfb2ZfaW5uZXJfbG9vcF9jb21tYW5kcyIsIm51bWJlcl9vZl9pbm5lcl9sb29wX2l0ZXJhdGlvbnMiLCJpbm5lcl9jb21tYW5kcyIsIm91dHRlcl9jb21tYW5kcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7QUFFTyxTQUFTQSxpQkFBVCxDQUEyQkMsR0FBM0IsRUFBZ0M7QUFBQSxNQUMvQkMsZUFEK0IsR0FDa0VELEdBRGxFLENBQy9CQyxlQUQrQjtBQUFBLE1BQ2RDLGtCQURjLEdBQ2tFRixHQURsRSxDQUNkRSxrQkFEYztBQUFBLE1BQ01DLG9CQUROLEdBQ2tFSCxHQURsRSxDQUNNRyxvQkFETjtBQUFBLE1BQzRCQyxnQkFENUIsR0FDa0VKLEdBRGxFLENBQzRCSSxnQkFENUI7QUFBQSxNQUM4Q0MsZUFEOUMsR0FDa0VMLEdBRGxFLENBQzhDSyxlQUQ5QztBQUdyQyxNQUFJSixlQUFlLEtBQUtLLFNBQXhCLEVBQW1DTCxlQUFlLEdBQUcsQ0FBbEI7QUFDbkMsTUFBSUMsa0JBQWtCLEtBQUtJLFNBQTNCLEVBQXNDSixrQkFBa0IsR0FBRyxDQUFyQjtBQUN0QyxNQUFJQyxvQkFBb0IsS0FBS0csU0FBN0IsRUFBd0NILG9CQUFvQixHQUFHLENBQXZCO0FBRXhDLE1BQUlJLFFBQVEsR0FBRyw0Q0FBd0I7QUFDckNOLElBQUFBLGVBQWUsRUFBRUEsZUFEb0I7QUFFckNDLElBQUFBLGtCQUFrQixFQUFFQSxrQkFGaUI7QUFHckNDLElBQUFBLG9CQUFvQixFQUFFQSxvQkFIZTtBQUlyQ0MsSUFBQUEsZ0JBQWdCLEVBQWhCQSxnQkFKcUM7QUFLckNDLElBQUFBLGVBQWUsRUFBZkE7QUFMcUMsR0FBeEIsQ0FBZjtBQU9BRSxFQUFBQSxRQUFRLEdBQUc7QUFBRUEsSUFBQUEsUUFBUSxFQUFFQSxRQUFaO0FBQXNCQyxJQUFBQSxTQUFTLEVBQUVMLG9CQUFqQztBQUF1RE0sSUFBQUEsSUFBSSxFQUFFO0FBQTdELEdBQVg7QUFDQSxTQUFPRixRQUFQO0FBQ0QsQyxDQUVEOzs7QUFFTyxTQUFTRyx3QkFBVCxDQUFrQ1YsR0FBbEMsRUFBdUM7QUFBQSxNQUUxQ1csMEJBRjBDLEdBVXhDWCxHQVZ3QyxDQUUxQ1csMEJBRjBDO0FBQUEsTUFHMUNDLDZCQUgwQyxHQVV4Q1osR0FWd0MsQ0FHMUNZLDZCQUgwQztBQUFBLE1BSTFDQywrQkFKMEMsR0FVeENiLEdBVndDLENBSTFDYSwrQkFKMEM7QUFBQSxNQUsxQ0MsMEJBTDBDLEdBVXhDZCxHQVZ3QyxDQUsxQ2MsMEJBTDBDO0FBQUEsTUFNMUNDLDZCQU4wQyxHQVV4Q2YsR0FWd0MsQ0FNMUNlLDZCQU4wQztBQUFBLE1BTzFDQywrQkFQMEMsR0FVeENoQixHQVZ3QyxDQU8xQ2dCLCtCQVAwQztBQUFBLE1BUTFDWCxlQVIwQyxHQVV4Q0wsR0FWd0MsQ0FRMUNLLGVBUjBDO0FBQUEsTUFTMUNELGdCQVQwQyxHQVV4Q0osR0FWd0MsQ0FTMUNJLGdCQVQwQztBQVk1QyxNQUFJTywwQkFBMEIsS0FBS0wsU0FBbkMsRUFBOENLLDBCQUEwQixHQUFHLENBQTdCO0FBQzlDLE1BQUlDLDZCQUE2QixLQUFLTixTQUF0QyxFQUFpRE0sNkJBQTZCLEdBQUcsQ0FBaEM7QUFDakQsTUFBSUMsK0JBQStCLEtBQUtQLFNBQXhDLEVBQW1ETywrQkFBK0IsR0FBRyxDQUFsQztBQUNuRCxNQUFJQywwQkFBMEIsS0FBS1IsU0FBbkMsRUFBOENRLDBCQUEwQixHQUFHLENBQTdCO0FBQzlDLE1BQUlDLDZCQUE2QixLQUFLVCxTQUF0QyxFQUFpRFMsNkJBQTZCLEdBQUcsQ0FBaEM7QUFDakQsTUFBSUMsK0JBQStCLEtBQUtWLFNBQXhDLEVBQW1EVSwrQkFBK0IsR0FBRyxDQUFsQztBQUVuRCxNQUFJQyxjQUFjLEdBQUdsQixpQkFBaUIsQ0FBQztBQUNyQ0UsSUFBQUEsZUFBZSxFQUFFYSwwQkFEb0I7QUFFckNaLElBQUFBLGtCQUFrQixFQUFFYSw2QkFGaUI7QUFHckNaLElBQUFBLG9CQUFvQixFQUFFYSwrQkFIZTtBQUlyQ1gsSUFBQUEsZUFBZSxFQUFmQSxlQUpxQztBQUtyQ0QsSUFBQUEsZ0JBQWdCLEVBQWhCQTtBQUxxQyxHQUFELENBQXRDO0FBT0EsTUFBSWMsZUFBZSxHQUFHLDRDQUF3QjtBQUM1Q2pCLElBQUFBLGVBQWUsRUFBRVUsMEJBRDJCO0FBRTVDVCxJQUFBQSxrQkFBa0IsRUFBRVUsNkJBRndCO0FBRzVDVCxJQUFBQSxvQkFBb0IsRUFBRVUsK0JBSHNCO0FBSTVDVCxJQUFBQSxnQkFBZ0IsRUFBaEJBLGdCQUo0QztBQUs1Q0MsSUFBQUEsZUFBZSxFQUFmQTtBQUw0QyxHQUF4QixDQUF0QjtBQU9BLE1BQUlFLFFBQVEsSUFBSVUsY0FBSiw0QkFBdUJDLGVBQXZCLEVBQVo7QUFFQVgsRUFBQUEsUUFBUSxHQUFHO0FBQUVBLElBQUFBLFFBQVEsRUFBRUEsUUFBWjtBQUFzQkMsSUFBQUEsU0FBUyxFQUFFSywrQkFBakM7QUFBa0VKLElBQUFBLElBQUksRUFBRTtBQUF4RSxHQUFYO0FBRUEsU0FBT0YsUUFBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwL21hcHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmFuZG9tX2J5X2Nob2ljZSwgc2xpY2VfMmRfYXJyYXksIHNodWZmbGUgfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5pbXBvcnQgeyBiYXNpY19mb3JfbG9vcF9jb21tYW5kcyB9IGZyb20gJy4vYmFzaWNDb21tYW5kcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JfbG9vcF9jb21tYW5kcyhvYmopIHtcbiAgbGV0IHsgbnVtYmVyX29mX3R1cm5zLCBudW1iZXJfb2ZfY29tbWFuZHMsIG51bWJlcl9vZl9pdGVyYXRpb25zLCBwcm9ic19vZl9hY3Rpb25zLCB0eXBlX29mX2FjdGlvbnMgfSA9IG9iajtcblxuICBpZiAobnVtYmVyX29mX3R1cm5zID09PSB1bmRlZmluZWQpIG51bWJlcl9vZl90dXJucyA9IDI7XG4gIGlmIChudW1iZXJfb2ZfY29tbWFuZHMgPT09IHVuZGVmaW5lZCkgbnVtYmVyX29mX2NvbW1hbmRzID0gNDtcbiAgaWYgKG51bWJlcl9vZl9pdGVyYXRpb25zID09PSB1bmRlZmluZWQpIG51bWJlcl9vZl9pdGVyYXRpb25zID0gNDtcblxuICB2YXIgY29tbWFuZHMgPSBiYXNpY19mb3JfbG9vcF9jb21tYW5kcyh7XG4gICAgbnVtYmVyX29mX3R1cm5zOiBudW1iZXJfb2ZfdHVybnMsXG4gICAgbnVtYmVyX29mX2NvbW1hbmRzOiBudW1iZXJfb2ZfY29tbWFuZHMsXG4gICAgbnVtYmVyX29mX2l0ZXJhdGlvbnM6IG51bWJlcl9vZl9pdGVyYXRpb25zLFxuICAgIHByb2JzX29mX2FjdGlvbnMsXG4gICAgdHlwZV9vZl9hY3Rpb25zXG4gIH0pO1xuICBjb21tYW5kcyA9IHsgY29tbWFuZHM6IGNvbW1hbmRzLCBpdGVyYXRpb246IG51bWJlcl9vZl9pdGVyYXRpb25zLCB0eXBlOiAnZm9yJyB9O1xuICByZXR1cm4gY29tbWFuZHM7XG59XG5cbi8vIGdlbmVyYXRlIGNvbW1hbmRzIGZvciBuZXN0ZWQgbG9vcCBjb21tYW5kc1xuXG5leHBvcnQgZnVuY3Rpb24gbmVzdGVkX2Zvcl9sb29wX2NvbW1hbmRzKG9iaikge1xuICBsZXQge1xuICAgIG51bWJlcl9vZl9vdXRlcl9sb29wX3R1cm5zLFxuICAgIG51bWJlcl9vZl9vdXRlcl9sb29wX2NvbW1hbmRzLFxuICAgIG51bWJlcl9vZl9vdXRlcl9sb29wX2l0ZXJhdGlvbnMsXG4gICAgbnVtYmVyX29mX2lubmVyX2xvb3BfdHVybnMsXG4gICAgbnVtYmVyX29mX2lubmVyX2xvb3BfY29tbWFuZHMsXG4gICAgbnVtYmVyX29mX2lubmVyX2xvb3BfaXRlcmF0aW9ucyxcbiAgICB0eXBlX29mX2FjdGlvbnMsXG4gICAgcHJvYnNfb2ZfYWN0aW9uc1xuICB9ID0gb2JqO1xuXG4gIGlmIChudW1iZXJfb2Zfb3V0ZXJfbG9vcF90dXJucyA9PT0gdW5kZWZpbmVkKSBudW1iZXJfb2Zfb3V0ZXJfbG9vcF90dXJucyA9IDE7XG4gIGlmIChudW1iZXJfb2Zfb3V0ZXJfbG9vcF9jb21tYW5kcyA9PT0gdW5kZWZpbmVkKSBudW1iZXJfb2Zfb3V0ZXJfbG9vcF9jb21tYW5kcyA9IDI7XG4gIGlmIChudW1iZXJfb2Zfb3V0ZXJfbG9vcF9pdGVyYXRpb25zID09PSB1bmRlZmluZWQpIG51bWJlcl9vZl9vdXRlcl9sb29wX2l0ZXJhdGlvbnMgPSAzO1xuICBpZiAobnVtYmVyX29mX2lubmVyX2xvb3BfdHVybnMgPT09IHVuZGVmaW5lZCkgbnVtYmVyX29mX2lubmVyX2xvb3BfdHVybnMgPSAxO1xuICBpZiAobnVtYmVyX29mX2lubmVyX2xvb3BfY29tbWFuZHMgPT09IHVuZGVmaW5lZCkgbnVtYmVyX29mX2lubmVyX2xvb3BfY29tbWFuZHMgPSAyO1xuICBpZiAobnVtYmVyX29mX2lubmVyX2xvb3BfaXRlcmF0aW9ucyA9PT0gdW5kZWZpbmVkKSBudW1iZXJfb2ZfaW5uZXJfbG9vcF9pdGVyYXRpb25zID0gMjtcblxuICBsZXQgaW5uZXJfY29tbWFuZHMgPSBmb3JfbG9vcF9jb21tYW5kcyh7XG4gICAgbnVtYmVyX29mX3R1cm5zOiBudW1iZXJfb2ZfaW5uZXJfbG9vcF90dXJucyxcbiAgICBudW1iZXJfb2ZfY29tbWFuZHM6IG51bWJlcl9vZl9pbm5lcl9sb29wX2NvbW1hbmRzLFxuICAgIG51bWJlcl9vZl9pdGVyYXRpb25zOiBudW1iZXJfb2ZfaW5uZXJfbG9vcF9pdGVyYXRpb25zLFxuICAgIHR5cGVfb2ZfYWN0aW9ucyxcbiAgICBwcm9ic19vZl9hY3Rpb25zXG4gIH0pO1xuICBsZXQgb3V0dGVyX2NvbW1hbmRzID0gYmFzaWNfZm9yX2xvb3BfY29tbWFuZHMoe1xuICAgIG51bWJlcl9vZl90dXJuczogbnVtYmVyX29mX291dGVyX2xvb3BfdHVybnMsXG4gICAgbnVtYmVyX29mX2NvbW1hbmRzOiBudW1iZXJfb2Zfb3V0ZXJfbG9vcF9jb21tYW5kcyxcbiAgICBudW1iZXJfb2ZfaXRlcmF0aW9uczogbnVtYmVyX29mX291dGVyX2xvb3BfaXRlcmF0aW9ucyxcbiAgICBwcm9ic19vZl9hY3Rpb25zLFxuICAgIHR5cGVfb2ZfYWN0aW9uc1xuICB9KTtcbiAgbGV0IGNvbW1hbmRzID0gW2lubmVyX2NvbW1hbmRzLCAuLi5vdXR0ZXJfY29tbWFuZHNdO1xuXG4gIGNvbW1hbmRzID0geyBjb21tYW5kczogY29tbWFuZHMsIGl0ZXJhdGlvbjogbnVtYmVyX29mX291dGVyX2xvb3BfaXRlcmF0aW9ucywgdHlwZTogJ2ZvcicgfTtcblxuICByZXR1cm4gY29tbWFuZHM7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "loopCommands.js"
      ],
      "names": [
        "for_loop_commands",
        "obj",
        "number_of_turns",
        "number_of_commands",
        "number_of_iterations",
        "probs_of_actions",
        "type_of_actions",
        "undefined",
        "commands",
        "iteration",
        "type",
        "nested_for_loop_commands",
        "number_of_outer_loop_turns",
        "number_of_outer_loop_commands",
        "number_of_outer_loop_iterations",
        "number_of_inner_loop_turns",
        "number_of_inner_loop_commands",
        "number_of_inner_loop_iterations",
        "inner_commands",
        "outter_commands"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "import { random_by_choice, slice_2d_array, shuffle } from '../utils/utils';\nimport { basic_for_loop_commands } from './basicCommands';\n\nexport function for_loop_commands(obj) {\n  let { number_of_turns, number_of_commands, number_of_iterations, probs_of_actions, type_of_actions } = obj;\n\n  if (number_of_turns === undefined) number_of_turns = 2;\n  if (number_of_commands === undefined) number_of_commands = 4;\n  if (number_of_iterations === undefined) number_of_iterations = 4;\n\n  var commands = basic_for_loop_commands({\n    number_of_turns: number_of_turns,\n    number_of_commands: number_of_commands,\n    number_of_iterations: number_of_iterations,\n    probs_of_actions,\n    type_of_actions\n  });\n  commands = { commands: commands, iteration: number_of_iterations, type: 'for' };\n  return commands;\n}\n\n// generate commands for nested loop commands\n\nexport function nested_for_loop_commands(obj) {\n  let {\n    number_of_outer_loop_turns,\n    number_of_outer_loop_commands,\n    number_of_outer_loop_iterations,\n    number_of_inner_loop_turns,\n    number_of_inner_loop_commands,\n    number_of_inner_loop_iterations,\n    type_of_actions,\n    probs_of_actions\n  } = obj;\n\n  if (number_of_outer_loop_turns === undefined) number_of_outer_loop_turns = 1;\n  if (number_of_outer_loop_commands === undefined) number_of_outer_loop_commands = 2;\n  if (number_of_outer_loop_iterations === undefined) number_of_outer_loop_iterations = 3;\n  if (number_of_inner_loop_turns === undefined) number_of_inner_loop_turns = 1;\n  if (number_of_inner_loop_commands === undefined) number_of_inner_loop_commands = 2;\n  if (number_of_inner_loop_iterations === undefined) number_of_inner_loop_iterations = 2;\n\n  let inner_commands = for_loop_commands({\n    number_of_turns: number_of_inner_loop_turns,\n    number_of_commands: number_of_inner_loop_commands,\n    number_of_iterations: number_of_inner_loop_iterations,\n    type_of_actions,\n    probs_of_actions\n  });\n  let outter_commands = basic_for_loop_commands({\n    number_of_turns: number_of_outer_loop_turns,\n    number_of_commands: number_of_outer_loop_commands,\n    number_of_iterations: number_of_outer_loop_iterations,\n    probs_of_actions,\n    type_of_actions\n  });\n  let commands = [inner_commands, ...outter_commands];\n\n  commands = { commands: commands, iteration: number_of_outer_loop_iterations, type: 'for' };\n\n  return commands;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581225259906
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/decisionMakingCommands.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/decisionMakingCommands.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/decisionMakingCommands.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/decisionMakingCommands.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
        "sourceFileName": "decisionMakingCommands.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.if_path_condition_commands = if_path_condition_commands;\nexports.if_else_path_condition_commands = if_else_path_condition_commands;\nexports.if_else_path_condition_commands_with_loop = if_else_path_condition_commands_with_loop;\nexports.if_tile_condition_commands = if_tile_condition_commands;\nexports.if_else_tile_condition_commands = if_else_tile_condition_commands;\nexports.if_else_tile_condition_commands_with_loop = if_else_tile_condition_commands_with_loop;\n\nvar _basicCommands = require(\"./basicCommands\");\n\nvar _utils = require(\"../utils/utils\");\n\nfunction if_path_condition_commands(obj) {\n  var commands = obj.commands,\n      condition = obj.condition,\n      commands_else = obj.commands_else,\n      condition_type = obj.condition_type;\n  if (commands === undefined) commands = [0];\n  if (condition === undefined) condition = 'ahead';\n  if (condition_type === undefined) condition_type = 'if';\n\n  if (condition_type === 'if') {\n    commands = {\n      commands: commands,\n      condition: condition,\n      type: condition_type\n    };\n  } else if (condition_type === 'if_else') {\n    commands = {\n      commands: commands,\n      commands_else: commands_else,\n      condition: condition,\n      type: condition_type\n    };\n  }\n\n  return commands;\n}\n\nfunction if_else_path_condition_commands(obj) {\n  var condition_type = obj.condition_type;\n  if (condition_type === undefined) condition_type = 'if'; // console.log(condition_type);\n\n  var commands = [];\n\n  if (condition_type === 'if') {\n    var pool_of_commands = [[[2], 'left'], [[1], 'right']];\n    (0, _utils.shuffle)(pool_of_commands);\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      condition_type: condition_type\n    });\n  } else if (condition_type === 'if_else') {\n    var pool_of_commands = [[[2], 'left'], [[1], 'right']];\n    (0, _utils.shuffle)(pool_of_commands);\n    commands = [if_path_condition_commands({\n      commands: pool_of_commands[1][0],\n      condition: pool_of_commands[1][1],\n      type: 'if'\n    })];\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      commands_else: commands,\n      condition_type: condition_type\n    });\n  } else if (condition_type === 'nested_if') {\n    var pool_of_commands = [[[2, 0], 'left'], [[1, 0], 'right'], [[0], 'ahead']];\n\n    while (true) {\n      (0, _utils.shuffle)(pool_of_commands);\n\n      if (pool_of_commands[2][0][0] > 0) {\n        break;\n      }\n    }\n\n    commands = [if_path_condition_commands({\n      commands: pool_of_commands[1][0],\n      condition: pool_of_commands[1][1],\n      commands_else: pool_of_commands[2][0],\n      condition_type: 'if_else'\n    })];\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      commands_else: commands,\n      condition_type: 'if_else'\n    });\n  } else {\n    console.log('error in condition type in if_else_path_condition_commands function');\n  }\n\n  return commands;\n}\n\nfunction if_else_path_condition_commands_with_loop(obj) {\n  var condition_type = obj.condition_type,\n      number_of_iterations = obj.number_of_iterations;\n  if (condition_type === undefined) condition_type = 'if';\n  if (number_of_iterations === undefined) number_of_iterations = 5;\n  var commands = if_else_path_condition_commands({\n    condition_type: condition_type\n  });\n\n  if (condition_type === 'if' || condition_type === 'if_else') {\n    commands = [commands, 0];\n  } else {\n    commands = [commands];\n  }\n\n  commands = {\n    commands: commands,\n    iteration: number_of_iterations,\n    type: 'for'\n  };\n  return commands;\n}\n\nfunction if_tile_condition_commands(obj) {\n  var commands = obj.commands,\n      commands_else = obj.commands_else,\n      condition = obj.condition,\n      condition_type = obj.condition_type;\n  if (commands === undefined) commands = [2, 0, 3, 2, 2, 0, 0, 2];\n  if (condition === undefined) condition = 'on red tile';\n  if (condition_type === undefined) condition_type = 'if';\n  if (condition_type === 'if') commands = {\n    commands: commands,\n    condition: condition,\n    type: condition_type\n  };else if (condition_type === 'if_else') commands = {\n    commands: commands,\n    commands_else: commands_else,\n    condition: condition,\n    type: condition_type\n  };\n  return commands;\n}\n\nfunction if_else_tile_condition_commands(obj) {\n  var condition_type = obj.condition_type,\n      commands = obj.commands,\n      commands_else = obj.commands_else,\n      condition = obj.condition,\n      number_of_commands = obj.number_of_commands,\n      is_reversed = obj.is_reversed,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  if (condition_type === undefined) condition_type = 'if';\n  if (condition === undefined) condition = 'on red tile';\n  if (number_of_commands === undefined) number_of_commands = 1;\n  if (is_reversed === undefined) is_reversed = true;\n\n  if (condition_type === 'if') {\n    commands = (0, _basicCommands.basic_commands_for_tile_condition)({\n      number_of_commands: number_of_commands,\n      commands: commands,\n      is_reversed: is_reversed,\n      type_of_actions: type_of_actions,\n      probs_of_actions: probs_of_actions\n    });\n    commands = if_tile_condition_commands({\n      commands: commands,\n      condition: condition,\n      condition_type: condition_type\n    });\n  } else if (condition_type === 'if_else') {\n    commands = (0, _basicCommands.basic_commands_for_tile_condition)({\n      number_of_commands: number_of_commands,\n      commands: commands,\n      is_reversed: is_reversed,\n      type_of_actions: type_of_actions,\n      probs_of_actions: probs_of_actions\n    });\n    commands = if_tile_condition_commands({\n      commands: commands,\n      commands_else: commands_else,\n      condition: condition,\n      condition_type: condition_type\n    });\n  }\n\n  return commands;\n}\n\nfunction if_else_tile_condition_commands_with_loop(obj) {\n  var condition_type = obj.condition_type,\n      number_of_commands = obj.number_of_commands,\n      number_of_iterations = obj.number_of_iterations,\n      is_reversed = obj.is_reversed,\n      type_of_actions = obj.type_of_actions,\n      probs_of_actions = obj.probs_of_actions;\n  if (condition_type === undefined) condition_type = 'if';\n  if (number_of_commands === undefined) number_of_commands = 2;\n  if (number_of_iterations === undefined) number_of_iterations = 5;\n  if (is_reversed === undefined) is_reversed = false;\n  var conditions = ['on grey tile', 'on red tile'];\n  (0, _utils.shuffle)(conditions);\n  var commands = {};\n\n  if (condition_type === 'if') {\n    commands = if_else_tile_condition_commands({\n      condition_type: condition_type,\n      condition: conditions[0],\n      number_of_commands: number_of_commands,\n      is_reversed: is_reversed,\n      type_of_actions: type_of_actions,\n      probs_of_actions: probs_of_actions\n    });\n    commands = [commands, 0];\n  } else if (condition_type === 'if_else') {\n    var commands_else = [if_else_tile_condition_commands({\n      condition_type: 'if',\n      condition: conditions[1],\n      number_of_commands: number_of_commands,\n      is_reversed: is_reversed,\n      type_of_actions: type_of_actions,\n      probs_of_actions: probs_of_actions\n    })];\n    commands = if_else_tile_condition_commands({\n      condition_type: condition_type,\n      commands_else: commands_else,\n      condition: conditions[0],\n      number_of_commands: number_of_commands,\n      is_reversed: is_reversed,\n      type_of_actions: type_of_actions,\n      probs_of_actions: probs_of_actions\n    });\n    commands = [commands, 0];\n  } else if (condition_type === 'nested_if') {/// not done yet\n  }\n\n  commands = {\n    commands: commands,\n    iteration: number_of_iterations,\n    type: 'for'\n  };\n  return commands;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "decisionMakingCommands.js"
      ],
      "names": [
        "if_path_condition_commands",
        "obj",
        "commands",
        "condition",
        "commands_else",
        "condition_type",
        "undefined",
        "type",
        "if_else_path_condition_commands",
        "pool_of_commands",
        "console",
        "log",
        "if_else_path_condition_commands_with_loop",
        "number_of_iterations",
        "iteration",
        "if_tile_condition_commands",
        "if_else_tile_condition_commands",
        "number_of_commands",
        "is_reversed",
        "type_of_actions",
        "probs_of_actions",
        "if_else_tile_condition_commands_with_loop",
        "conditions"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/maps/",
      "sourcesContent": [
        "import { basic_commands_for_tile_condition } from './basicCommands';\nimport { shuffle } from '../utils/utils';\n\nexport function if_path_condition_commands(obj) {\n  let { commands, condition, commands_else, condition_type } = obj;\n\n  if (commands === undefined) commands = [0];\n  if (condition === undefined) condition = 'ahead';\n  if (condition_type === undefined) condition_type = 'if';\n\n  if (condition_type === 'if') {\n    commands = { commands: commands, condition: condition, type: condition_type };\n  } else if (condition_type === 'if_else') {\n    commands = { commands: commands, commands_else: commands_else, condition: condition, type: condition_type };\n  }\n  return commands;\n}\n\nexport function if_else_path_condition_commands(obj) {\n  let { condition_type } = obj;\n\n  if (condition_type === undefined) condition_type = 'if';\n\n  // console.log(condition_type);\n\n  let commands = [];\n\n  if (condition_type === 'if') {\n    var pool_of_commands = [\n      [[2], 'left'],\n      [[1], 'right']\n    ];\n    shuffle(pool_of_commands);\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      condition_type\n    });\n  } else if (condition_type === 'if_else') {\n    var pool_of_commands = [\n      [[2], 'left'],\n      [[1], 'right']\n    ];\n    shuffle(pool_of_commands);\n    commands = [\n      if_path_condition_commands({ commands: pool_of_commands[1][0], condition: pool_of_commands[1][1], type: 'if' })\n    ];\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      commands_else: commands,\n      condition_type\n    });\n  } else if (condition_type === 'nested_if') {\n    var pool_of_commands = [\n      [[2, 0], 'left'],\n      [[1, 0], 'right'],\n      [[0], 'ahead']\n    ];\n    while (true) {\n      shuffle(pool_of_commands);\n      if (pool_of_commands[2][0][0] > 0) {\n        break;\n      }\n    }\n    commands = [\n      if_path_condition_commands({\n        commands: pool_of_commands[1][0],\n        condition: pool_of_commands[1][1],\n        commands_else: pool_of_commands[2][0],\n        condition_type: 'if_else'\n      })\n    ];\n    commands = if_path_condition_commands({\n      commands: pool_of_commands[0][0],\n      condition: pool_of_commands[0][1],\n      commands_else: commands,\n      condition_type: 'if_else'\n    });\n  } else {\n    console.log('error in condition type in if_else_path_condition_commands function');\n  }\n\n  return commands;\n}\n\nexport function if_else_path_condition_commands_with_loop(obj) {\n  let { condition_type, number_of_iterations } = obj;\n\n  if (condition_type === undefined) condition_type = 'if';\n  if (number_of_iterations === undefined) number_of_iterations = 5;\n\n  let commands = if_else_path_condition_commands({ condition_type: condition_type });\n  if (condition_type === 'if' || condition_type === 'if_else') {\n    commands = [commands, 0];\n  } else {\n    commands = [commands];\n  }\n  commands = { commands: commands, iteration: number_of_iterations, type: 'for' };\n  return commands;\n}\n\nexport function if_tile_condition_commands(obj) {\n  let { commands, commands_else, condition, condition_type } = obj;\n\n  if (commands === undefined) commands = [2, 0, 3, 2, 2, 0, 0, 2];\n  if (condition === undefined) condition = 'on red tile';\n  if (condition_type === undefined) condition_type = 'if';\n\n  if (condition_type === 'if') commands = { commands: commands, condition: condition, type: condition_type };\n  else if (condition_type === 'if_else')\n    commands = { commands: commands, commands_else: commands_else, condition: condition, type: condition_type };\n  return commands;\n}\n\nexport function if_else_tile_condition_commands(obj) {\n  let {\n    condition_type,\n    commands,\n    commands_else,\n    condition,\n    number_of_commands,\n    is_reversed,\n    type_of_actions,\n    probs_of_actions\n  } = obj;\n\n  if (condition_type === undefined) condition_type = 'if';\n  if (condition === undefined) condition = 'on red tile';\n  if (number_of_commands === undefined) number_of_commands = 1;\n  if (is_reversed === undefined) is_reversed = true;\n\n  if (condition_type === 'if') {\n    commands = basic_commands_for_tile_condition({\n      number_of_commands: number_of_commands,\n      commands: commands,\n      is_reversed: is_reversed,\n      type_of_actions,\n      probs_of_actions\n    });\n    commands = if_tile_condition_commands({ commands: commands, condition: condition, condition_type: condition_type });\n  } else if (condition_type === 'if_else') {\n    commands = basic_commands_for_tile_condition({\n      number_of_commands: number_of_commands,\n      commands: commands,\n      is_reversed: is_reversed,\n      type_of_actions,\n      probs_of_actions\n    });\n    commands = if_tile_condition_commands({\n      commands: commands,\n      commands_else: commands_else,\n      condition: condition,\n      condition_type: condition_type\n    });\n  }\n  return commands;\n}\n\nexport function if_else_tile_condition_commands_with_loop(obj) {\n  let {\n    condition_type,\n    number_of_commands,\n    number_of_iterations,\n    is_reversed,\n    type_of_actions,\n    probs_of_actions\n  } = obj;\n\n  if (condition_type === undefined) condition_type = 'if';\n  if (number_of_commands === undefined) number_of_commands = 2;\n  if (number_of_iterations === undefined) number_of_iterations = 5;\n  if (is_reversed === undefined) is_reversed = false;\n\n  let conditions = ['on grey tile', 'on red tile'];\n  shuffle(conditions);\n  let commands = {};\n  if (condition_type === 'if') {\n    commands = if_else_tile_condition_commands({\n      condition_type: condition_type,\n      condition: conditions[0],\n      number_of_commands: number_of_commands,\n      is_reversed,\n      type_of_actions,\n      probs_of_actions\n    });\n    commands = [commands, 0];\n  } else if (condition_type === 'if_else') {\n    const commands_else = [\n      if_else_tile_condition_commands({\n        condition_type: 'if',\n        condition: conditions[1],\n        number_of_commands: number_of_commands,\n        is_reversed,\n        type_of_actions,\n        probs_of_actions\n      })\n    ];\n    commands = if_else_tile_condition_commands({\n      condition_type,\n      commands_else,\n      condition: conditions[0],\n      number_of_commands: number_of_commands,\n      is_reversed,\n      type_of_actions,\n      probs_of_actions\n    });\n    commands = [commands, 0];\n  } else if (condition_type === 'nested_if') {\n    /// not done yet\n  }\n  commands = { commands: commands, iteration: number_of_iterations, type: 'for' };\n  return commands;\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585998192928
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/constant.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/constant.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/constant.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/constant.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/",
        "sourceFileName": "constant.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapH = exports.mapW = exports.mapH_real = exports.mapW_real = void 0;\nvar mapW_real = 50;\nexports.mapW_real = mapW_real;\nvar mapH_real = 50;\nexports.mapH_real = mapH_real;\nvar mapW = 12;\nexports.mapW = mapW;\nvar mapH = 12;\nexports.mapH = mapH;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50LmpzIl0sIm5hbWVzIjpbIm1hcFdfcmVhbCIsIm1hcEhfcmVhbCIsIm1hcFciLCJtYXBIIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHLEVBQWxCOztBQUNBLElBQU1DLElBQUksR0FBRyxFQUFiOztBQUNBLElBQU1DLElBQUksR0FBRyxFQUFiIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwL2NvbmZpZy8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWFwV19yZWFsID0gNTA7XG5leHBvcnQgY29uc3QgbWFwSF9yZWFsID0gNTA7XG5leHBvcnQgY29uc3QgbWFwVyA9IDEyO1xuZXhwb3J0IGNvbnN0IG1hcEggPSAxMjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "constant.js"
      ],
      "names": [
        "mapW_real",
        "mapH_real",
        "mapW",
        "mapH"
      ],
      "mappings": ";;;;;;AAAO,IAAMA,SAAS,GAAG,EAAlB;;AACA,IAAMC,SAAS,GAAG,EAAlB;;AACA,IAAMC,IAAI,GAAG,EAAb;;AACA,IAAMC,IAAI,GAAG,EAAb",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/config/",
      "sourcesContent": [
        "export const mapW_real = 50;\nexport const mapH_real = 50;\nexport const mapW = 12;\nexport const mapH = 12;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581225483810
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/priority_queue.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/priority_queue.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/priority_queue.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/priority_queue.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
        "sourceFileName": "priority_queue.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar QElement = function QElement(element, priority) {\n  _classCallCheck(this, QElement);\n\n  this.element = element;\n  this.priority = priority;\n}; // PriorityQueue class\n\n\nvar PriorityQueue = /*#__PURE__*/function () {\n  // An array is used to implement priority\n  function PriorityQueue() {\n    _classCallCheck(this, PriorityQueue);\n\n    this.items = [];\n  } // functions to be implemented\n  // enqueue(item, priority)\n\n\n  _createClass(PriorityQueue, [{\n    key: \"push\",\n    value: function push(element, priority) {\n      // creating object from queue element\n      var qElement = new QElement(element, priority);\n      var contain = false; // iterating through the entire\n      // item array to add element at the\n      // correct location of the Queue\n\n      for (var i = 0; i < this.items.length; i++) {\n        if (this.items[i].priority > qElement.priority) {\n          // Once the correct location is found it is\n          // enqueued\n          this.items.splice(i, 0, qElement);\n          contain = true;\n          break;\n        }\n      } // if the element have the highest priority\n      // it is added at the end of the queue\n\n\n      if (!contain) {\n        this.items.push(qElement);\n      }\n    } // dequeue()\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      // return the dequeued element\n      // and remove it.\n      // if the queue is empty\n      // returns Underflow\n      if (this.isEmpty()) return 'Underflow';\n      return this.items.shift();\n    } // front()\n\n  }, {\n    key: \"top\",\n    value: function top() {\n      // returns the highest priority element\n      // in the Priority queue without removing it.\n      if (this.isEmpty()) return 'No elements in Queue';\n      return this.items[0];\n    }\n  }, {\n    key: \"rear\",\n    value: function rear() {\n      // returns the lowest priorty\n      // element of the queue\n      if (this.isEmpty()) return 'No elements in Queue';\n      return this.items[this.items.length - 1];\n    } // isEmpty()\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      // return true if the queue is empty.\n      return this.items.length == 0;\n    } // printPQueue()\n\n  }, {\n    key: \"printPQueue\",\n    value: function printPQueue() {\n      var str = '';\n\n      for (var i = 0; i < this.items.length; i++) {\n        str += this.items[i].element + ' ';\n      }\n\n      return str;\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nexports.PriorityQueue = PriorityQueue;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByaW9yaXR5X3F1ZXVlLmpzIl0sIm5hbWVzIjpbIlFFbGVtZW50IiwiZWxlbWVudCIsInByaW9yaXR5IiwiUHJpb3JpdHlRdWV1ZSIsIml0ZW1zIiwicUVsZW1lbnQiLCJjb250YWluIiwiaSIsImxlbmd0aCIsInNwbGljZSIsInB1c2giLCJpc0VtcHR5Iiwic2hpZnQiLCJzdHIiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztJQUFNQSxRLEdBQ0osa0JBQVlDLE9BQVosRUFBcUJDLFFBQXJCLEVBQStCO0FBQUE7O0FBQzdCLE9BQUtELE9BQUwsR0FBZUEsT0FBZjtBQUNBLE9BQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0QsQyxFQUdIOzs7SUFDTUMsYTtBQUNKO0FBQ0EsMkJBQWM7QUFBQTs7QUFDWixTQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUNELEcsQ0FFRDtBQUNBOzs7Ozt5QkFDS0gsTyxFQUFTQyxRLEVBQVU7QUFDdEI7QUFDQSxVQUFJRyxRQUFRLEdBQUcsSUFBSUwsUUFBSixDQUFhQyxPQUFiLEVBQXNCQyxRQUF0QixDQUFmO0FBQ0EsVUFBSUksT0FBTyxHQUFHLEtBQWQsQ0FIc0IsQ0FLdEI7QUFDQTtBQUNBOztBQUNBLFdBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxLQUFLSCxLQUFMLENBQVdJLE1BQS9CLEVBQXVDRCxDQUFDLEVBQXhDLEVBQTRDO0FBQzFDLFlBQUksS0FBS0gsS0FBTCxDQUFXRyxDQUFYLEVBQWNMLFFBQWQsR0FBeUJHLFFBQVEsQ0FBQ0gsUUFBdEMsRUFBZ0Q7QUFDOUM7QUFDQTtBQUNBLGVBQUtFLEtBQUwsQ0FBV0ssTUFBWCxDQUFrQkYsQ0FBbEIsRUFBcUIsQ0FBckIsRUFBd0JGLFFBQXhCO0FBQ0FDLFVBQUFBLE9BQU8sR0FBRyxJQUFWO0FBQ0E7QUFDRDtBQUNGLE9BaEJxQixDQWtCdEI7QUFDQTs7O0FBQ0EsVUFBSSxDQUFDQSxPQUFMLEVBQWM7QUFDWixhQUFLRixLQUFMLENBQVdNLElBQVgsQ0FBZ0JMLFFBQWhCO0FBQ0Q7QUFDRixLLENBQ0Q7Ozs7MEJBQ007QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQUksS0FBS00sT0FBTCxFQUFKLEVBQW9CLE9BQU8sV0FBUDtBQUNwQixhQUFPLEtBQUtQLEtBQUwsQ0FBV1EsS0FBWCxFQUFQO0FBQ0QsSyxDQUNEOzs7OzBCQUNNO0FBQ0o7QUFDQTtBQUNBLFVBQUksS0FBS0QsT0FBTCxFQUFKLEVBQW9CLE9BQU8sc0JBQVA7QUFDcEIsYUFBTyxLQUFLUCxLQUFMLENBQVcsQ0FBWCxDQUFQO0FBQ0Q7OzsyQkFDTTtBQUNMO0FBQ0E7QUFDQSxVQUFJLEtBQUtPLE9BQUwsRUFBSixFQUFvQixPQUFPLHNCQUFQO0FBQ3BCLGFBQU8sS0FBS1AsS0FBTCxDQUFXLEtBQUtBLEtBQUwsQ0FBV0ksTUFBWCxHQUFvQixDQUEvQixDQUFQO0FBQ0QsSyxDQUNEOzs7OzhCQUNVO0FBQ1I7QUFDQSxhQUFPLEtBQUtKLEtBQUwsQ0FBV0ksTUFBWCxJQUFxQixDQUE1QjtBQUNELEssQ0FDRDs7OztrQ0FDYztBQUNaLFVBQUlLLEdBQUcsR0FBRyxFQUFWOztBQUNBLFdBQUssSUFBSU4sQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBRyxLQUFLSCxLQUFMLENBQVdJLE1BQS9CLEVBQXVDRCxDQUFDLEVBQXhDO0FBQTRDTSxRQUFBQSxHQUFHLElBQUksS0FBS1QsS0FBTCxDQUFXRyxDQUFYLEVBQWNOLE9BQWQsR0FBd0IsR0FBL0I7QUFBNUM7O0FBQ0EsYUFBT1ksR0FBUDtBQUNEOzs7Ozs7QUFHSEMsT0FBTyxDQUFDWCxhQUFSLEdBQXdCQSxhQUF4QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvanVtcHdtay9Eb2N1bWVudHMvWWVhcjRfMi9zZW5pb3JfcHJvamVjdC9sb2dpY0dhbWVXaXRoQmxvY2tseS1iYWNrZW5kL2FwcC91dGlscy8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBRRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKGVsZW1lbnQsIHByaW9yaXR5KSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gIH1cbn1cblxuLy8gUHJpb3JpdHlRdWV1ZSBjbGFzc1xuY2xhc3MgUHJpb3JpdHlRdWV1ZSB7XG4gIC8vIEFuIGFycmF5IGlzIHVzZWQgdG8gaW1wbGVtZW50IHByaW9yaXR5XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaXRlbXMgPSBbXTtcbiAgfVxuXG4gIC8vIGZ1bmN0aW9ucyB0byBiZSBpbXBsZW1lbnRlZFxuICAvLyBlbnF1ZXVlKGl0ZW0sIHByaW9yaXR5KVxuICBwdXNoKGVsZW1lbnQsIHByaW9yaXR5KSB7XG4gICAgLy8gY3JlYXRpbmcgb2JqZWN0IGZyb20gcXVldWUgZWxlbWVudFxuICAgIHZhciBxRWxlbWVudCA9IG5ldyBRRWxlbWVudChlbGVtZW50LCBwcmlvcml0eSk7XG4gICAgdmFyIGNvbnRhaW4gPSBmYWxzZTtcblxuICAgIC8vIGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbnRpcmVcbiAgICAvLyBpdGVtIGFycmF5IHRvIGFkZCBlbGVtZW50IGF0IHRoZVxuICAgIC8vIGNvcnJlY3QgbG9jYXRpb24gb2YgdGhlIFF1ZXVlXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodGhpcy5pdGVtc1tpXS5wcmlvcml0eSA+IHFFbGVtZW50LnByaW9yaXR5KSB7XG4gICAgICAgIC8vIE9uY2UgdGhlIGNvcnJlY3QgbG9jYXRpb24gaXMgZm91bmQgaXQgaXNcbiAgICAgICAgLy8gZW5xdWV1ZWRcbiAgICAgICAgdGhpcy5pdGVtcy5zcGxpY2UoaSwgMCwgcUVsZW1lbnQpO1xuICAgICAgICBjb250YWluID0gdHJ1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gaWYgdGhlIGVsZW1lbnQgaGF2ZSB0aGUgaGlnaGVzdCBwcmlvcml0eVxuICAgIC8vIGl0IGlzIGFkZGVkIGF0IHRoZSBlbmQgb2YgdGhlIHF1ZXVlXG4gICAgaWYgKCFjb250YWluKSB7XG4gICAgICB0aGlzLml0ZW1zLnB1c2gocUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICAvLyBkZXF1ZXVlKClcbiAgcG9wKCkge1xuICAgIC8vIHJldHVybiB0aGUgZGVxdWV1ZWQgZWxlbWVudFxuICAgIC8vIGFuZCByZW1vdmUgaXQuXG4gICAgLy8gaWYgdGhlIHF1ZXVlIGlzIGVtcHR5XG4gICAgLy8gcmV0dXJucyBVbmRlcmZsb3dcbiAgICBpZiAodGhpcy5pc0VtcHR5KCkpIHJldHVybiAnVW5kZXJmbG93JztcbiAgICByZXR1cm4gdGhpcy5pdGVtcy5zaGlmdCgpO1xuICB9XG4gIC8vIGZyb250KClcbiAgdG9wKCkge1xuICAgIC8vIHJldHVybnMgdGhlIGhpZ2hlc3QgcHJpb3JpdHkgZWxlbWVudFxuICAgIC8vIGluIHRoZSBQcmlvcml0eSBxdWV1ZSB3aXRob3V0IHJlbW92aW5nIGl0LlxuICAgIGlmICh0aGlzLmlzRW1wdHkoKSkgcmV0dXJuICdObyBlbGVtZW50cyBpbiBRdWV1ZSc7XG4gICAgcmV0dXJuIHRoaXMuaXRlbXNbMF07XG4gIH1cbiAgcmVhcigpIHtcbiAgICAvLyByZXR1cm5zIHRoZSBsb3dlc3QgcHJpb3J0eVxuICAgIC8vIGVsZW1lbnQgb2YgdGhlIHF1ZXVlXG4gICAgaWYgKHRoaXMuaXNFbXB0eSgpKSByZXR1cm4gJ05vIGVsZW1lbnRzIGluIFF1ZXVlJztcbiAgICByZXR1cm4gdGhpcy5pdGVtc1t0aGlzLml0ZW1zLmxlbmd0aCAtIDFdO1xuICB9XG4gIC8vIGlzRW1wdHkoKVxuICBpc0VtcHR5KCkge1xuICAgIC8vIHJldHVybiB0cnVlIGlmIHRoZSBxdWV1ZSBpcyBlbXB0eS5cbiAgICByZXR1cm4gdGhpcy5pdGVtcy5sZW5ndGggPT0gMDtcbiAgfVxuICAvLyBwcmludFBRdWV1ZSgpXG4gIHByaW50UFF1ZXVlKCkge1xuICAgIHZhciBzdHIgPSAnJztcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaXRlbXMubGVuZ3RoOyBpKyspIHN0ciArPSB0aGlzLml0ZW1zW2ldLmVsZW1lbnQgKyAnICc7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxufVxuXG5leHBvcnRzLlByaW9yaXR5UXVldWUgPSBQcmlvcml0eVF1ZXVlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "priority_queue.js"
      ],
      "names": [
        "QElement",
        "element",
        "priority",
        "PriorityQueue",
        "items",
        "qElement",
        "contain",
        "i",
        "length",
        "splice",
        "push",
        "isEmpty",
        "shift",
        "str",
        "exports"
      ],
      "mappings": ";;;;;;;;IAAMA,Q,GACJ,kBAAYC,OAAZ,EAAqBC,QAArB,EAA+B;AAAA;;AAC7B,OAAKD,OAAL,GAAeA,OAAf;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACD,C,EAGH;;;IACMC,a;AACJ;AACA,2BAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,EAAb;AACD,G,CAED;AACA;;;;;yBACKH,O,EAASC,Q,EAAU;AACtB;AACA,UAAIG,QAAQ,GAAG,IAAIL,QAAJ,CAAaC,OAAb,EAAsBC,QAAtB,CAAf;AACA,UAAII,OAAO,GAAG,KAAd,CAHsB,CAKtB;AACA;AACA;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWI,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,YAAI,KAAKH,KAAL,CAAWG,CAAX,EAAcL,QAAd,GAAyBG,QAAQ,CAACH,QAAtC,EAAgD;AAC9C;AACA;AACA,eAAKE,KAAL,CAAWK,MAAX,CAAkBF,CAAlB,EAAqB,CAArB,EAAwBF,QAAxB;AACAC,UAAAA,OAAO,GAAG,IAAV;AACA;AACD;AACF,OAhBqB,CAkBtB;AACA;;;AACA,UAAI,CAACA,OAAL,EAAc;AACZ,aAAKF,KAAL,CAAWM,IAAX,CAAgBL,QAAhB;AACD;AACF,K,CACD;;;;0BACM;AACJ;AACA;AACA;AACA;AACA,UAAI,KAAKM,OAAL,EAAJ,EAAoB,OAAO,WAAP;AACpB,aAAO,KAAKP,KAAL,CAAWQ,KAAX,EAAP;AACD,K,CACD;;;;0BACM;AACJ;AACA;AACA,UAAI,KAAKD,OAAL,EAAJ,EAAoB,OAAO,sBAAP;AACpB,aAAO,KAAKP,KAAL,CAAW,CAAX,CAAP;AACD;;;2BACM;AACL;AACA;AACA,UAAI,KAAKO,OAAL,EAAJ,EAAoB,OAAO,sBAAP;AACpB,aAAO,KAAKP,KAAL,CAAW,KAAKA,KAAL,CAAWI,MAAX,GAAoB,CAA/B,CAAP;AACD,K,CACD;;;;8BACU;AACR;AACA,aAAO,KAAKJ,KAAL,CAAWI,MAAX,IAAqB,CAA5B;AACD,K,CACD;;;;kCACc;AACZ,UAAIK,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKH,KAAL,CAAWI,MAA/B,EAAuCD,CAAC,EAAxC;AAA4CM,QAAAA,GAAG,IAAI,KAAKT,KAAL,CAAWG,CAAX,EAAcN,OAAd,GAAwB,GAA/B;AAA5C;;AACA,aAAOY,GAAP;AACD;;;;;;AAGHC,OAAO,CAACX,aAAR,GAAwBA,aAAxB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "sourcesContent": [
        "class QElement {\n  constructor(element, priority) {\n    this.element = element;\n    this.priority = priority;\n  }\n}\n\n// PriorityQueue class\nclass PriorityQueue {\n  // An array is used to implement priority\n  constructor() {\n    this.items = [];\n  }\n\n  // functions to be implemented\n  // enqueue(item, priority)\n  push(element, priority) {\n    // creating object from queue element\n    var qElement = new QElement(element, priority);\n    var contain = false;\n\n    // iterating through the entire\n    // item array to add element at the\n    // correct location of the Queue\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].priority > qElement.priority) {\n        // Once the correct location is found it is\n        // enqueued\n        this.items.splice(i, 0, qElement);\n        contain = true;\n        break;\n      }\n    }\n\n    // if the element have the highest priority\n    // it is added at the end of the queue\n    if (!contain) {\n      this.items.push(qElement);\n    }\n  }\n  // dequeue()\n  pop() {\n    // return the dequeued element\n    // and remove it.\n    // if the queue is empty\n    // returns Underflow\n    if (this.isEmpty()) return 'Underflow';\n    return this.items.shift();\n  }\n  // front()\n  top() {\n    // returns the highest priority element\n    // in the Priority queue without removing it.\n    if (this.isEmpty()) return 'No elements in Queue';\n    return this.items[0];\n  }\n  rear() {\n    // returns the lowest priorty\n    // element of the queue\n    if (this.isEmpty()) return 'No elements in Queue';\n    return this.items[this.items.length - 1];\n  }\n  // isEmpty()\n  isEmpty() {\n    // return true if the queue is empty.\n    return this.items.length == 0;\n  }\n  // printPQueue()\n  printPQueue() {\n    var str = '';\n    for (var i = 0; i < this.items.length; i++) str += this.items[i].element + ' ';\n    return str;\n  }\n}\n\nexports.PriorityQueue = PriorityQueue;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581101216159
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/union_find.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/union_find.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/union_find.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/union_find.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
        "sourceFileName": "union_find.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// PriorityQueue class \nvar UnionFind = /*#__PURE__*/function () {\n  // An array is used to implement priority \n  function UnionFind(n) {\n    _classCallCheck(this, UnionFind);\n\n    this.roots = new Array(n + 1).fill(0);\n    this.ranks = new Array(n + 1).fill(0);\n\n    for (var i = 0; i <= n; i++) {\n      this.roots[i] = i;\n    }\n  } // functions to be implemented \n  // find head\n\n\n  _createClass(UnionFind, [{\n    key: \"find\",\n    value: function find(element) {\n      var tmp = element;\n      var roots = this.roots;\n\n      while (roots[tmp] !== tmp) {\n        tmp = roots[tmp];\n      }\n\n      while (roots[element] !== tmp) {\n        var tmp2 = roots[element];\n        roots[element] = tmp;\n        element = tmp2;\n      }\n\n      return tmp;\n    } // union() \n\n  }, {\n    key: \"union\",\n    value: function union(x, y) {\n      var xr = this.find(x),\n          yr = this.find(y);\n\n      if (xr === yr) {\n        return;\n      }\n\n      var ranks = this.ranks,\n          roots = this.roots,\n          xd = ranks[xr],\n          yd = ranks[yr];\n\n      if (xd < yd) {\n        roots[xr] = yr;\n      } else if (yd < xd) {\n        roots[yr] = xr;\n      } else {\n        roots[yr] = xr;\n        ++ranks[xr];\n      }\n    }\n  }]);\n\n  return UnionFind;\n}();\n\nexports.UnionFind = UnionFind;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaW9uX2ZpbmQuanMiXSwibmFtZXMiOlsiVW5pb25GaW5kIiwibiIsInJvb3RzIiwiQXJyYXkiLCJmaWxsIiwicmFua3MiLCJpIiwiZWxlbWVudCIsInRtcCIsInRtcDIiLCJ4IiwieSIsInhyIiwiZmluZCIsInlyIiwieGQiLCJ5ZCIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7SUFDTUEsUztBQUVGO0FBQ0EscUJBQVlDLENBQVosRUFDQTtBQUFBOztBQUNJLFNBQUtDLEtBQUwsR0FBYSxJQUFJQyxLQUFKLENBQVVGLENBQUMsR0FBRyxDQUFkLEVBQWlCRyxJQUFqQixDQUFzQixDQUF0QixDQUFiO0FBQ0EsU0FBS0MsS0FBTCxHQUFhLElBQUlGLEtBQUosQ0FBVUYsQ0FBQyxHQUFHLENBQWQsRUFBaUJHLElBQWpCLENBQXNCLENBQXRCLENBQWI7O0FBQ0EsU0FBSSxJQUFJRSxDQUFDLEdBQUcsQ0FBWixFQUFlQSxDQUFDLElBQUlMLENBQXBCLEVBQXVCSyxDQUFDLEVBQXhCLEVBQTJCO0FBQ3ZCLFdBQUtKLEtBQUwsQ0FBV0ksQ0FBWCxJQUFnQkEsQ0FBaEI7QUFDSDtBQUNKLEcsQ0FFRDtBQUNBOzs7Ozt5QkFDS0MsTyxFQUNMO0FBQ0ksVUFBSUMsR0FBRyxHQUFHRCxPQUFWO0FBQ0EsVUFBSUwsS0FBSyxHQUFHLEtBQUtBLEtBQWpCOztBQUNBLGFBQU1BLEtBQUssQ0FBQ00sR0FBRCxDQUFMLEtBQWVBLEdBQXJCLEVBQTBCO0FBQ3RCQSxRQUFBQSxHQUFHLEdBQUdOLEtBQUssQ0FBQ00sR0FBRCxDQUFYO0FBQ0g7O0FBQ0QsYUFBTU4sS0FBSyxDQUFDSyxPQUFELENBQUwsS0FBbUJDLEdBQXpCLEVBQThCO0FBQzFCLFlBQUlDLElBQUksR0FBR1AsS0FBSyxDQUFDSyxPQUFELENBQWhCO0FBQ0FMLFFBQUFBLEtBQUssQ0FBQ0ssT0FBRCxDQUFMLEdBQWlCQyxHQUFqQjtBQUNBRCxRQUFBQSxPQUFPLEdBQUdFLElBQVY7QUFDSDs7QUFDRCxhQUFPRCxHQUFQO0FBQ0gsSyxDQUNEOzs7OzBCQUNNRSxDLEVBQUdDLEMsRUFDVDtBQUNJLFVBQUlDLEVBQUUsR0FBRyxLQUFLQyxJQUFMLENBQVVILENBQVYsQ0FBVDtBQUFBLFVBQXVCSSxFQUFFLEdBQUcsS0FBS0QsSUFBTCxDQUFVRixDQUFWLENBQTVCOztBQUNBLFVBQUdDLEVBQUUsS0FBS0UsRUFBVixFQUFjO0FBQ1Y7QUFDSDs7QUFDRCxVQUFJVCxLQUFLLEdBQUcsS0FBS0EsS0FBakI7QUFBQSxVQUF3QkgsS0FBSyxHQUFHLEtBQUtBLEtBQXJDO0FBQUEsVUFBNENhLEVBQUUsR0FBR1YsS0FBSyxDQUFDTyxFQUFELENBQXREO0FBQUEsVUFBNERJLEVBQUUsR0FBR1gsS0FBSyxDQUFDUyxFQUFELENBQXRFOztBQUNBLFVBQUdDLEVBQUUsR0FBR0MsRUFBUixFQUFZO0FBQ1JkLFFBQUFBLEtBQUssQ0FBQ1UsRUFBRCxDQUFMLEdBQVlFLEVBQVo7QUFDSCxPQUZELE1BR0ssSUFBR0UsRUFBRSxHQUFHRCxFQUFSLEVBQVk7QUFDYmIsUUFBQUEsS0FBSyxDQUFDWSxFQUFELENBQUwsR0FBWUYsRUFBWjtBQUNILE9BRkksTUFHQTtBQUNEVixRQUFBQSxLQUFLLENBQUNZLEVBQUQsQ0FBTCxHQUFZRixFQUFaO0FBQ0EsVUFBRVAsS0FBSyxDQUFDTyxFQUFELENBQVA7QUFDSDtBQUNKOzs7Ozs7QUFHTEssT0FBTyxDQUFDakIsU0FBUixHQUFvQkEsU0FBcEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2p1bXB3bWsvRG9jdW1lbnRzL1llYXI0XzIvc2VuaW9yX3Byb2plY3QvbG9naWNHYW1lV2l0aEJsb2NrbHktYmFja2VuZC9hcHAvdXRpbHMvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUHJpb3JpdHlRdWV1ZSBjbGFzcyBcbmNsYXNzIFVuaW9uRmluZCB7IFxuICBcbiAgICAvLyBBbiBhcnJheSBpcyB1c2VkIHRvIGltcGxlbWVudCBwcmlvcml0eSBcbiAgICBjb25zdHJ1Y3RvcihuKSBcbiAgICB7IFxuICAgICAgICB0aGlzLnJvb3RzID0gbmV3IEFycmF5KG4gKyAxKS5maWxsKDApOyBcbiAgICAgICAgdGhpcy5yYW5rcyA9IG5ldyBBcnJheShuICsgMSkuZmlsbCgwKTsgXG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPD0gbjsgaSsrKXtcbiAgICAgICAgICAgIHRoaXMucm9vdHNbaV0gPSBpO1xuICAgICAgICB9XG4gICAgfSBcbiAgXG4gICAgLy8gZnVuY3Rpb25zIHRvIGJlIGltcGxlbWVudGVkIFxuICAgIC8vIGZpbmQgaGVhZFxuICAgIGZpbmQoZWxlbWVudCkgXG4gICAgeyBcbiAgICAgICAgdmFyIHRtcCA9IGVsZW1lbnQ7XG4gICAgICAgIHZhciByb290cyA9IHRoaXMucm9vdHM7XG4gICAgICAgIHdoaWxlKHJvb3RzW3RtcF0gIT09IHRtcCkge1xuICAgICAgICAgICAgdG1wID0gcm9vdHNbdG1wXTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZShyb290c1tlbGVtZW50XSAhPT0gdG1wKSB7XG4gICAgICAgICAgICB2YXIgdG1wMiA9IHJvb3RzW2VsZW1lbnRdO1xuICAgICAgICAgICAgcm9vdHNbZWxlbWVudF0gPSB0bXA7XG4gICAgICAgICAgICBlbGVtZW50ID0gdG1wMjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG1wO1xuICAgIH0gXG4gICAgLy8gdW5pb24oKSBcbiAgICB1bmlvbih4LCB5KSBcbiAgICB7IFxuICAgICAgICB2YXIgeHIgPSB0aGlzLmZpbmQoeCksIHlyID0gdGhpcy5maW5kKHkpO1xuICAgICAgICBpZih4ciA9PT0geXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmFua3MgPSB0aGlzLnJhbmtzLCByb290cyA9IHRoaXMucm9vdHMsIHhkID0gcmFua3NbeHJdLCB5ZCA9IHJhbmtzW3lyXTtcbiAgICAgICAgaWYoeGQgPCB5ZCkge1xuICAgICAgICAgICAgcm9vdHNbeHJdID0geXI7XG4gICAgICAgIH0gXG4gICAgICAgIGVsc2UgaWYoeWQgPCB4ZCkge1xuICAgICAgICAgICAgcm9vdHNbeXJdID0geHI7XG4gICAgICAgIH0gXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcm9vdHNbeXJdID0geHI7XG4gICAgICAgICAgICArK3JhbmtzW3hyXTtcbiAgICAgICAgfVxuICAgIH0gXG59IFxuXG5leHBvcnRzLlVuaW9uRmluZCA9IFVuaW9uRmluZDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "union_find.js"
      ],
      "names": [
        "UnionFind",
        "n",
        "roots",
        "Array",
        "fill",
        "ranks",
        "i",
        "element",
        "tmp",
        "tmp2",
        "x",
        "y",
        "xr",
        "find",
        "yr",
        "xd",
        "yd",
        "exports"
      ],
      "mappings": ";;;;;;;;AAAA;IACMA,S;AAEF;AACA,qBAAYC,CAAZ,EACA;AAAA;;AACI,SAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAUF,CAAC,GAAG,CAAd,EAAiBG,IAAjB,CAAsB,CAAtB,CAAb;AACA,SAAKC,KAAL,GAAa,IAAIF,KAAJ,CAAUF,CAAC,GAAG,CAAd,EAAiBG,IAAjB,CAAsB,CAAtB,CAAb;;AACA,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIL,CAApB,EAAuBK,CAAC,EAAxB,EAA2B;AACvB,WAAKJ,KAAL,CAAWI,CAAX,IAAgBA,CAAhB;AACH;AACJ,G,CAED;AACA;;;;;yBACKC,O,EACL;AACI,UAAIC,GAAG,GAAGD,OAAV;AACA,UAAIL,KAAK,GAAG,KAAKA,KAAjB;;AACA,aAAMA,KAAK,CAACM,GAAD,CAAL,KAAeA,GAArB,EAA0B;AACtBA,QAAAA,GAAG,GAAGN,KAAK,CAACM,GAAD,CAAX;AACH;;AACD,aAAMN,KAAK,CAACK,OAAD,CAAL,KAAmBC,GAAzB,EAA8B;AAC1B,YAAIC,IAAI,GAAGP,KAAK,CAACK,OAAD,CAAhB;AACAL,QAAAA,KAAK,CAACK,OAAD,CAAL,GAAiBC,GAAjB;AACAD,QAAAA,OAAO,GAAGE,IAAV;AACH;;AACD,aAAOD,GAAP;AACH,K,CACD;;;;0BACME,C,EAAGC,C,EACT;AACI,UAAIC,EAAE,GAAG,KAAKC,IAAL,CAAUH,CAAV,CAAT;AAAA,UAAuBI,EAAE,GAAG,KAAKD,IAAL,CAAUF,CAAV,CAA5B;;AACA,UAAGC,EAAE,KAAKE,EAAV,EAAc;AACV;AACH;;AACD,UAAIT,KAAK,GAAG,KAAKA,KAAjB;AAAA,UAAwBH,KAAK,GAAG,KAAKA,KAArC;AAAA,UAA4Ca,EAAE,GAAGV,KAAK,CAACO,EAAD,CAAtD;AAAA,UAA4DI,EAAE,GAAGX,KAAK,CAACS,EAAD,CAAtE;;AACA,UAAGC,EAAE,GAAGC,EAAR,EAAY;AACRd,QAAAA,KAAK,CAACU,EAAD,CAAL,GAAYE,EAAZ;AACH,OAFD,MAGK,IAAGE,EAAE,GAAGD,EAAR,EAAY;AACbb,QAAAA,KAAK,CAACY,EAAD,CAAL,GAAYF,EAAZ;AACH,OAFI,MAGA;AACDV,QAAAA,KAAK,CAACY,EAAD,CAAL,GAAYF,EAAZ;AACA,UAAEP,KAAK,CAACO,EAAD,CAAP;AACH;AACJ;;;;;;AAGLK,OAAO,CAACjB,SAAR,GAAoBA,SAApB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/utils/",
      "sourcesContent": [
        "// PriorityQueue class \nclass UnionFind { \n  \n    // An array is used to implement priority \n    constructor(n) \n    { \n        this.roots = new Array(n + 1).fill(0); \n        this.ranks = new Array(n + 1).fill(0); \n        for(var i = 0; i <= n; i++){\n            this.roots[i] = i;\n        }\n    } \n  \n    // functions to be implemented \n    // find head\n    find(element) \n    { \n        var tmp = element;\n        var roots = this.roots;\n        while(roots[tmp] !== tmp) {\n            tmp = roots[tmp];\n        }\n        while(roots[element] !== tmp) {\n            var tmp2 = roots[element];\n            roots[element] = tmp;\n            element = tmp2;\n        }\n        return tmp;\n    } \n    // union() \n    union(x, y) \n    { \n        var xr = this.find(x), yr = this.find(y);\n        if(xr === yr) {\n            return;\n        }\n        var ranks = this.ranks, roots = this.roots, xd = ranks[xr], yd = ranks[yr];\n        if(xd < yd) {\n            roots[xr] = yr;\n        } \n        else if(yd < xd) {\n            roots[yr] = xr;\n        } \n        else {\n            roots[yr] = xr;\n            ++ranks[xr];\n        }\n    } \n} \n\nexports.UnionFind = UnionFind;"
      ]
    },
    "sourceType": "script",
    "mtime": 1581101186539
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar saveLog = require('./save-log');\n\nvar updateUser = require('./update-user');\n\nrouter.use(saveLog);\nrouter.use(updateUser);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwic2F2ZUxvZyIsInVwZGF0ZVVzZXIiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxJQUFNQyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXZCOztBQUNBLElBQU1JLFVBQVUsR0FBR0osT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBRUFDLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXRixPQUFYO0FBQ0FGLE1BQU0sQ0FBQ0ksR0FBUCxDQUFXRCxVQUFYO0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2p1bXB3bWsvRG9jdW1lbnRzL1llYXI0XzIvc2VuaW9yX3Byb2plY3QvbG9naWNHYW1lV2l0aEJsb2NrbHktYmFja2VuZC9hcHAvbG9ncy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuY29uc3Qgc2F2ZUxvZyA9IHJlcXVpcmUoJy4vc2F2ZS1sb2cnKTtcbmNvbnN0IHVwZGF0ZVVzZXIgPSByZXF1aXJlKCcuL3VwZGF0ZS11c2VyJyk7XG5cbnJvdXRlci51c2Uoc2F2ZUxvZyk7XG5yb3V0ZXIudXNlKHVwZGF0ZVVzZXIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "saveLog",
        "updateUser",
        "use",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,IAAMC,OAAO,GAAGH,OAAO,CAAC,YAAD,CAAvB;;AACA,IAAMI,UAAU,GAAGJ,OAAO,CAAC,eAAD,CAA1B;;AAEAC,MAAM,CAACI,GAAP,CAAWF,OAAX;AACAF,MAAM,CAACI,GAAP,CAAWD,UAAX;AAEAE,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\n\nconst saveLog = require('./save-log');\nconst updateUser = require('./update-user');\n\nrouter.use(saveLog);\nrouter.use(updateUser);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586095715064
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/save-log.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/save-log.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/save-log.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/save-log.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
        "sourceFileName": "save-log.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _utils = require(\"../utils/utils\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar db = require('../db');\n\n// const ref = await db.collection('retailer').add(retailer)\n//   console.log(ref.id)\n//   const documentRef = db.collection('retailer').doc(ref.id)\n//   const userRef = await db.collection('users').doc(uid).set({\n//     username: retailer['username'],\n//     ref: documentRef\n//   })\n// var addDoc = db\n//     .collection('users')\n//     .add({\n//       name: 'Tokyo',\n//       country: 'Japan'\n//     })\n//     .then(ref => {\n//       console.log('Added document with ID: ', ref.id);\n//     });\nrouter.post('/save-log', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, maps, otherProps, addDoc;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            // console.log(req.body);\n            _req$body = req.body, maps = _req$body.maps, otherProps = _objectWithoutProperties(_req$body, [\"maps\"]);\n            maps = (0, _utils.arrToObject)(maps);\n            addDoc = db.collection('log').add(_objectSpread({\n              maps: maps\n            }, otherProps)).then(function (ref) {\n              console.log('Added document with ID: ', ref.id);\n            });\n            _context.next = 10;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", res.status(200).json({\n              res: 'failure'\n            }));\n\n          case 10:\n            return _context.abrupt(\"return\", res.status(200).json({\n              res: 'success'\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmUtbG9nLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGIiLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsIm1hcHMiLCJvdGhlclByb3BzIiwiYWRkRG9jIiwiY29sbGVjdGlvbiIsImFkZCIsInRoZW4iLCJyZWYiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJzdGF0dXMiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7OztBQUpBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQWxCOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUFDLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLFdBQVo7QUFBQSxxRUFBeUIsaUJBQU9DLEdBQVAsRUFBWUMsR0FBWjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFTckI7QUFUcUIsd0JBVVNELEdBQUcsQ0FBQ0UsSUFWYixFQVVmQyxJQVZlLGFBVWZBLElBVmUsRUFVTkMsVUFWTTtBQVdyQkQsWUFBQUEsSUFBSSxHQUFHLHdCQUFZQSxJQUFaLENBQVA7QUFDSUUsWUFBQUEsTUFaaUIsR0FZUlAsRUFBRSxDQUNaUSxVQURVLENBQ0MsS0FERCxFQUVWQyxHQUZVO0FBRUpKLGNBQUFBLElBQUksRUFBSkE7QUFGSSxlQUVLQyxVQUZMLEdBR1ZJLElBSFUsQ0FHTCxVQUFBQyxHQUFHLEVBQUk7QUFDWEMsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVosRUFBd0NGLEdBQUcsQ0FBQ0csRUFBNUM7QUFDRCxhQUxVLENBWlE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQW1CckJGLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQW5CcUIsNkNBb0JkVixHQUFHLENBQUNZLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFYixjQUFBQSxHQUFHLEVBQUU7QUFBUCxhQUFyQixDQXBCYzs7QUFBQTtBQUFBLDZDQXdCaEJBLEdBQUcsQ0FBQ1ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUViLGNBQUFBLEdBQUcsRUFBRTtBQUFQLGFBQXJCLENBeEJnQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF6Qjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQTJCQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2p1bXB3bWsvRG9jdW1lbnRzL1llYXI0XzIvc2VuaW9yX3Byb2plY3QvbG9naWNHYW1lV2l0aEJsb2NrbHktYmFja2VuZC9hcHAvbG9ncy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vZGInKTtcblxuaW1wb3J0IHsgYXJyVG9PYmplY3QgfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5cbi8vIGNvbnN0IHJlZiA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3JldGFpbGVyJykuYWRkKHJldGFpbGVyKVxuLy8gICBjb25zb2xlLmxvZyhyZWYuaWQpXG4vLyAgIGNvbnN0IGRvY3VtZW50UmVmID0gZGIuY29sbGVjdGlvbigncmV0YWlsZXInKS5kb2MocmVmLmlkKVxuLy8gICBjb25zdCB1c2VyUmVmID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModWlkKS5zZXQoe1xuLy8gICAgIHVzZXJuYW1lOiByZXRhaWxlclsndXNlcm5hbWUnXSxcbi8vICAgICByZWY6IGRvY3VtZW50UmVmXG4vLyAgIH0pXG4vLyB2YXIgYWRkRG9jID0gZGJcbi8vICAgICAuY29sbGVjdGlvbigndXNlcnMnKVxuLy8gICAgIC5hZGQoe1xuLy8gICAgICAgbmFtZTogJ1Rva3lvJyxcbi8vICAgICAgIGNvdW50cnk6ICdKYXBhbidcbi8vICAgICB9KVxuLy8gICAgIC50aGVuKHJlZiA9PiB7XG4vLyAgICAgICBjb25zb2xlLmxvZygnQWRkZWQgZG9jdW1lbnQgd2l0aCBJRDogJywgcmVmLmlkKTtcbi8vICAgICB9KTtcblxucm91dGVyLnBvc3QoJy9zYXZlLWxvZycsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAvLyBjb25zdCByZWYgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdsb2cnKVxuICAvLyAgIGNvbnNvbGUubG9nKHJlZi5pZClcbiAgLy8gICBjb25zdCBkb2N1bWVudFJlZiA9IGRiLmNvbGxlY3Rpb24oJ3JldGFpbGVyJykuZG9jKHJlZi5pZClcbiAgLy8gICBjb25zdCB1c2VyUmVmID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS5kb2ModWlkKS5zZXQoe1xuICAvLyAgICAgdXNlcm5hbWU6IHJldGFpbGVyWyd1c2VybmFtZSddLFxuICAvLyAgICAgcmVmOiBkb2N1bWVudFJlZlxuICAvLyAgIH0pXG4gIHRyeSB7XG4gICAgLy8gY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICAgIGxldCB7IG1hcHMsIC4uLm90aGVyUHJvcHMgfSA9IHJlcS5ib2R5O1xuICAgIG1hcHMgPSBhcnJUb09iamVjdChtYXBzKTtcbiAgICBsZXQgYWRkRG9jID0gZGJcbiAgICAgIC5jb2xsZWN0aW9uKCdsb2cnKVxuICAgICAgLmFkZCh7IG1hcHMsIC4uLm90aGVyUHJvcHMgfSlcbiAgICAgIC50aGVuKHJlZiA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdBZGRlZCBkb2N1bWVudCB3aXRoIElEOiAnLCByZWYuaWQpO1xuICAgICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHJlczogJ2ZhaWx1cmUnIH0pO1xuICB9XG5cbiAgLy8gICAvLyBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeSh0aWxlcykpO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyByZXM6ICdzdWNjZXNzJyB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "save-log.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "post",
        "req",
        "res",
        "body",
        "maps",
        "otherProps",
        "addDoc",
        "collection",
        "add",
        "then",
        "ref",
        "console",
        "log",
        "id",
        "status",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;AAIA;;;;;;;;;;;;;;;;AAJA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGH,OAAO,CAAC,OAAD,CAAlB;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,MAAM,CAACG,IAAP,CAAY,WAAZ;AAAA,qEAAyB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AASrB;AATqB,wBAUSD,GAAG,CAACE,IAVb,EAUfC,IAVe,aAUfA,IAVe,EAUNC,UAVM;AAWrBD,YAAAA,IAAI,GAAG,wBAAYA,IAAZ,CAAP;AACIE,YAAAA,MAZiB,GAYRP,EAAE,CACZQ,UADU,CACC,KADD,EAEVC,GAFU;AAEJJ,cAAAA,IAAI,EAAJA;AAFI,eAEKC,UAFL,GAGVI,IAHU,CAGL,UAAAC,GAAG,EAAI;AACXC,cAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAG,CAACG,EAA5C;AACD,aALU,CAZQ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBrBF,YAAAA,OAAO,CAACC,GAAR;AAnBqB,6CAoBdV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEb,cAAAA,GAAG,EAAE;AAAP,aAArB,CApBc;;AAAA;AAAA,6CAwBhBA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEb,cAAAA,GAAG,EAAE;AAAP,aAArB,CAxBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AA2BAc,MAAM,CAACC,OAAP,GAAiBpB,MAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst db = require('../db');\n\nimport { arrToObject } from '../utils/utils';\n\n// const ref = await db.collection('retailer').add(retailer)\n//   console.log(ref.id)\n//   const documentRef = db.collection('retailer').doc(ref.id)\n//   const userRef = await db.collection('users').doc(uid).set({\n//     username: retailer['username'],\n//     ref: documentRef\n//   })\n// var addDoc = db\n//     .collection('users')\n//     .add({\n//       name: 'Tokyo',\n//       country: 'Japan'\n//     })\n//     .then(ref => {\n//       console.log('Added document with ID: ', ref.id);\n//     });\n\nrouter.post('/save-log', async (req, res) => {\n  // const ref = await db.collection('log')\n  //   console.log(ref.id)\n  //   const documentRef = db.collection('retailer').doc(ref.id)\n  //   const userRef = await db.collection('users').doc(uid).set({\n  //     username: retailer['username'],\n  //     ref: documentRef\n  //   })\n  try {\n    // console.log(req.body);\n    let { maps, ...otherProps } = req.body;\n    maps = arrToObject(maps);\n    let addDoc = db\n      .collection('log')\n      .add({ maps, ...otherProps })\n      .then(ref => {\n        console.log('Added document with ID: ', ref.id);\n      });\n  } catch (error) {\n    console.log(error);\n    return res.status(200).json({ res: 'failure' });\n  }\n\n  //   // console.log(JSON.stringify(tiles));\n  return res.status(200).json({ res: 'success' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581318738274
  },
  "{\"sourceRoot\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"filename\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/update-user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/update-user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/update-user.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/update-user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
        "sourceFileName": "update-user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require('express');\n\nvar router = express.Router();\n\nvar db = require('../db');\n\nrouter.post('/update-user', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var user, uid, userRef;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            user = req.body.user;\n            uid = user.id;\n            console.log('update user at ');\n            console.log(uid);\n            console.log(user);\n            _context.next = 8;\n            return db.collection('users').doc(uid).set(_objectSpread({}, user));\n\n          case 8:\n            userRef = _context.sent;\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            return _context.abrupt(\"return\", res.status(200).json({\n              res: 'failure'\n            }));\n\n          case 15:\n            return _context.abrupt(\"return\", res.status(200).json({\n              res: 'success'\n            }));\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZS11c2VyLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZGIiLCJwb3N0IiwicmVxIiwicmVzIiwidXNlciIsImJvZHkiLCJ1aWQiLCJpZCIsImNvbnNvbGUiLCJsb2ciLCJjb2xsZWN0aW9uIiwiZG9jIiwic2V0IiwidXNlclJlZiIsInN0YXR1cyIsImpzb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFsQjs7QUFFQUMsTUFBTSxDQUFDRyxJQUFQLENBQVksY0FBWjtBQUFBLHFFQUE0QixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWxCQyxZQUFBQSxJQUZrQixHQUVURixHQUFHLENBQUNHLElBRkssQ0FFbEJELElBRmtCO0FBR2xCRSxZQUFBQSxHQUhrQixHQUdaRixJQUFJLENBQUNHLEVBSE87QUFJeEJDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaO0FBQ0FELFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFaO0FBQ0FFLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxJQUFaO0FBTndCO0FBQUEsbUJBT0ZKLEVBQUUsQ0FDckJVLFVBRG1CLENBQ1IsT0FEUSxFQUVuQkMsR0FGbUIsQ0FFZkwsR0FGZSxFQUduQk0sR0FIbUIsbUJBR1ZSLElBSFUsRUFQRTs7QUFBQTtBQU9sQlMsWUFBQUEsT0FQa0I7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQVl4QkwsWUFBQUEsT0FBTyxDQUFDQyxHQUFSO0FBWndCLDZDQWFqQk4sR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFBRVosY0FBQUEsR0FBRyxFQUFFO0FBQVAsYUFBckIsQ0FiaUI7O0FBQUE7QUFBQSw2Q0FpQm5CQSxHQUFHLENBQUNXLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFWixjQUFBQSxHQUFHLEVBQUU7QUFBUCxhQUFyQixDQWpCbUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBNUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFvQkFhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5CLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qdW1wd21rL0RvY3VtZW50cy9ZZWFyNF8yL3Nlbmlvcl9wcm9qZWN0L2xvZ2ljR2FtZVdpdGhCbG9ja2x5LWJhY2tlbmQvYXBwL2xvZ3MvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2RiJyk7XG5cbnJvdXRlci5wb3N0KCcvdXBkYXRlLXVzZXInLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBsZXQgeyB1c2VyIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCB1aWQgPSB1c2VyLmlkO1xuICAgIGNvbnNvbGUubG9nKCd1cGRhdGUgdXNlciBhdCAnKTtcbiAgICBjb25zb2xlLmxvZyh1aWQpO1xuICAgIGNvbnNvbGUubG9nKHVzZXIpO1xuICAgIGNvbnN0IHVzZXJSZWYgPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oJ3VzZXJzJylcbiAgICAgIC5kb2ModWlkKVxuICAgICAgLnNldCh7IC4uLnVzZXIgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHJlczogJ2ZhaWx1cmUnIH0pO1xuICB9XG5cbiAgLy8gICAvLyBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeSh0aWxlcykpO1xuICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyByZXM6ICdzdWNjZXNzJyB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "update-user.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "db",
        "post",
        "req",
        "res",
        "user",
        "body",
        "uid",
        "id",
        "console",
        "log",
        "collection",
        "doc",
        "set",
        "userRef",
        "status",
        "json",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,EAAE,GAAGH,OAAO,CAAC,OAAD,CAAlB;;AAEAC,MAAM,CAACG,IAAP,CAAY,cAAZ;AAAA,qEAA4B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,YAAAA,IAFkB,GAETF,GAAG,CAACG,IAFK,CAElBD,IAFkB;AAGlBE,YAAAA,GAHkB,GAGZF,IAAI,CAACG,EAHO;AAIxBC,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AANwB;AAAA,mBAOFJ,EAAE,CACrBU,UADmB,CACR,OADQ,EAEnBC,GAFmB,CAEfL,GAFe,EAGnBM,GAHmB,mBAGVR,IAHU,EAPE;;AAAA;AAOlBS,YAAAA,OAPkB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYxBL,YAAAA,OAAO,CAACC,GAAR;AAZwB,6CAajBN,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEZ,cAAAA,GAAG,EAAE;AAAP,aAArB,CAbiB;;AAAA;AAAA,6CAiBnBA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEZ,cAAAA,GAAG,EAAE;AAAP,aAArB,CAjBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAoBAa,MAAM,CAACC,OAAP,GAAiBnB,MAAjB",
      "sourceRoot": "/Users/jumpwmk/Documents/Year4_2/senior_project/logicGameWithBlockly-backend/app/logs/",
      "sourcesContent": [
        "const express = require('express');\nconst router = express.Router();\nconst db = require('../db');\n\nrouter.post('/update-user', async (req, res) => {\n  try {\n    let { user } = req.body;\n    const uid = user.id;\n    console.log('update user at ');\n    console.log(uid);\n    console.log(user);\n    const userRef = await db\n      .collection('users')\n      .doc(uid)\n      .set({ ...user });\n  } catch (error) {\n    console.log(error);\n    return res.status(200).json({ res: 'failure' });\n  }\n\n  //   // console.log(JSON.stringify(tiles));\n  return res.status(200).json({ res: 'success' });\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1586095669720
  }
}